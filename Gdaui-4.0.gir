<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.1"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Atk" version="1.0"/>
  <include name="GLib" version="2.0"/>
  <include name="GModule" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Gda" version="4.0"/>
  <include name="Gdk" version="2.0"/>
  <include name="GdkPixbuf" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <include name="Gtk" version="2.0"/>
  <include name="Pango" version="1.0"/>
  <include name="cairo" version="1.0"/>
  <include name="libxml2" version="2.0"/>
  <namespace name="Gdaui"
             version="4.0"
             shared-library="libgda-ui-4.0.so.4"
             c:prefix="Gdaui">
    <constant name="ATTRIBUTE_PLUGIN" value="__gdaui_attr_plugin">
      <type name="utf8"/>
    </constant>
    <enumeration name="Action" c:type="GdauiAction">
      <member name="new_data" value="0" c:identifier="GDAUI_ACTION_NEW_DATA"/>
      <member name="write_modified_data"
              value="1"
              c:identifier="GDAUI_ACTION_WRITE_MODIFIED_DATA"/>
      <member name="delete_selected_data"
              value="2"
              c:identifier="GDAUI_ACTION_DELETE_SELECTED_DATA"/>
      <member name="undelete_selected_data"
              value="3"
              c:identifier="GDAUI_ACTION_UNDELETE_SELECTED_DATA"/>
      <member name="reset_data"
              value="4"
              c:identifier="GDAUI_ACTION_RESET_DATA"/>
      <member name="move_first_record"
              value="5"
              c:identifier="GDAUI_ACTION_MOVE_FIRST_RECORD"/>
      <member name="move_prev_record"
              value="6"
              c:identifier="GDAUI_ACTION_MOVE_PREV_RECORD"/>
      <member name="move_next_record"
              value="7"
              c:identifier="GDAUI_ACTION_MOVE_NEXT_RECORD"/>
      <member name="move_last_record"
              value="8"
              c:identifier="GDAUI_ACTION_MOVE_LAST_RECORD"/>
      <member name="move_first_chunck"
              value="9"
              c:identifier="GDAUI_ACTION_MOVE_FIRST_CHUNCK"/>
      <member name="move_prev_chunck"
              value="10"
              c:identifier="GDAUI_ACTION_MOVE_PREV_CHUNCK"/>
      <member name="move_next_chunck"
              value="11"
              c:identifier="GDAUI_ACTION_MOVE_NEXT_CHUNCK"/>
      <member name="move_last_chunck"
              value="12"
              c:identifier="GDAUI_ACTION_MOVE_LAST_CHUNCK"/>
    </enumeration>
    <bitfield name="ActionMode" c:type="GdauiActionMode">
      <member name="navigation_arrows"
              value="1"
              c:identifier="GDAUI_ACTION_NAVIGATION_ARROWS"/>
      <member name="navigation_scroll"
              value="2"
              c:identifier="GDAUI_ACTION_NAVIGATION_SCROLL"/>
      <member name="modif_auto_commit"
              value="4"
              c:identifier="GDAUI_ACTION_MODIF_AUTO_COMMIT"/>
      <member name="modif_commit_immediate"
              value="8"
              c:identifier="GDAUI_ACTION_MODIF_COMMIT_IMMEDIATE"/>
      <member name="ask_confirm_update"
              value="16"
              c:identifier="GDAUI_ACTION_ASK_CONFIRM_UPDATE"/>
      <member name="ask_confirm_delete"
              value="32"
              c:identifier="GDAUI_ACTION_ASK_CONFIRM_DELETE"/>
      <member name="ask_confirm_insert"
              value="64"
              c:identifier="GDAUI_ACTION_ASK_CONFIRM_INSERT"/>
      <member name="report_error"
              value="128"
              c:identifier="GDAUI_ACTION_REPORT_ERROR"/>
    </bitfield>
    <class name="BasicForm"
           c:type="GdauiBasicForm"
           parent="Gtk.VBox"
           glib:type-name="GdauiBasicForm"
           glib:get-type="gdaui_basic_form_get_type"
           glib:type-struct="BasicFormClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gdaui_basic_form_new">
        <return-value transfer-ownership="full">
          <type name="BasicForm" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="data_set" transfer-ownership="none">
            <type name="Gda.Set" c:type="GdaSet*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_in_dialog"
                   c:identifier="gdaui_basic_form_new_in_dialog">
        <return-value transfer-ownership="full">
          <type name="BasicForm" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="data_set" transfer-ownership="none">
            <type name="Gda.Set" c:type="GdaSet*"/>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <type name="Gtk.Window" c:type="GtkWindow*"/>
          </parameter>
          <parameter name="title" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="header" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_data_set" c:identifier="gdaui_basic_form_get_data_set">
        <return-value transfer-ownership="full">
          <type name="Gda.Set" c:type="GdaSet*"/>
        </return-value>
      </method>
      <method name="is_valid" c:identifier="gdaui_basic_form_is_valid">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="has_changed" c:identifier="gdaui_basic_form_has_changed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="reset" c:identifier="gdaui_basic_form_reset">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set_as_reference"
              c:identifier="gdaui_basic_form_set_as_reference">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="entry_set_visible"
              c:identifier="gdaui_basic_form_entry_set_visible">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="holder" transfer-ownership="none">
            <type name="Gda.Holder" c:type="GdaHolder*"/>
          </parameter>
          <parameter name="show" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="entry_grab_focus"
              c:identifier="gdaui_basic_form_entry_grab_focus">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="holder" transfer-ownership="none">
            <type name="Gda.Holder" c:type="GdaHolder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="entry_set_editable"
              c:identifier="gdaui_basic_form_entry_set_editable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="holder" transfer-ownership="none">
            <type name="Gda.Holder" c:type="GdaHolder*"/>
          </parameter>
          <parameter name="editable" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_entries_to_default"
              c:identifier="gdaui_basic_form_set_entries_to_default">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_entry_widget"
              c:identifier="gdaui_basic_form_get_entry_widget">
        <return-value transfer-ownership="full">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="holder" transfer-ownership="none">
            <type name="Gda.Holder" c:type="GdaHolder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_label_widget"
              c:identifier="gdaui_basic_form_get_label_widget">
        <return-value transfer-ownership="full">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="holder" transfer-ownership="none">
            <type name="Gda.Holder" c:type="GdaHolder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_layout_from_file"
              c:identifier="gdaui_basic_form_set_layout_from_file">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="form_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_place_holder"
              c:identifier="gdaui_basic_form_get_place_holder">
        <return-value transfer-ownership="full">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="placeholder_id" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_to_size_group"
              c:identifier="gdaui_basic_form_add_to_size_group">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="size_group" transfer-ownership="none">
            <type name="Gtk.SizeGroup" c:type="GtkSizeGroup*"/>
          </parameter>
          <parameter name="part" transfer-ownership="none">
            <type name="BasicFormPart" c:type="GdauiBasicFormPart"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_from_size_group"
              c:identifier="gdaui_basic_form_remove_from_size_group">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="size_group" transfer-ownership="none">
            <type name="Gtk.SizeGroup" c:type="GtkSizeGroup*"/>
          </parameter>
          <parameter name="part" transfer-ownership="none">
            <type name="BasicFormPart" c:type="GdauiBasicFormPart"/>
          </parameter>
        </parameters>
      </method>
      <property name="can-expand" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="entries-auto-default"
                writable="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="headers-sensitive"
                writable="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="paramlist" writable="1" transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </property>
      <property name="show-actions" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="xml-layout"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </property>
      <field name="object">
        <type name="Gtk.VBox" c:type="GtkVBox"/>
      </field>
      <field name="priv">
        <type name="BasicFormPriv" c:type="GdauiBasicFormPriv*"/>
      </field>
      <glib:signal name="activated">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="holder-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Gda.Holder" c:type="GdaHolder"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="layout-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="BasicFormClass"
            c:type="GdauiBasicFormClass"
            glib:is-gtype-struct-for="BasicForm">
      <field name="parent_class">
        <type name="Gtk.VBoxClass" c:type="GtkVBoxClass"/>
      </field>
      <field name="holder_changed">
        <callback name="holder_changed" c:type="holder_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="form" transfer-ownership="none">
              <type name="BasicForm" c:type="GdauiBasicForm*"/>
            </parameter>
            <parameter name="holder" transfer-ownership="none">
              <type name="Gda.Holder" c:type="GdaHolder*"/>
            </parameter>
            <parameter name="is_user_action" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="activated">
        <callback name="activated" c:type="activated">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="form" transfer-ownership="none">
              <type name="BasicForm" c:type="GdauiBasicForm*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="layout_changed">
        <callback name="layout_changed" c:type="layout_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="form" transfer-ownership="none">
              <type name="BasicForm" c:type="GdauiBasicForm*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="BasicFormPart" c:type="GdauiBasicFormPart">
      <member name="labels" value="0" c:identifier="GDAUI_BASIC_FORM_LABELS"/>
      <member name="entries"
              value="1"
              c:identifier="GDAUI_BASIC_FORM_ENTRIES"/>
    </enumeration>
    <record name="BasicFormPriv" c:type="GdauiBasicFormPriv">
    </record>
    <constant name="COLOR_NORMAL_DEFAULT" value="#6495ed">
      <type name="utf8"/>
    </constant>
    <constant name="COLOR_NORMAL_INVALID" value="#ff6a6a">
      <type name="utf8"/>
    </constant>
    <constant name="COLOR_NORMAL_MODIF" value="#cacaee">
      <type name="utf8"/>
    </constant>
    <constant name="COLOR_NORMAL_NULL" value="#00cd66">
      <type name="utf8"/>
    </constant>
    <constant name="COLOR_PRELIGHT_DEFAULT" value="#75a6fe">
      <type name="utf8"/>
    </constant>
    <constant name="COLOR_PRELIGHT_INVALID" value="#ff7b7b">
      <type name="utf8"/>
    </constant>
    <constant name="COLOR_PRELIGHT_MODIF" value="#cfcffe">
      <type name="utf8"/>
    </constant>
    <constant name="COLOR_PRELIGHT_NULL" value="#00ef77">
      <type name="utf8"/>
    </constant>
    <callback name="CellCreateFunc" c:type="GdauiCellCreateFunc">
      <return-value transfer-ownership="full">
        <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
      </return-value>
      <parameters>
        <parameter transfer-ownership="none">
          <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Cloud"
           c:type="GdauiCloud"
           parent="Gtk.VBox"
           glib:type-name="GdauiCloud"
           glib:get-type="gdaui_cloud_get_type"
           glib:type-struct="CloudClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataSelector"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gdaui_cloud_new">
        <return-value transfer-ownership="full">
          <type name="Cloud" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
          <parameter name="label_column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="weight_column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_selection_mode"
              c:identifier="gdaui_cloud_set_selection_mode">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <type name="Gtk.SelectionMode" c:type="GtkSelectionMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="filter" c:identifier="gdaui_cloud_filter">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="filter" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_filter_widget"
              c:identifier="gdaui_cloud_create_filter_widget">
        <return-value transfer-ownership="full">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </method>
      <method name="set_weight_func"
              c:identifier="gdaui_cloud_set_weight_func">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="CloudWeightFunc" c:type="GdauiCloudWeightFunc"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <property name="label-column" writable="1" transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <property name="max-scale" writable="1" transfer-ownership="none">
        <type name="double" c:type="gdouble"/>
      </property>
      <property name="min-scale" writable="1" transfer-ownership="none">
        <type name="double" c:type="gdouble"/>
      </property>
      <property name="model" writable="1" transfer-ownership="none">
        <type name="Gda.DataModel" c:type="GdaDataModel"/>
      </property>
      <property name="weight-column" writable="1" transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <field name="object">
        <type name="Gtk.VBox" c:type="GtkVBox"/>
      </field>
      <field name="priv">
        <type name="CloudPriv" c:type="GdauiCloudPriv*"/>
      </field>
      <glib:signal name="activate">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="CloudClass"
            c:type="GdauiCloudClass"
            glib:is-gtype-struct-for="Cloud">
      <field name="parent_class">
        <type name="Gtk.VBoxClass" c:type="GtkVBoxClass"/>
      </field>
      <field name="activate">
        <callback name="activate" c:type="activate">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="cloud" transfer-ownership="none">
              <type name="Cloud" c:type="GdauiCloud*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="CloudPriv" c:type="GdauiCloudPriv">
    </record>
    <callback name="CloudWeightFunc" c:type="GdauiCloudWeightFunc">
      <return-value transfer-ownership="none">
        <type name="double" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="model" transfer-ownership="none">
          <type name="Gda.DataModel" c:type="GdaDataModel*"/>
        </parameter>
        <parameter name="row" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Combo"
           c:type="GdauiCombo"
           parent="Gtk.ComboBox"
           glib:type-name="GdauiCombo"
           glib:get-type="gdaui_combo_get_type"
           glib:type-struct="ComboClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataSelector"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.CellLayout"/>
      <constructor name="new" c:identifier="gdaui_combo_new">
        <return-value transfer-ownership="full">
          <type name="Combo" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <constructor name="new_with_model"
                   c:identifier="gdaui_combo_new_with_model">
        <return-value transfer-ownership="full">
          <type name="Combo" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
          <parameter name="n_cols" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="cols_index"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_model" c:identifier="gdaui_combo_set_model">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
          <parameter name="n_cols" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="cols_index"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_null" c:identifier="gdaui_combo_add_null">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="add_null" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_null_selected"
              c:identifier="gdaui_combo_is_null_selected">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <property name="as-list" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="model" writable="1" transfer-ownership="none">
        <type name="Gda.DataModel" c:type="GdaDataModel"/>
      </property>
      <field name="object">
        <type name="Gtk.ComboBox" c:type="GtkComboBox"/>
      </field>
      <field name="priv">
        <type name="ComboPrivate" c:type="GdauiComboPrivate*"/>
      </field>
    </class>
    <record name="ComboClass"
            c:type="GdauiComboClass"
            glib:is-gtype-struct-for="Combo">
      <field name="parent_class">
        <type name="Gtk.ComboBoxClass" c:type="GtkComboBoxClass"/>
      </field>
    </record>
    <record name="ComboPrivate" c:type="GdauiComboPrivate">
    </record>
    <class name="DataCellRendererBin"
           c:type="GdauiDataCellRendererBin"
           parent="Gtk.CellRendererPixbuf"
           glib:type-name="GdauiDataCellRendererBin"
           glib:get-type="gdaui_data_cell_renderer_bin_get_type"
           glib:type-struct="DataCellRendererBinClass">
      <constructor name="new" c:identifier="gdaui_data_cell_renderer_bin_new">
        <doc xml:whitespace="preserve">Creates a new #GdauiDataCellRendererBin. Adjust rendering
parameters using object properties. Object properties can be set
globally (with g_object_set()). Also, with #GtkTreeViewColumn, you
can bind a property to a value in a #GtkTreeModel. For example, you
can bind the "active" property on the cell renderer to a bin value
in the model, thus causing the check button to reflect the state of
the model.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">the new cell renderer</doc>
          <type name="DataCellRendererBin" c:type="GtkCellRenderer*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaDataHandler object</doc>
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="data-handler"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gda.DataHandler" c:type="GdaDataHandler"/>
      </property>
      <property name="editable" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="to-be-deleted"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="type"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </property>
      <property name="value" writable="1" transfer-ownership="none">
        <type name="GObject.Value" c:type="GValue"/>
      </property>
      <property name="value-attributes" writable="1" transfer-ownership="none">
        <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
      </property>
      <field name="parent">
        <type name="Gtk.CellRendererPixbuf" c:type="GtkCellRendererPixbuf"/>
      </field>
      <field name="priv">
        <type name="DataCellRendererBinPrivate"
              c:type="GdauiDataCellRendererBinPrivate*"/>
      </field>
      <glib:signal name="changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DataCellRendererBinClass"
            c:type="GdauiDataCellRendererBinClass"
            glib:is-gtype-struct-for="DataCellRendererBin">
      <field name="parent_class">
        <type name="Gtk.CellRendererPixbufClass"
              c:type="GtkCellRendererPixbufClass"/>
      </field>
      <field name="changed">
        <callback name="changed" c:type="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="cell_renderer" transfer-ownership="none">
              <type name="DataCellRendererBin"
                    c:type="GdauiDataCellRendererBin*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="new_value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="DataCellRendererBinPrivate"
            c:type="GdauiDataCellRendererBinPrivate">
    </record>
    <class name="DataCellRendererBoolean"
           c:type="GdauiDataCellRendererBoolean"
           parent="Gtk.CellRendererToggle"
           glib:type-name="GdauiDataCellRendererBoolean"
           glib:get-type="gdaui_data_cell_renderer_boolean_get_type"
           glib:type-struct="DataCellRendererBooleanClass">
      <constructor name="new"
                   c:identifier="gdaui_data_cell_renderer_boolean_new">
        <doc xml:whitespace="preserve">Creates a new #GdauiDataCellRendererBoolean. Adjust rendering
parameters using object properties. Object properties can be set
globally (with g_object_set()). Also, with #GtkTreeViewColumn, you
can bind a property to a value in a #GtkTreeModel. For example, you
can bind the "active" property on the cell renderer to a boolean value
in the model, thus causing the check button to reflect the state of
the model.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">the new cell renderer</doc>
          <type name="DataCellRendererBoolean" c:type="GtkCellRenderer*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaDataHandler object</doc>
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="data-handler"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gda.DataHandler" c:type="GdaDataHandler"/>
      </property>
      <property name="editable" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="to-be-deleted"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="type"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </property>
      <property name="value" writable="1" transfer-ownership="none">
        <type name="GObject.Value" c:type="GValue"/>
      </property>
      <property name="value-attributes" writable="1" transfer-ownership="none">
        <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
      </property>
      <field name="parent">
        <type name="Gtk.CellRendererToggle" c:type="GtkCellRendererToggle"/>
      </field>
      <field name="priv">
        <type name="DataCellRendererBooleanPrivate"
              c:type="GdauiDataCellRendererBooleanPrivate*"/>
      </field>
      <glib:signal name="changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DataCellRendererBooleanClass"
            c:type="GdauiDataCellRendererBooleanClass"
            glib:is-gtype-struct-for="DataCellRendererBoolean">
      <field name="parent_class">
        <type name="Gtk.CellRendererToggleClass"
              c:type="GtkCellRendererToggleClass"/>
      </field>
      <field name="changed">
        <callback name="changed" c:type="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="cell_renderer" transfer-ownership="none">
              <type name="DataCellRendererBoolean"
                    c:type="GdauiDataCellRendererBoolean*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="new_value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="DataCellRendererBooleanPrivate"
            c:type="GdauiDataCellRendererBooleanPrivate">
    </record>
    <class name="DataCellRendererCombo"
           c:type="GdauiDataCellRendererCombo"
           parent="Gtk.CellRendererText"
           glib:type-name="GdauiDataCellRendererCombo"
           glib:get-type="gdaui_data_cell_renderer_combo_get_type"
           glib:type-struct="DataCellRendererComboClass">
      <constructor name="new"
                   c:identifier="gdaui_data_cell_renderer_combo_new">
        <return-value transfer-ownership="full">
          <type name="DataCellRendererCombo" c:type="GtkCellRenderer*"/>
        </return-value>
        <parameters>
          <parameter name="paramlist" transfer-ownership="none">
            <type name="Set" c:type="GdauiSet*"/>
          </parameter>
          <parameter name="source" transfer-ownership="none">
            <type name="SetSource" c:type="GdauiSetSource*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="data-set"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Set" c:type="GdauiSet"/>
      </property>
      <property name="data-set-source"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </property>
      <property name="set-default-if-invalid"
                writable="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="show-expander"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="to-be-deleted"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="value-attributes" writable="1" transfer-ownership="none">
        <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
      </property>
      <property name="values"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </property>
      <property name="values-display"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </property>
      <field name="parent">
        <type name="Gtk.CellRendererText" c:type="GtkCellRendererText"/>
      </field>
      <field name="priv">
        <type name="DataCellRendererComboPrivate"
              c:type="GdauiDataCellRendererComboPrivate*"/>
      </field>
      <glib:signal name="changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="p1" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DataCellRendererComboClass"
            c:type="GdauiDataCellRendererComboClass"
            glib:is-gtype-struct-for="DataCellRendererCombo">
      <field name="parent_class">
        <type name="Gtk.CellRendererTextClass"
              c:type="GtkCellRendererTextClass"/>
      </field>
      <field name="changed">
        <callback name="changed" c:type="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="cell_renderer_combo" transfer-ownership="none">
              <type name="DataCellRendererCombo"
                    c:type="GdauiDataCellRendererCombo*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="new_values" transfer-ownership="none">
              <type name="GLib.SList" c:type="GSList*">
                <type name="any" c:type="gpointer"/>
              </type>
            </parameter>
            <parameter name="all_new_values" transfer-ownership="none">
              <type name="GLib.SList" c:type="GSList*">
                <type name="any" c:type="gpointer"/>
              </type>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="DataCellRendererComboPrivate"
            c:type="GdauiDataCellRendererComboPrivate">
    </record>
    <class name="DataCellRendererInfo"
           c:type="GdauiDataCellRendererInfo"
           parent="Gtk.CellRenderer"
           glib:type-name="GdauiDataCellRendererInfo"
           glib:get-type="gdaui_data_cell_renderer_info_get_type"
           glib:type-struct="DataCellRendererInfoClass">
      <constructor name="new" c:identifier="gdaui_data_cell_renderer_info_new">
        <doc xml:whitespace="preserve">Creates a new #GdauiDataCellRendererInfo. Adjust rendering
parameters using object properties. Object properties can be set
globally (with g_object_set()). Also, with #GtkTreeViewColumn, you
can bind a property to a value in a #GtkTreeModel. For example, you
can bind the "active" property on the cell renderer to a boolean value
in the model, thus causing the check button to reflect the state of
the model.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">the new cell renderer</doc>
          <type name="DataCellRendererInfo" c:type="GtkCellRenderer*"/>
        </return-value>
        <parameters>
          <parameter name="store" transfer-ownership="none">
            <type name="DataStore" c:type="GdauiDataStore*"/>
          </parameter>
          <parameter name="iter" transfer-ownership="none">
            <type name="Gda.DataModelIter" c:type="GdaDataModelIter*"/>
          </parameter>
          <parameter name="group" transfer-ownership="none">
            <type name="SetGroup" c:type="GdauiSetGroup*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="editable" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="group"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </property>
      <property name="iter"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gda.DataModelIter" c:type="GdaDataModelIter"/>
      </property>
      <property name="store"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="DataStore" c:type="GdauiDataStore"/>
      </property>
      <property name="to-be-deleted"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="value-attributes" writable="1" transfer-ownership="none">
        <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
      </property>
      <field name="parent">
        <type name="Gtk.CellRenderer" c:type="GtkCellRenderer"/>
      </field>
      <field name="priv">
        <type name="DataCellRendererInfoPriv"
              c:type="GdauiDataCellRendererInfoPriv*"/>
      </field>
      <glib:signal name="status-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DataCellRendererInfoClass"
            c:type="GdauiDataCellRendererInfoClass"
            glib:is-gtype-struct-for="DataCellRendererInfo">
      <field name="parent_class">
        <type name="Gtk.CellRendererClass" c:type="GtkCellRendererClass"/>
      </field>
      <field name="status_changed">
        <callback name="status_changed" c:type="status_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="cell_renderer_info" transfer-ownership="none">
              <type name="DataCellRendererInfo"
                    c:type="GdauiDataCellRendererInfo*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="requested_action" transfer-ownership="none">
              <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="DataCellRendererInfoPriv"
            c:type="GdauiDataCellRendererInfoPriv">
    </record>
    <class name="DataCellRendererTextual"
           c:type="GdauiDataCellRendererTextual"
           parent="Gtk.CellRendererText"
           glib:type-name="GdauiDataCellRendererTextual"
           glib:get-type="gdaui_data_cell_renderer_textual_get_type"
           glib:type-struct="DataCellRendererTextualClass">
      <constructor name="new"
                   c:identifier="gdaui_data_cell_renderer_textual_new">
        <return-value transfer-ownership="full">
          <type name="DataCellRendererTextual" c:type="GtkCellRenderer*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="data-handler"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gda.DataHandler" c:type="GdaDataHandler"/>
      </property>
      <property name="options"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="to-be-deleted"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="type"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </property>
      <property name="value"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </property>
      <property name="value-attributes" writable="1" transfer-ownership="none">
        <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
      </property>
      <field name="parent">
        <type name="Gtk.CellRendererText" c:type="GtkCellRendererText"/>
      </field>
      <field name="priv">
        <type name="DataCellRendererTextualPrivate"
              c:type="GdauiDataCellRendererTextualPrivate*"/>
      </field>
      <glib:signal name="changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DataCellRendererTextualClass"
            c:type="GdauiDataCellRendererTextualClass"
            glib:is-gtype-struct-for="DataCellRendererTextual">
      <field name="parent_class">
        <type name="Gtk.CellRendererTextClass"
              c:type="GtkCellRendererTextClass"/>
      </field>
      <field name="changed">
        <callback name="changed" c:type="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="cell_renderer_textual" transfer-ownership="none">
              <type name="DataCellRendererTextual"
                    c:type="GdauiDataCellRendererTextual*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="new_value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="DataCellRendererTextualPrivate"
            c:type="GdauiDataCellRendererTextualPrivate">
    </record>
    <interface name="DataEntry"
               c:type="GdauiDataEntry"
               glib:type-name="GdauiDataEntry"
               glib:get-type="gdaui_data_entry_get_type"
               glib:type-struct="DataEntryIface">
      <virtual-method name="set_value_type" invoker="set_value_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_value_type" invoker="get_value_type">
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_value" invoker="set_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_value" invoker="get_value">
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_ref_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_ref_value">
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_value_default" invoker="set_value_default">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_attributes" invoker="set_attributes">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attrs" transfer-ownership="none">
            <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
          </parameter>
          <parameter name="mask" transfer-ownership="none">
            <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_attributes" invoker="get_attributes">
        <return-value transfer-ownership="full">
          <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_handler" invoker="get_handler">
        <return-value transfer-ownership="full">
          <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="expand_in_layout" invoker="expand_in_layout">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_editable" invoker="set_editable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="editable" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_editable" invoker="get_editable">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="grab_focus" invoker="grab_focus">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <method name="set_value_type"
              c:identifier="gdaui_data_entry_set_value_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_type"
              c:identifier="gdaui_data_entry_get_value_type">
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
      </method>
      <method name="set_value" c:identifier="gdaui_data_entry_set_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value" c:identifier="gdaui_data_entry_get_value">
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
      </method>
      <method name="content_is_valid"
              c:identifier="gdaui_data_entry_content_is_valid"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_reference_value"
              c:identifier="gdaui_data_entry_set_reference_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_original_value"
              c:identifier="gdaui_data_entry_get_original_value">
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
      </method>
      <method name="reset" c:identifier="gdaui_data_entry_reset">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set_value_default"
              c:identifier="gdaui_data_entry_set_value_default">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attributes"
              c:identifier="gdaui_data_entry_set_attributes">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attrs" transfer-ownership="none">
            <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
          </parameter>
          <parameter name="mask" transfer-ownership="none">
            <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attributes"
              c:identifier="gdaui_data_entry_get_attributes">
        <return-value transfer-ownership="full">
          <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
        </return-value>
      </method>
      <method name="get_handler" c:identifier="gdaui_data_entry_get_handler">
        <return-value transfer-ownership="full">
          <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
        </return-value>
      </method>
      <method name="expand_in_layout"
              c:identifier="gdaui_data_entry_expand_in_layout">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_editable" c:identifier="gdaui_data_entry_set_editable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="editable" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_editable" c:identifier="gdaui_data_entry_get_editable">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="grab_focus" c:identifier="gdaui_data_entry_grab_focus">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <glib:signal name="contents-activated">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="contents-modified">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="contents-valid">
        <return-value transfer-ownership="full">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="status-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <record name="DataEntryIface"
            c:type="GdauiDataEntryIface"
            glib:is-gtype-struct-for="DataEntry">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="contents_modified">
        <callback name="contents_modified" c:type="contents_modified">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="contents_activated">
        <callback name="contents_activated" c:type="contents_activated">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="status_changed">
        <callback name="status_changed" c:type="status_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="contents_valid">
        <callback name="contents_valid" c:type="contents_valid" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_value_type">
        <callback name="set_value_type" c:type="set_value_type">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="GType" c:type="GType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_value_type">
        <callback name="get_value_type" c:type="get_value_type">
          <return-value transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_value">
        <callback name="set_value" c:type="set_value">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_value">
        <callback name="get_value" c:type="get_value">
          <return-value transfer-ownership="full">
            <type name="GObject.Value" c:type="GValue*"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_ref_value">
        <callback name="set_ref_value" c:type="set_ref_value">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_ref_value">
        <callback name="get_ref_value" c:type="get_ref_value">
          <return-value transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_value_default">
        <callback name="set_value_default" c:type="set_value_default">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_attributes">
        <callback name="set_attributes" c:type="set_attributes">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
            <parameter name="attrs" transfer-ownership="none">
              <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
            </parameter>
            <parameter name="mask" transfer-ownership="none">
              <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_attributes">
        <callback name="get_attributes" c:type="get_attributes">
          <return-value transfer-ownership="full">
            <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_handler">
        <callback name="get_handler" c:type="get_handler">
          <return-value transfer-ownership="full">
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="expand_in_layout">
        <callback name="expand_in_layout" c:type="expand_in_layout">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_editable">
        <callback name="set_editable" c:type="set_editable">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
            <parameter name="editable" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_editable">
        <callback name="get_editable" c:type="get_editable">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="grab_focus">
        <callback name="grab_focus" c:type="grab_focus">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gdaui_reserved1">
        <callback name="gdaui_reserved1" c:type="_gdaui_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gdaui_reserved2">
        <callback name="gdaui_reserved2" c:type="_gdaui_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gdaui_reserved3">
        <callback name="gdaui_reserved3" c:type="_gdaui_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gdaui_reserved4">
        <callback name="gdaui_reserved4" c:type="_gdaui_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="DataFilter"
           c:type="GdauiDataFilter"
           parent="Gtk.VBox"
           glib:type-name="GdauiDataFilter"
           glib:get-type="gdaui_data_filter_get_type"
           glib:type-struct="DataFilterClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gdaui_data_filter_new">
        <return-value transfer-ownership="full">
          <type name="DataFilter" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="data_widget" transfer-ownership="none">
            <type name="DataProxy" c:type="GdauiDataProxy*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="data-widget" writable="1" transfer-ownership="none">
        <type name="DataProxy" c:type="GdauiDataProxy"/>
      </property>
      <field name="object">
        <type name="Gtk.VBox" c:type="GtkVBox"/>
      </field>
      <field name="priv">
        <type name="DataFilterPriv" c:type="GdauiDataFilterPriv*"/>
      </field>
    </class>
    <record name="DataFilterClass"
            c:type="GdauiDataFilterClass"
            glib:is-gtype-struct-for="DataFilter">
      <field name="parent_class">
        <type name="Gtk.VBoxClass" c:type="GtkVBoxClass"/>
      </field>
    </record>
    <record name="DataFilterPriv" c:type="GdauiDataFilterPriv">
    </record>
    <interface name="DataProxy"
               c:type="GdauiDataProxy"
               glib:type-name="GdauiDataProxy"
               glib:get-type="gdaui_data_proxy_get_type"
               glib:type-struct="DataProxyIface">
      <virtual-method name="get_proxy" invoker="get_proxy">
        <return-value transfer-ownership="full">
          <type name="Gda.DataProxy" c:type="GdaDataProxy*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_column_editable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="editable" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="show_column_actions">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="show_actions" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_actions_group" invoker="get_actions_group">
        <return-value transfer-ownership="full">
          <type name="Gtk.ActionGroup" c:type="GtkActionGroup*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_write_mode" invoker="set_write_mode">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <type name="DataProxyWriteMode" c:type="GdauiDataProxyWriteMode"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_write_mode" invoker="get_write_mode">
        <return-value transfer-ownership="full">
          <type name="DataProxyWriteMode" c:type="GdauiDataProxyWriteMode"/>
        </return-value>
      </virtual-method>
      <method name="get_proxy" c:identifier="gdaui_data_proxy_get_proxy">
        <return-value transfer-ownership="full">
          <type name="Gda.DataProxy" c:type="GdaDataProxy*"/>
        </return-value>
      </method>
      <method name="get_actions_group"
              c:identifier="gdaui_data_proxy_get_actions_group">
        <return-value transfer-ownership="full">
          <type name="Gtk.ActionGroup" c:type="GtkActionGroup*"/>
        </return-value>
      </method>
      <method name="perform_action"
              c:identifier="gdaui_data_proxy_perform_action">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="action" transfer-ownership="none">
            <type name="Action" c:type="GdauiAction"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_set_editable"
              c:identifier="gdaui_data_proxy_column_set_editable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="editable" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_show_actions"
              c:identifier="gdaui_data_proxy_column_show_actions">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="show_actions" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_write_mode"
              c:identifier="gdaui_data_proxy_set_write_mode">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <type name="DataProxyWriteMode" c:type="GdauiDataProxyWriteMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_write_mode"
              c:identifier="gdaui_data_proxy_get_write_mode">
        <return-value transfer-ownership="full">
          <type name="DataProxyWriteMode" c:type="GdauiDataProxyWriteMode"/>
        </return-value>
      </method>
      <glib:signal name="proxy-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Gda.DataProxy" c:type="GdaDataProxy"/>
          </parameter>
        </parameters>
      </glib:signal>
    </interface>
    <record name="DataProxyIface"
            c:type="GdauiDataProxyIface"
            glib:is-gtype-struct-for="DataProxy">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_proxy">
        <callback name="get_proxy" c:type="get_proxy">
          <return-value transfer-ownership="full">
            <type name="Gda.DataProxy" c:type="GdaDataProxy*"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="DataProxy" c:type="GdauiDataProxy*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_column_editable">
        <callback name="set_column_editable" c:type="set_column_editable">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="DataProxy" c:type="GdauiDataProxy*"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="editable" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="show_column_actions">
        <callback name="show_column_actions" c:type="show_column_actions">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="DataProxy" c:type="GdauiDataProxy*"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="show_actions" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_actions_group">
        <callback name="get_actions_group" c:type="get_actions_group">
          <return-value transfer-ownership="full">
            <type name="Gtk.ActionGroup" c:type="GtkActionGroup*"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="DataProxy" c:type="GdauiDataProxy*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_write_mode">
        <callback name="set_write_mode" c:type="set_write_mode">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="DataProxy" c:type="GdauiDataProxy*"/>
            </parameter>
            <parameter name="mode" transfer-ownership="none">
              <type name="DataProxyWriteMode"
                    c:type="GdauiDataProxyWriteMode"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_write_mode">
        <callback name="get_write_mode" c:type="get_write_mode">
          <return-value transfer-ownership="full">
            <type name="DataProxyWriteMode" c:type="GdauiDataProxyWriteMode"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="DataProxy" c:type="GdauiDataProxy*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="proxy_changed">
        <callback name="proxy_changed" c:type="proxy_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="DataProxy" c:type="GdauiDataProxy*"/>
            </parameter>
            <parameter name="proxy" transfer-ownership="none">
              <type name="Gda.DataProxy" c:type="GdaDataProxy*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="DataProxyInfo"
           c:type="GdauiDataProxyInfo"
           parent="Gtk.HBox"
           glib:type-name="GdauiDataProxyInfo"
           glib:get-type="gdaui_data_proxy_info_get_type"
           glib:type-struct="DataProxyInfoClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gdaui_data_proxy_info_new">
        <return-value transfer-ownership="full">
          <type name="DataProxyInfo" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="data_proxy" transfer-ownership="none">
            <type name="DataProxy" c:type="GdauiDataProxy*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="DataProxyInfoFlag" c:type="GdauiDataProxyInfoFlag"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="data-proxy" writable="1" transfer-ownership="none">
        <type name="DataProxy" c:type="GdauiDataProxy"/>
      </property>
      <property name="flags" writable="1" transfer-ownership="none">
        <type name="DataProxyInfoFlag" c:type="GdauiDataProxyInfoFlag"/>
      </property>
      <field name="object">
        <type name="Gtk.HBox" c:type="GtkHBox"/>
      </field>
      <field name="priv">
        <type name="DataProxyInfoPriv" c:type="GdauiDataProxyInfoPriv*"/>
      </field>
    </class>
    <record name="DataProxyInfoClass"
            c:type="GdauiDataProxyInfoClass"
            glib:is-gtype-struct-for="DataProxyInfo">
      <field name="parent_class">
        <type name="Gtk.HBoxClass" c:type="GtkHBoxClass"/>
      </field>
    </record>
    <bitfield name="DataProxyInfoFlag" c:type="GdauiDataProxyInfoFlag">
      <member name="none" value="0" c:identifier="GDAUI_DATA_PROXY_INFO_NONE"/>
      <member name="current_row"
              value="1"
              c:identifier="GDAUI_DATA_PROXY_INFO_CURRENT_ROW"/>
      <member name="row_modify_buttons"
              value="4"
              c:identifier="GDAUI_DATA_PROXY_INFO_ROW_MODIFY_BUTTONS"/>
      <member name="row_move_buttons"
              value="8"
              c:identifier="GDAUI_DATA_PROXY_INFO_ROW_MOVE_BUTTONS"/>
      <member name="chunck_change_buttons"
              value="16"
              c:identifier="GDAUI_DATA_PROXY_INFO_CHUNCK_CHANGE_BUTTONS"/>
      <member name="no_filter"
              value="32"
              c:identifier="GDAUI_DATA_PROXY_INFO_NO_FILTER"/>
    </bitfield>
    <record name="DataProxyInfoPriv" c:type="GdauiDataProxyInfoPriv">
    </record>
    <enumeration name="DataProxyWriteMode" c:type="GdauiDataProxyWriteMode">
      <member name="demand"
              value="0"
              c:identifier="GDAUI_DATA_PROXY_WRITE_ON_DEMAND"/>
      <member name="row_change"
              value="1"
              c:identifier="GDAUI_DATA_PROXY_WRITE_ON_ROW_CHANGE"/>
      <member name="value_activated"
              value="2"
              c:identifier="GDAUI_DATA_PROXY_WRITE_ON_VALUE_ACTIVATED"/>
      <member name="value_change"
              value="3"
              c:identifier="GDAUI_DATA_PROXY_WRITE_ON_VALUE_CHANGE"/>
    </enumeration>
    <interface name="DataSelector"
               c:type="GdauiDataSelector"
               glib:type-name="GdauiDataSelector"
               glib:get-type="gdaui_data_selector_get_type"
               glib:type-struct="DataSelectorIface">
      <virtual-method name="get_model" invoker="get_model">
        <return-value transfer-ownership="full">
          <type name="Gda.DataModel" c:type="GdaDataModel*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_model" invoker="set_model">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_selected_rows" invoker="get_selected_rows">
        <return-value transfer-ownership="full">
          <array name="GLib.Array" c:type="GArray*">
            <type name="any" c:type="gpointer"/>
          </array>
        </return-value>
      </virtual-method>
      <virtual-method name="get_data_set" invoker="get_data_set">
        <return-value transfer-ownership="full">
          <type name="Gda.DataModelIter" c:type="GdaDataModelIter*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="select_row" invoker="select_row">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unselect_row" invoker="unselect_row">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_column_visible" invoker="set_column_visible">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="visible" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_model" c:identifier="gdaui_data_selector_get_model">
        <return-value transfer-ownership="full">
          <type name="Gda.DataModel" c:type="GdaDataModel*"/>
        </return-value>
      </method>
      <method name="set_model" c:identifier="gdaui_data_selector_set_model">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_selected_rows"
              c:identifier="gdaui_data_selector_get_selected_rows">
        <return-value transfer-ownership="full">
          <array name="GLib.Array" c:type="GArray*">
            <type name="any" c:type="gpointer"/>
          </array>
        </return-value>
      </method>
      <method name="get_data_set"
              c:identifier="gdaui_data_selector_get_data_set">
        <return-value transfer-ownership="full">
          <type name="Gda.DataModelIter" c:type="GdaDataModelIter*"/>
        </return-value>
      </method>
      <method name="select_row" c:identifier="gdaui_data_selector_select_row">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="unselect_row"
              c:identifier="gdaui_data_selector_unselect_row">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_column_visible"
              c:identifier="gdaui_data_selector_set_column_visible">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="column" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="visible" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="selection-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <record name="DataSelectorIface"
            c:type="GdauiDataSelectorIface"
            glib:is-gtype-struct-for="DataSelector">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_model">
        <callback name="get_model" c:type="get_model">
          <return-value transfer-ownership="full">
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="DataSelector" c:type="GdauiDataSelector*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_model">
        <callback name="set_model" c:type="set_model">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="DataSelector" c:type="GdauiDataSelector*"/>
            </parameter>
            <parameter name="model" transfer-ownership="none">
              <type name="Gda.DataModel" c:type="GdaDataModel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_selected_rows">
        <callback name="get_selected_rows" c:type="get_selected_rows">
          <return-value transfer-ownership="full">
            <array name="GLib.Array" c:type="GArray*">
              <type name="any" c:type="gpointer"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="DataSelector" c:type="GdauiDataSelector*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_data_set">
        <callback name="get_data_set" c:type="get_data_set">
          <return-value transfer-ownership="full">
            <type name="Gda.DataModelIter" c:type="GdaDataModelIter*"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="DataSelector" c:type="GdauiDataSelector*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="select_row">
        <callback name="select_row" c:type="select_row">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="DataSelector" c:type="GdauiDataSelector*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unselect_row">
        <callback name="unselect_row" c:type="unselect_row">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="DataSelector" c:type="GdauiDataSelector*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_column_visible">
        <callback name="set_column_visible" c:type="set_column_visible">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="DataSelector" c:type="GdauiDataSelector*"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="visible" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="selection_changed">
        <callback name="selection_changed" c:type="selection_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="DataSelector" c:type="GdauiDataSelector*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="DataStore"
           c:type="GdauiDataStore"
           parent="GObject.Object"
           glib:type-name="GdauiDataStore"
           glib:get-type="gdaui_data_store_get_type"
           glib:type-struct="DataStoreClass">
      <implements name="Gtk.TreeModel"/>
      <constructor name="new" c:identifier="gdaui_data_store_new">
        <return-value transfer-ownership="full">
          <type name="DataStore" c:type="GtkTreeModel*"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_proxy" c:identifier="gdaui_data_store_get_proxy">
        <return-value transfer-ownership="full">
          <type name="Gda.DataProxy" c:type="GdaDataProxy*"/>
        </return-value>
      </method>
      <method name="get_row_from_iter"
              c:identifier="gdaui_data_store_get_row_from_iter">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="iter" transfer-ownership="none">
            <type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_iter_from_values"
              c:identifier="gdaui_data_store_get_iter_from_values">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="iter" transfer-ownership="none">
            <type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
          </parameter>
          <parameter name="values" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="cols_index"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value" c:identifier="gdaui_data_store_set_value">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="iter" transfer-ownership="none">
            <type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete" c:identifier="gdaui_data_store_delete">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="iter" transfer-ownership="none">
            <type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="undelete" c:identifier="gdaui_data_store_undelete">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="iter" transfer-ownership="none">
            <type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append" c:identifier="gdaui_data_store_append">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="iter" transfer-ownership="none">
            <type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
          </parameter>
        </parameters>
      </method>
      <property name="model"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </property>
      <property name="prepend-null-entry"
                writable="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="proxy" transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="DataStorePriv" c:type="GdauiDataStorePriv*"/>
      </field>
    </class>
    <record name="DataStoreClass"
            c:type="GdauiDataStoreClass"
            glib:is-gtype-struct-for="DataStore">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="DataStorePriv" c:type="GdauiDataStorePriv">
    </record>
    <class name="Entry"
           c:type="GdauiEntry"
           parent="Gtk.Entry"
           glib:type-name="GdauiEntry"
           glib:get-type="gdaui_entry_get_type"
           glib:type-struct="EntryClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.Editable"/>
      <constructor name="new" c:identifier="gdaui_entry_new">
        <doc xml:whitespace="preserve">Creates a new #GdauiEntry widget.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">the newly created #GdauiEntry widget.</doc>
          <type name="Entry" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="prefix" transfer-ownership="none">
            <doc xml:whitespace="preserve">a prefix (not modifiable) string, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="suffix" transfer-ownership="none">
            <doc xml:whitespace="preserve">a suffix (not modifiable) string, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="get_empty_text">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="assume_insert">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="text" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="text_length" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="virt_pos"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="assume_delete">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="virt_start_pos" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="virt_end_pos" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="set_max_length" c:identifier="gdaui_entry_set_max_length">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="max" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_prefix" c:identifier="gdaui_entry_set_prefix">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="prefix" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_suffix" c:identifier="gdaui_entry_set_suffix">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="suffix" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_text" c:identifier="gdaui_entry_set_text">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="text" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_text" c:identifier="gdaui_entry_get_text">
        <doc xml:whitespace="preserve">Get a new string containing the contents of the widget as a string without the
prefix and/or suffix and/or format if they have been specified. This method differs
from calling gtk_entry_get_text() since the latest will return the complete text
in @entry including prefix and/or suffix and/or format.
internal modifications, or if gdaui_entry_set_text() was called with a %NULL
as its @text argument.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new string, or %NULL</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_width_chars"
              c:identifier="gdaui_entry_set_width_chars">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="max_width" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="prefix" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="suffix" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="entry">
        <type name="Gtk.Entry" c:type="GtkEntry"/>
      </field>
      <field name="priv">
        <type name="EntryPrivate" c:type="GdauiEntryPrivate*"/>
      </field>
    </class>
    <class name="EntryBin"
           c:type="GdauiEntryBin"
           parent="EntryWrapper"
           glib:type-name="GdauiEntryBin"
           glib:get-type="gdaui_entry_bin_get_type"
           glib:type-struct="EntryBinClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gdaui_entry_bin_new">
        <return-value transfer-ownership="full">
          <type name="EntryBin" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="object">
        <type name="EntryWrapper" c:type="GdauiEntryWrapper"/>
      </field>
      <field name="priv">
        <type name="EntryBinPrivate" c:type="GdauiEntryBinPrivate*"/>
      </field>
    </class>
    <record name="EntryBinClass"
            c:type="GdauiEntryBinClass"
            glib:is-gtype-struct-for="EntryBin">
      <field name="parent_class">
        <type name="EntryWrapperClass" c:type="GdauiEntryWrapperClass"/>
      </field>
    </record>
    <record name="EntryBinPrivate" c:type="GdauiEntryBinPrivate">
    </record>
    <class name="EntryBoolean"
           c:type="GdauiEntryBoolean"
           parent="EntryWrapper"
           glib:type-name="GdauiEntryBoolean"
           glib:get-type="gdaui_entry_boolean_get_type"
           glib:type-struct="EntryBooleanClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gdaui_entry_boolean_new">
        <return-value transfer-ownership="full">
          <type name="EntryBoolean" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="object">
        <type name="EntryWrapper" c:type="GdauiEntryWrapper"/>
      </field>
      <field name="priv">
        <type name="EntryBooleanPrivate" c:type="GdauiEntryBooleanPrivate*"/>
      </field>
    </class>
    <record name="EntryBooleanClass"
            c:type="GdauiEntryBooleanClass"
            glib:is-gtype-struct-for="EntryBoolean">
      <field name="parent_class">
        <type name="EntryWrapperClass" c:type="GdauiEntryWrapperClass"/>
      </field>
    </record>
    <record name="EntryBooleanPrivate" c:type="GdauiEntryBooleanPrivate">
    </record>
    <record name="EntryClass"
            c:type="GdauiEntryClass"
            glib:is-gtype-struct-for="Entry">
      <field name="parent_class">
        <type name="Gtk.EntryClass" c:type="GtkEntryClass"/>
      </field>
      <field name="get_empty_text">
        <callback name="get_empty_text" c:type="get_empty_text">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="entry" transfer-ownership="none">
              <type name="Entry" c:type="GdauiEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="assume_insert">
        <callback name="assume_insert" c:type="assume_insert">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="entry" transfer-ownership="none">
              <type name="Entry" c:type="GdauiEntry*"/>
            </parameter>
            <parameter name="text" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="text_length" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="virt_pos"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="assume_delete">
        <callback name="assume_delete" c:type="assume_delete">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="entry" transfer-ownership="none">
              <type name="Entry" c:type="GdauiEntry*"/>
            </parameter>
            <parameter name="virt_start_pos" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="virt_end_pos" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="EntryCombo"
           c:type="GdauiEntryCombo"
           parent="EntryShell"
           glib:type-name="GdauiEntryCombo"
           glib:get-type="gdaui_entry_combo_get_type"
           glib:type-struct="EntryComboClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gdaui_entry_combo_new">
        <return-value transfer-ownership="full">
          <type name="EntryCombo" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="paramlist" transfer-ownership="none">
            <type name="Set" c:type="GdauiSet*"/>
          </parameter>
          <parameter name="source" transfer-ownership="none">
            <type name="SetSource" c:type="GdauiSetSource*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_values" c:identifier="gdaui_entry_combo_set_values">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="values" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="get_values" c:identifier="gdaui_entry_combo_get_values">
        <return-value transfer-ownership="full">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <method name="get_all_values"
              c:identifier="gdaui_entry_combo_get_all_values">
        <return-value transfer-ownership="full">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <method name="set_values_orig"
              c:identifier="gdaui_entry_combo_set_values_orig">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="values" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="get_values_orig"
              c:identifier="gdaui_entry_combo_get_values_orig">
        <return-value transfer-ownership="full">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <method name="set_values_default"
              c:identifier="gdaui_entry_combo_set_values_default">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="values" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <property name="set-default-if-invalid"
                writable="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="object">
        <type name="EntryShell" c:type="GdauiEntryShell"/>
      </field>
      <field name="priv">
        <type name="EntryComboPriv" c:type="GdauiEntryComboPriv*"/>
      </field>
    </class>
    <record name="EntryComboClass"
            c:type="GdauiEntryComboClass"
            glib:is-gtype-struct-for="EntryCombo">
      <field name="parent_class">
        <type name="EntryShellClass" c:type="GdauiEntryShellClass"/>
      </field>
    </record>
    <record name="EntryComboPriv" c:type="GdauiEntryComboPriv">
    </record>
    <class name="EntryCommonTime"
           c:type="GdauiEntryCommonTime"
           parent="EntryWrapper"
           glib:type-name="GdauiEntryCommonTime"
           glib:get-type="gdaui_entry_common_time_get_type"
           glib:type-struct="EntryCommonTimeClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <property name="editing-canceled" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="type" writable="1" transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </property>
      <field name="object">
        <type name="EntryWrapper" c:type="GdauiEntryWrapper"/>
      </field>
      <field name="priv">
        <type name="EntryCommonTimePrivate"
              c:type="GdauiEntryCommonTimePrivate*"/>
      </field>
    </class>
    <record name="EntryCommonTimeClass"
            c:type="GdauiEntryCommonTimeClass"
            glib:is-gtype-struct-for="EntryCommonTime">
      <field name="parent_class">
        <type name="EntryWrapperClass" c:type="GdauiEntryWrapperClass"/>
      </field>
    </record>
    <record name="EntryCommonTimePrivate" c:type="GdauiEntryCommonTimePrivate">
    </record>
    <callback name="EntryCreateFunc" c:type="GdauiEntryCreateFunc">
      <return-value transfer-ownership="full">
        <type name="DataEntry" c:type="GdauiDataEntry*"/>
      </return-value>
      <parameters>
        <parameter transfer-ownership="none">
          <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </callback>
    <class name="EntryDate"
           c:type="GdauiEntryDate"
           parent="EntryCommonTime"
           glib:type-name="GdauiEntryDate"
           glib:get-type="gdaui_entry_date_get_type"
           glib:type-struct="EntryDateClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <constructor name="new" c:identifier="gdaui_entry_date_new">
        <return-value transfer-ownership="full">
          <type name="EntryDate" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="object">
        <type name="EntryCommonTime" c:type="GdauiEntryCommonTime"/>
      </field>
    </class>
    <record name="EntryDateClass"
            c:type="GdauiEntryDateClass"
            glib:is-gtype-struct-for="EntryDate">
      <field name="parent_class">
        <type name="EntryCommonTimeClass" c:type="GdauiEntryCommonTimeClass"/>
      </field>
    </record>
    <record name="EntryDatePrivate" c:type="GdauiEntryDatePrivate">
    </record>
    <class name="EntryNone"
           c:type="GdauiEntryNone"
           parent="EntryWrapper"
           glib:type-name="GdauiEntryNone"
           glib:get-type="gdaui_entry_none_get_type"
           glib:type-struct="EntryNoneClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gdaui_entry_none_new">
        <return-value transfer-ownership="full">
          <type name="EntryNone" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="object">
        <type name="EntryWrapper" c:type="GdauiEntryWrapper"/>
      </field>
      <field name="priv">
        <type name="EntryNonePrivate" c:type="GdauiEntryNonePrivate*"/>
      </field>
    </class>
    <record name="EntryNoneClass"
            c:type="GdauiEntryNoneClass"
            glib:is-gtype-struct-for="EntryNone">
      <field name="parent_class">
        <type name="EntryWrapperClass" c:type="GdauiEntryWrapperClass"/>
      </field>
    </record>
    <record name="EntryNonePrivate" c:type="GdauiEntryNonePrivate">
    </record>
    <class name="EntryNumber"
           c:type="GdauiEntryNumber"
           parent="EntryWrapper"
           glib:type-name="GdauiEntryNumber"
           glib:get-type="gdaui_entry_number_get_type"
           glib:type-struct="EntryNumberClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <constructor name="new" c:identifier="gdaui_entry_number_new">
        <return-value transfer-ownership="full">
          <type name="EntryNumber" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="is_type_numeric"
                c:identifier="gdaui_entry_number_is_type_numeric">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </function>
      <property name="editing-canceled" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="options"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="object">
        <type name="EntryWrapper" c:type="GdauiEntryWrapper"/>
      </field>
      <field name="priv">
        <type name="EntryNumberPrivate" c:type="GdauiEntryNumberPrivate*"/>
      </field>
    </class>
    <record name="EntryNumberClass"
            c:type="GdauiEntryNumberClass"
            glib:is-gtype-struct-for="EntryNumber">
      <field name="parent_class">
        <type name="EntryWrapperClass" c:type="GdauiEntryWrapperClass"/>
      </field>
    </record>
    <record name="EntryNumberPrivate" c:type="GdauiEntryNumberPrivate">
    </record>
    <record name="EntryPrivate" c:type="GdauiEntryPrivate">
    </record>
    <class name="EntryShell"
           c:type="GdauiEntryShell"
           parent="Gtk.Viewport"
           glib:type-name="GdauiEntryShell"
           glib:get-type="gdaui_entry_shell_get_type"
           glib:type-struct="EntryShellClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <method name="pack_entry" c:identifier="gdaui_entry_shell_pack_entry">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="main_widget" transfer-ownership="none">
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh" c:identifier="gdaui_entry_shell_refresh">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set_unknown" c:identifier="gdaui_entry_shell_set_unknown">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="unknown" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="actions" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="handler" writable="1" transfer-ownership="none">
        <type name="Gda.DataHandler" c:type="GdaDataHandler"/>
      </property>
      <property name="is-cell-renderer" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="object">
        <type name="Gtk.Viewport" c:type="GtkViewport"/>
      </field>
      <field name="priv">
        <type name="EntryShellPriv" c:type="GdauiEntryShellPriv*"/>
      </field>
    </class>
    <record name="EntryShellClass"
            c:type="GdauiEntryShellClass"
            glib:is-gtype-struct-for="EntryShell">
      <field name="parent_class">
        <type name="Gtk.ViewportClass" c:type="GtkViewportClass"/>
      </field>
    </record>
    <record name="EntryShellPriv" c:type="GdauiEntryShellPriv">
    </record>
    <class name="EntryString"
           c:type="GdauiEntryString"
           parent="EntryWrapper"
           glib:type-name="GdauiEntryString"
           glib:get-type="gdaui_entry_string_get_type"
           glib:type-struct="EntryStringClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <constructor name="new" c:identifier="gdaui_entry_string_new">
        <return-value transfer-ownership="full">
          <type name="EntryString" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="editing-canceled" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="multiline" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="options"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="object">
        <type name="EntryWrapper" c:type="GdauiEntryWrapper"/>
      </field>
      <field name="priv">
        <type name="EntryStringPrivate" c:type="GdauiEntryStringPrivate*"/>
      </field>
    </class>
    <record name="EntryStringClass"
            c:type="GdauiEntryStringClass"
            glib:is-gtype-struct-for="EntryString">
      <field name="parent_class">
        <type name="EntryWrapperClass" c:type="GdauiEntryWrapperClass"/>
      </field>
    </record>
    <record name="EntryStringPrivate" c:type="GdauiEntryStringPrivate">
    </record>
    <class name="EntryTime"
           c:type="GdauiEntryTime"
           parent="EntryCommonTime"
           glib:type-name="GdauiEntryTime"
           glib:get-type="gdaui_entry_time_get_type"
           glib:type-struct="EntryTimeClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <constructor name="new" c:identifier="gdaui_entry_time_new">
        <return-value transfer-ownership="full">
          <type name="EntryTime" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="object">
        <type name="EntryCommonTime" c:type="GdauiEntryCommonTime"/>
      </field>
    </class>
    <record name="EntryTimeClass"
            c:type="GdauiEntryTimeClass"
            glib:is-gtype-struct-for="EntryTime">
      <field name="parent_class">
        <type name="EntryCommonTimeClass" c:type="GdauiEntryCommonTimeClass"/>
      </field>
    </record>
    <record name="EntryTimePrivate" c:type="GdauiEntryTimePrivate">
    </record>
    <class name="EntryTimestamp"
           c:type="GdauiEntryTimestamp"
           parent="EntryCommonTime"
           glib:type-name="GdauiEntryTimestamp"
           glib:get-type="gdaui_entry_timestamp_get_type"
           glib:type-struct="EntryTimestampClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <constructor name="new" c:identifier="gdaui_entry_timestamp_new">
        <return-value transfer-ownership="full">
          <type name="EntryTimestamp" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="object">
        <type name="EntryCommonTime" c:type="GdauiEntryCommonTime"/>
      </field>
    </class>
    <record name="EntryTimestampClass"
            c:type="GdauiEntryTimestampClass"
            glib:is-gtype-struct-for="EntryTimestamp">
      <field name="parent_class">
        <type name="EntryCommonTimeClass" c:type="GdauiEntryCommonTimeClass"/>
      </field>
    </record>
    <record name="EntryTimestampPrivate" c:type="GdauiEntryTimestampPrivate">
    </record>
    <class name="EntryWrapper"
           c:type="GdauiEntryWrapper"
           parent="EntryShell"
           glib:type-name="GdauiEntryWrapper"
           glib:get-type="gdaui_entry_wrapper_get_type"
           glib:type-struct="EntryWrapperClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <virtual-method name="create_entry">
        <return-value transfer-ownership="full">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="real_set_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="real_get_value">
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="connect_signals">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="modify_cb" transfer-ownership="none">
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
          <parameter name="activate_cb" transfer-ownership="none">
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="expand_in_layout">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_editable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="editable" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="value_is_equal_to">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="value_is_null">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="is_valid">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="grab_focus">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <method name="contents_changed"
              c:identifier="gdaui_entry_wrapper_contents_changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="contents_activated"
              c:identifier="gdaui_entry_wrapper_contents_activated">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <property name="set-default-if-invalid"
                writable="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="object">
        <type name="EntryShell" c:type="GdauiEntryShell"/>
      </field>
      <field name="priv">
        <type name="EntryWrapperPriv" c:type="GdauiEntryWrapperPriv*"/>
      </field>
    </class>
    <record name="EntryWrapperClass"
            c:type="GdauiEntryWrapperClass"
            glib:is-gtype-struct-for="EntryWrapper">
      <field name="parent_class">
        <type name="EntryShellClass" c:type="GdauiEntryShellClass"/>
      </field>
      <field name="create_entry">
        <callback name="create_entry" c:type="create_entry">
          <return-value transfer-ownership="full">
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </return-value>
          <parameters>
            <parameter name="mgwrp" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="real_set_value">
        <callback name="real_set_value" c:type="real_set_value">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mgwrp" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="real_get_value">
        <callback name="real_get_value" c:type="real_get_value">
          <return-value transfer-ownership="full">
            <type name="GObject.Value" c:type="GValue*"/>
          </return-value>
          <parameters>
            <parameter name="mgwrp" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="connect_signals">
        <callback name="connect_signals" c:type="connect_signals">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mgwrp" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
            <parameter name="modify_cb" transfer-ownership="none">
              <type name="GObject.Callback" c:type="GCallback"/>
            </parameter>
            <parameter name="activate_cb" transfer-ownership="none">
              <type name="GObject.Callback" c:type="GCallback"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="expand_in_layout">
        <callback name="expand_in_layout" c:type="expand_in_layout">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="mgwrp" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_editable">
        <callback name="set_editable" c:type="set_editable">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mgwrp" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
            <parameter name="editable" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="value_is_equal_to">
        <callback name="value_is_equal_to" c:type="value_is_equal_to">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="mgwrp" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="value_is_null">
        <callback name="value_is_null" c:type="value_is_null">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="mgwrp" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_valid">
        <callback name="is_valid" c:type="is_valid">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="mgwrp" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="grab_focus">
        <callback name="grab_focus" c:type="grab_focus">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mgwrp" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="EntryWrapperPriv" c:type="GdauiEntryWrapperPriv">
    </record>
    <class name="Form"
           c:type="GdauiForm"
           parent="Gtk.VBox"
           glib:type-name="GdauiForm"
           glib:get-type="gdaui_form_get_type"
           glib:type-struct="FormClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataProxy"/>
      <implements name="DataSelector"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gdaui_form_new">
        <return-value transfer-ownership="full">
          <type name="Form" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="info" transfer-ownership="none">
        <type name="DataProxyInfo" c:type="GdauiDataProxyInfo"/>
      </property>
      <property name="info-flags" writable="1" transfer-ownership="none">
        <type name="DataProxyInfoFlag" c:type="GdauiDataProxyInfoFlag"/>
      </property>
      <property name="model"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gda.DataModel" c:type="GdaDataModel"/>
      </property>
      <property name="raw-form" transfer-ownership="none">
        <type name="RawForm" c:type="GdauiRawForm"/>
      </property>
      <field name="object">
        <type name="Gtk.VBox" c:type="GtkVBox"/>
      </field>
      <field name="priv">
        <type name="FormPriv" c:type="GdauiFormPriv*"/>
      </field>
    </class>
    <record name="FormClass"
            c:type="GdauiFormClass"
            glib:is-gtype-struct-for="Form">
      <field name="parent_class">
        <type name="Gtk.VBoxClass" c:type="GtkVBoxClass"/>
      </field>
    </record>
    <record name="FormPriv" c:type="GdauiFormPriv">
    </record>
    <class name="FormattedEntry"
           c:type="GdauiFormattedEntry"
           parent="Entry"
           glib:type-name="GdauiFormattedEntry"
           glib:get-type="gdaui_formatted_entry_get_type"
           glib:type-struct="FormattedEntryClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.Editable"/>
      <constructor name="new" c:identifier="gdaui_formatted_entry_new">
        <doc xml:whitespace="preserve">Creates a new #GdauiFormattedEntry widget.
Characters in @format are of two types:
Possible values for writeable characters are:
&lt;itemizedlist&gt;
&lt;listitem&gt;&lt;para&gt;'0': digits&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;'9': digits excluded 0&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;'@': alpha&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;'^': alpha converted to upper case&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;'#': alphanumeric&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;'*': any char&lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;
if @mask is not %NULL, then it should only contains the follogin characters, which are used side by side with
&lt;itemizedlist&gt;
&lt;listitem&gt;&lt;para&gt;'_': the corresponding character in @format is actually used as a writable character&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;'-': the corresponding character in @format is actually used as a writable character, but
the character will be removed from gdaui_formatted_entry_get_text()'s result if it was not
filled by the user&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;' ': the corresponding character in @format will not be considered as a writable character
but as a non writable character&lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;
position in @mask is the space character (' '), then C will not interpreted as a writable format
character as defined above. @mask does not be to have the same length as @format.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">the newly created #GdauiFormattedEntry widget.</doc>
          <type name="FormattedEntry" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <doc xml:whitespace="preserve">a format string</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:whitespace="preserve">a mask string, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_text" c:identifier="gdaui_formatted_entry_get_text">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_insert_func"
              c:identifier="gdaui_formatted_entry_set_insert_func">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="insert_func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="FormattedEntryInsertFunc"
                  c:type="GdauiFormattedEntryInsertFunc"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <property name="format" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="mask" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="entry">
        <type name="Entry" c:type="GdauiEntry"/>
      </field>
      <field name="priv">
        <type name="FormattedEntryPrivate"
              c:type="GdauiFormattedEntryPrivate*"/>
      </field>
    </class>
    <record name="FormattedEntryClass"
            c:type="GdauiFormattedEntryClass"
            glib:is-gtype-struct-for="FormattedEntry">
      <field name="parent_class">
        <type name="EntryClass" c:type="GdauiEntryClass"/>
      </field>
    </record>
    <callback name="FormattedEntryInsertFunc"
              c:type="GdauiFormattedEntryInsertFunc">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="entry" transfer-ownership="none">
          <type name="FormattedEntry" c:type="GdauiFormattedEntry*"/>
        </parameter>
        <parameter name="insert_char" transfer-ownership="none">
          <type name="GLib.unichar" c:type="gunichar"/>
        </parameter>
        <parameter name="virt_pos" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="FormattedEntryPrivate" c:type="GdauiFormattedEntryPrivate">
    </record>
    <class name="Grid"
           c:type="GdauiGrid"
           parent="Gtk.VBox"
           glib:type-name="GdauiGrid"
           glib:get-type="gdaui_grid_get_type"
           glib:type-struct="GridClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataProxy"/>
      <implements name="DataSelector"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gdaui_grid_new">
        <return-value transfer-ownership="full">
          <type name="Grid" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_sample_size" c:identifier="gdaui_grid_set_sample_size">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="sample_size" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="info" transfer-ownership="none">
        <type name="DataProxyInfo" c:type="GdauiDataProxyInfo"/>
      </property>
      <property name="info-flags" writable="1" transfer-ownership="none">
        <type name="DataProxyInfoFlag" c:type="GdauiDataProxyInfoFlag"/>
      </property>
      <property name="model"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gda.DataModel" c:type="GdaDataModel"/>
      </property>
      <property name="raw-grid" transfer-ownership="none">
        <type name="RawGrid" c:type="GdauiRawGrid"/>
      </property>
      <field name="object">
        <type name="Gtk.VBox" c:type="GtkVBox"/>
      </field>
      <field name="priv">
        <type name="GridPriv" c:type="GdauiGridPriv*"/>
      </field>
    </class>
    <record name="GridClass"
            c:type="GdauiGridClass"
            glib:is-gtype-struct-for="Grid">
      <field name="parent_class">
        <type name="Gtk.VBoxClass" c:type="GtkVBoxClass"/>
      </field>
    </record>
    <record name="GridPriv" c:type="GdauiGridPriv">
    </record>
    <class name="Login"
           c:type="GdauiLogin"
           parent="Gtk.VBox"
           glib:type-name="GdauiLogin"
           glib:get-type="gdaui_login_get_type"
           glib:type-struct="LoginClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gdaui_login_new">
        <return-value transfer-ownership="full">
          <type name="Login" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="dsn" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_mode" c:identifier="gdaui_login_set_mode">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <type name="LoginMode" c:type="GdauiLoginMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_connection_information"
              c:identifier="gdaui_login_get_connection_information">
        <return-value transfer-ownership="none">
          <type name="Gda.DsnInfo" c:type="GdaDsnInfo*"/>
        </return-value>
      </method>
      <method name="set_dsn" c:identifier="gdaui_login_set_dsn">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="dsn" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_connection_information"
              c:identifier="gdaui_login_set_connection_information">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cinfo" transfer-ownership="none">
            <type name="Gda.DsnInfo" c:type="GdaDsnInfo*"/>
          </parameter>
        </parameters>
      </method>
      <property name="dsn" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="mode" writable="1" transfer-ownership="none">
        <type name="LoginMode" c:type="GdauiLoginMode"/>
      </property>
      <property name="valid" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="parent">
        <type name="Gtk.VBox" c:type="GtkVBox"/>
      </field>
      <field name="priv">
        <type name="LoginPrivate" c:type="GdauiLoginPrivate*"/>
      </field>
      <glib:signal name="changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="LoginClass"
            c:type="GdauiLoginClass"
            glib:is-gtype-struct-for="Login">
      <field name="parent_class">
        <type name="Gtk.VBoxClass" c:type="GtkVBoxClass"/>
      </field>
      <field name="changed">
        <callback name="changed" c:type="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="login" transfer-ownership="none">
              <type name="Login" c:type="GdauiLogin*"/>
            </parameter>
            <parameter name="is_valid" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <bitfield name="LoginMode" c:type="GdauiLoginMode">
      <member name="enable_control_centre_mode"
              value="1"
              c:identifier="GDA_UI_LOGIN_ENABLE_CONTROL_CENTRE_MODE"/>
      <member name="hide_dsn_selection_mode"
              value="2"
              c:identifier="GDA_UI_LOGIN_HIDE_DSN_SELECTION_MODE"/>
      <member name="hide_direct_connection_mode"
              value="4"
              c:identifier="GDA_UI_LOGIN_HIDE_DIRECT_CONNECTION_MODE"/>
    </bitfield>
    <record name="LoginPrivate" c:type="GdauiLoginPrivate">
    </record>
    <class name="NumericEntry"
           c:type="GdauiNumericEntry"
           parent="Entry"
           glib:type-name="GdauiNumericEntry"
           glib:get-type="gdaui_numeric_entry_get_type"
           glib:type-struct="NumericEntryClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.Editable"/>
      <constructor name="new" c:identifier="gdaui_numeric_entry_new">
        <doc xml:whitespace="preserve">Creates a new #GdauiNumericEntry widget.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">the newly created #GdauiNumericEntry widget.</doc>
          <type name="NumericEntry" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:whitespace="preserve">the numeric type</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value" c:identifier="gdaui_numeric_entry_get_value">
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
      </method>
      <property name="decimal-sep" writable="1" transfer-ownership="none">
        <type name="int8" c:type="gchar"/>
      </property>
      <property name="n-decimals" writable="1" transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </property>
      <property name="thousands-sep" writable="1" transfer-ownership="none">
        <type name="int8" c:type="gchar"/>
      </property>
      <property name="type" writable="1" transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </property>
      <field name="entry">
        <type name="Entry" c:type="GdauiEntry"/>
      </field>
      <field name="priv">
        <type name="NumericEntryPrivate" c:type="GdauiNumericEntryPrivate*"/>
      </field>
    </class>
    <record name="NumericEntryClass"
            c:type="GdauiNumericEntryClass"
            glib:is-gtype-struct-for="NumericEntry">
      <field name="parent_class">
        <type name="EntryClass" c:type="GdauiEntryClass"/>
      </field>
    </record>
    <record name="NumericEntryPrivate" c:type="GdauiNumericEntryPrivate">
    </record>
    <record name="Plugin" c:type="GdauiPlugin">
      <doc xml:whitespace="preserve">Structure representing a plugin.</doc>
      <field name="plugin_name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="plugin_descr" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="plugin_file" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="nb_g_types" writable="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="valid_g_types" writable="1">
        <type name="any" c:type="GType*"/>
      </field>
      <field name="options_xml_spec" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="entry_create_func" writable="1">
        <type name="EntryCreateFunc" c:type="GdauiEntryCreateFunc"/>
      </field>
      <field name="cell_create_func" writable="1">
        <type name="CellCreateFunc" c:type="GdauiCellCreateFunc"/>
      </field>
      <method name="declare" c:identifier="gdaui_plugin_declare">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </record>
    <class name="ProviderSelector"
           c:type="GdauiProviderSelector"
           parent="Combo"
           glib:type-name="GdauiProviderSelector"
           glib:get-type="gdaui_provider_selector_get_type"
           glib:type-struct="ProviderSelectorClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataSelector"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.CellLayout"/>
      <constructor name="new" c:identifier="gdaui_provider_selector_new">
        <return-value transfer-ownership="full">
          <type name="ProviderSelector" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_provider_obj"
              c:identifier="gdaui_provider_selector_get_provider_obj">
        <return-value transfer-ownership="full">
          <type name="Gda.ServerProvider" c:type="GdaServerProvider*"/>
        </return-value>
      </method>
      <method name="get_provider"
              c:identifier="gdaui_provider_selector_get_provider">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_provider"
              c:identifier="gdaui_provider_selector_set_provider">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="provider" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Combo" c:type="GdauiCombo"/>
      </field>
      <field name="priv">
        <type name="ProviderSelectorPrivate"
              c:type="GdauiProviderSelectorPrivate*"/>
      </field>
    </class>
    <record name="ProviderSelectorClass"
            c:type="GdauiProviderSelectorClass"
            glib:is-gtype-struct-for="ProviderSelector">
      <field name="parent_class">
        <type name="ComboClass" c:type="GdauiComboClass"/>
      </field>
    </record>
    <record name="ProviderSelectorPrivate"
            c:type="GdauiProviderSelectorPrivate">
    </record>
    <constant name="REFERER_ACTIVE" value="#e0ffe0">
      <type name="utf8"/>
    </constant>
    <constant name="REFERER_INACTIVE" value="#ffe0e0">
      <type name="utf8"/>
    </constant>
    <constant name="REFERER_UNKNOWN" value="#e0e0ff">
      <type name="utf8"/>
    </constant>
    <class name="RawForm"
           c:type="GdauiRawForm"
           parent="BasicForm"
           glib:type-name="GdauiRawForm"
           glib:get-type="gdaui_raw_form_get_type"
           glib:type-struct="RawFormClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataProxy"/>
      <implements name="DataSelector"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gdaui_raw_form_new">
        <return-value transfer-ownership="full">
          <type name="RawForm" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="model" writable="1" transfer-ownership="none">
        <type name="Gda.DataModel" c:type="GdaDataModel"/>
      </property>
      <field name="object">
        <type name="BasicForm" c:type="GdauiBasicForm"/>
      </field>
      <field name="priv">
        <type name="RawFormPriv" c:type="GdauiRawFormPriv*"/>
      </field>
    </class>
    <record name="RawFormClass"
            c:type="GdauiRawFormClass"
            glib:is-gtype-struct-for="RawForm">
      <field name="parent_class">
        <type name="BasicFormClass" c:type="GdauiBasicFormClass"/>
      </field>
    </record>
    <record name="RawFormPriv" c:type="GdauiRawFormPriv">
    </record>
    <class name="RawGrid"
           c:type="GdauiRawGrid"
           parent="Gtk.TreeView"
           glib:type-name="GdauiRawGrid"
           glib:get-type="gdaui_raw_grid_get_type"
           glib:type-struct="RawGridClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataProxy"/>
      <implements name="DataSelector"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gdaui_raw_grid_new">
        <return-value transfer-ownership="full">
          <type name="RawGrid" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_sample_size"
              c:identifier="gdaui_raw_grid_set_sample_size">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="sample_size" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_sample_start"
              c:identifier="gdaui_raw_grid_set_sample_start">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="sample_start" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_layout_from_file"
              c:identifier="gdaui_raw_grid_set_layout_from_file">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="grid_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="global-actions-visible"
                writable="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="info-cell-visible"
                writable="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="model" writable="1" transfer-ownership="none">
        <type name="Gda.DataModel" c:type="GdaDataModel"/>
      </property>
      <property name="xml-layout"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </property>
      <field name="object">
        <type name="Gtk.TreeView" c:type="GtkTreeView"/>
      </field>
      <field name="priv">
        <type name="RawGridPriv" c:type="GdauiRawGridPriv*"/>
      </field>
      <glib:signal name="double-clicked">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="populate-popup">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Gtk.Menu" c:type="GtkMenu"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="RawGridClass"
            c:type="GdauiRawGridClass"
            glib:is-gtype-struct-for="RawGrid">
      <field name="parent_class">
        <type name="Gtk.TreeViewClass" c:type="GtkTreeViewClass"/>
      </field>
      <field name="double_clicked">
        <callback name="double_clicked" c:type="double_clicked">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="grid" transfer-ownership="none">
              <type name="RawGrid" c:type="GdauiRawGrid*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="populate_popup">
        <callback name="populate_popup" c:type="populate_popup">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="grid" transfer-ownership="none">
              <type name="RawGrid" c:type="GdauiRawGrid*"/>
            </parameter>
            <parameter name="menu" transfer-ownership="none">
              <type name="Gtk.Menu" c:type="GtkMenu*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="RawGridPriv" c:type="GdauiRawGridPriv">
    </record>
    <class name="ServerOperation"
           c:type="GdauiServerOperation"
           parent="Gtk.VBox"
           glib:type-name="GdauiServerOperation"
           glib:get-type="gdaui_server_operation_get_type"
           glib:type-struct="ServerOperationClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gdaui_server_operation_new">
        <return-value transfer-ownership="full">
          <type name="ServerOperation" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="op" transfer-ownership="none">
            <type name="Gda.ServerOperation" c:type="GdaServerOperation*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_in_dialog"
                   c:identifier="gdaui_server_operation_new_in_dialog">
        <return-value transfer-ownership="full">
          <type name="ServerOperation" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="op" transfer-ownership="none">
            <type name="Gda.ServerOperation" c:type="GdaServerOperation*"/>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <type name="Gtk.Window" c:type="GtkWindow*"/>
          </parameter>
          <parameter name="title" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="header" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="hide-single-header"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="server-operation"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gda.ServerOperation" c:type="GdaServerOperation"/>
      </property>
      <field name="object">
        <type name="Gtk.VBox" c:type="GtkVBox"/>
      </field>
      <field name="priv">
        <type name="ServerOperationPriv" c:type="GdauiServerOperationPriv*"/>
      </field>
    </class>
    <record name="ServerOperationClass"
            c:type="GdauiServerOperationClass"
            glib:is-gtype-struct-for="ServerOperation">
      <field name="parent_class">
        <type name="Gtk.VBoxClass" c:type="GtkVBoxClass"/>
      </field>
    </record>
    <record name="ServerOperationPriv" c:type="GdauiServerOperationPriv">
    </record>
    <record name="Set" c:type="GdauiSet">
      <field name="object" writable="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" writable="1">
        <type name="SetPriv" c:type="GdauiSetPriv*"/>
      </field>
      <field name="sources_list" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="groups_list" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
    </record>
    <record name="SetClass" c:type="GdauiSetClass">
      <field name="parent_class" writable="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="public_data_changed">
        <type name="any" c:type="pointer"/>
      </field>
    </record>
    <record name="SetGroup" c:type="GdauiSetGroup">
      <field name="group" writable="1">
        <type name="Gda.SetGroup" c:type="GdaSetGroup*"/>
      </field>
      <field name="source" writable="1">
        <type name="SetSource" c:type="GdauiSetSource*"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <record name="SetPriv" c:type="GdauiSetPriv">
    </record>
    <record name="SetSource" c:type="GdauiSetSource">
      <field name="source" writable="1">
        <type name="Gda.SetSource" c:type="GdaSetSource*"/>
      </field>
      <field name="shown_n_cols" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="shown_cols_index" writable="1">
        <type name="any" c:type="gint*"/>
      </field>
      <field name="ref_n_cols" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="ref_cols_index" writable="1">
        <type name="any" c:type="gint*"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved3" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved4" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <class name="TreeStore"
           c:type="GdauiTreeStore"
           parent="GObject.Object"
           glib:type-name="GdauiTreeStore"
           glib:get-type="gdaui_tree_store_get_type"
           glib:type-struct="TreeStoreClass">
      <implements name="Gtk.TreeDragDest"/>
      <implements name="Gtk.TreeDragSource"/>
      <implements name="Gtk.TreeModel"/>
      <constructor name="new"
                   c:identifier="gdaui_tree_store_new"
                   version="4.2"
                   introspectable="0">
        <doc xml:whitespace="preserve">Creates a #GtkTreeModel interface with a #GdaTree, mapping columns to attributes' values.
For more information and limitations, see gdaui_tree_store_new().</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">the new object, or %NULL if an inconsistency exists in the parameters</doc>
          <type name="TreeStore" c:type="GtkTreeModel*"/>
        </return-value>
        <parameters>
          <parameter name="tree" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaTree object</doc>
            <type name="Gda.Tree" c:type="GdaTree*"/>
          </parameter>
          <parameter name="n_columns" transfer-ownership="none">
            <doc xml:whitespace="preserve">number of columns in the tree store</doc>
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="newv" c:identifier="gdaui_tree_store_newv">
        <return-value transfer-ownership="full">
          <type name="TreeStore" c:type="GtkTreeModel*"/>
        </return-value>
        <parameters>
          <parameter name="tree" transfer-ownership="none">
            <type name="Gda.Tree" c:type="GdaTree*"/>
          </parameter>
          <parameter name="n_columns" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="types"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="GType" c:type="GType*"/>
          </parameter>
          <parameter name="attribute_names" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </constructor>
      <property name="tree"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gda.Tree" c:type="GdaTree"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="TreeStorePriv" c:type="GdauiTreeStorePriv*"/>
      </field>
      <glib:signal name="drag-can-drag">
        <return-value transfer-ownership="full">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drag-can-drop">
        <return-value transfer-ownership="full">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drag-delete">
        <return-value transfer-ownership="full">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drag-drop">
        <return-value transfer-ownership="full">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drag-get">
        <return-value transfer-ownership="full">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="TreeStoreClass"
            c:type="GdauiTreeStoreClass"
            glib:is-gtype-struct-for="TreeStore">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="drag_can_drag">
        <callback name="drag_can_drag" c:type="drag_can_drag">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="store" transfer-ownership="none">
              <type name="TreeStore" c:type="GdauiTreeStore*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drag_get">
        <callback name="drag_get" c:type="drag_get">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="store" transfer-ownership="none">
              <type name="TreeStore" c:type="GdauiTreeStore*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="selection_data" transfer-ownership="none">
              <type name="Gtk.SelectionData" c:type="GtkSelectionData*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drag_can_drop">
        <callback name="drag_can_drop" c:type="drag_can_drop">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="store" transfer-ownership="none">
              <type name="TreeStore" c:type="GdauiTreeStore*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="selection_data" transfer-ownership="none">
              <type name="Gtk.SelectionData" c:type="GtkSelectionData*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drag_drop">
        <callback name="drag_drop" c:type="drag_drop">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="store" transfer-ownership="none">
              <type name="TreeStore" c:type="GdauiTreeStore*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="selection_data" transfer-ownership="none">
              <type name="Gtk.SelectionData" c:type="GtkSelectionData*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drag_delete">
        <callback name="drag_delete" c:type="drag_delete">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="store" transfer-ownership="none">
              <type name="TreeStore" c:type="GdauiTreeStore*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="TreeStorePriv" c:type="GdauiTreeStorePriv">
    </record>
    <function name="new_data_entry" c:identifier="gdaui_new_data_entry">
      <return-value transfer-ownership="full">
        <type name="DataEntry" c:type="GdauiDataEntry*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="plugin_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
