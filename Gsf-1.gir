<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.0"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <include name="libxml2" version="2.0"/>
  <package name="libgsf-1"/>
  <namespace name="Gsf"
             version="1"
             shared-library="libgsf-1.so.114"
             c:prefix="Gsf">
    <alias name="off_t" target="int64" c:type="gsf_off_t"/>
    <constant name="BAT_INDEX_SIZE" value="4">
      <type name="int"/>
    </constant>
    <constant name="BAT_MAGIC_BAT" value="2147483647">
      <type name="int"/>
    </constant>
    <constant name="BAT_MAGIC_END_OF_CHAIN" value="2147483647">
      <type name="int"/>
    </constant>
    <constant name="BAT_MAGIC_UNUSED" value="2147483647">
      <type name="int"/>
    </constant>
    <class name="Blob"
           c:type="GsfBlob"
           parent="GObject.Object"
           glib:type-name="GsfBlob"
           glib:get-type="gsf_blob_get_type"
           glib:type-struct="BlobClass">
      <constructor name="new"
                   c:identifier="gsf_blob_new"
                   doc="Creates a new #GsfBlob object to hold the specified data.  The blob can then
be used as a facility for reference-counting for the data.  The data is
copied internally, so the blob does not hold references to external chunks
of memory."
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="Blob" c:type="GsfBlob*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="data_to_copy" transfer-ownership="none">
            <type name="any" c:type="gconstpointer"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_size"
              c:identifier="gsf_blob_get_size"
              doc="Queries the size in bytes of the data stored in the blob.">
        <return-value transfer-ownership="none">
          <type name="size_t" c:type="gsize"/>
        </return-value>
      </method>
      <method name="peek_data"
              c:identifier="gsf_blob_peek_data"
              doc="Queries a pointer to the data stored in the blob.  This does not copy the data
for you; it returns a pointer to the actual buffer which the blob uses internally,
so you should not free this buffer on your own.
of the data is zero.">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gconstpointer"/>
        </return-value>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="BlobPrivate" c:type="GsfBlobPrivate*"/>
      </field>
    </class>
    <record name="BlobClass"
            c:type="GsfBlobClass"
            glib:is-gtype-struct-for="Blob">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="BlobPrivate" c:type="GsfBlobPrivate">
    </record>
    <class name="ClipData"
           c:type="GsfClipData"
           parent="GObject.Object"
           glib:type-name="GsfClipData"
           glib:get-type="gsf_clip_data_get_type"
           glib:type-struct="ClipDataClass">
      <constructor name="new"
                   c:identifier="gsf_clip_data_new"
                   doc="Creates a new #GsfClipData object.  This function acquires a reference to the
directly.">
        <return-value transfer-ownership="full">
          <type name="ClipData" c:type="GsfClipData*"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="ClipFormat" c:type="GsfClipFormat"/>
          </parameter>
          <parameter name="data_blob" transfer-ownership="none">
            <type name="Blob" c:type="GsfBlob*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_format"
              c:identifier="gsf_clip_data_get_format"
              doc="Queries the clipboard data format of a #GsfClipData.  The format refers to the data
blob inside the @clip_data; use gsf_clip_data_get_data_blob() to get that data blob.">
        <return-value transfer-ownership="full">
          <type name="ClipFormat" c:type="GsfClipFormat"/>
        </return-value>
      </method>
      <method name="get_data_blob"
              c:identifier="gsf_clip_data_get_data_blob"
              doc="Queries the data blob that actually stores a #GsfClipData&apos;s binary data.
binary data.  You must use g_object_unref() to dispose of that data blob when
you are done with it.">
        <return-value transfer-ownership="full">
          <type name="Blob" c:type="GsfBlob*"/>
        </return-value>
      </method>
      <method name="get_windows_clipboard_format"
              c:identifier="gsf_clip_data_get_windows_clipboard_format"
              doc="Queries the Windows clipboard data format for a #GsfClipData.  The @clip_data must
have been created with #GSF_CLIP_FORMAT_WINDOWS_CLIPBOARD.
smaller than it should be; in this case GSF_CLIP_FORMAT_WINDOWS_ERROR will be returned."
              throws="1">
        <return-value transfer-ownership="full">
          <type name="ClipFormatWindows" c:type="GsfClipFormatWindows"/>
        </return-value>
      </method>
      <method name="peek_real_data"
              c:identifier="gsf_clip_data_peek_real_data"
              doc="Queries a pointer directly to the clipboard data of a #GsfClipData.  The
resulting pointer is not necessarily the same data pointer that was passed to
gsf_blob_new() prior to creating the @clip_data.  For example, if the data is
in #GSF_CLIP_FORMAT_WINDOWS_CLIPBOARD format, then it will have extra header
bytes in front of the actual metafile data.  This function will skip over
those header bytes if necessary and return a pointer to the &quot;real&quot; data.
buffer is returned in the @ret_size argument."
              throws="1">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gconstpointer"/>
        </return-value>
        <parameters>
          <parameter name="ret_size" direction="out" transfer-ownership="full">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ClipDataPrivate" c:type="GsfClipDataPrivate*"/>
      </field>
    </class>
    <record name="ClipDataClass"
            c:type="GsfClipDataClass"
            glib:is-gtype-struct-for="ClipData">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="ClipDataPrivate" c:type="GsfClipDataPrivate">
    </record>
    <enumeration name="ClipFormat" c:type="GsfClipFormat">
      <member name="windows_clipboard"
              value="-1"
              c:identifier="GSF_CLIP_FORMAT_WINDOWS_CLIPBOARD"/>
      <member name="macintosh_clipboard"
              value="-2"
              c:identifier="GSF_CLIP_FORMAT_MACINTOSH_CLIPBOARD"/>
      <member name="guid" value="-3" c:identifier="GSF_CLIP_FORMAT_GUID"/>
      <member name="no_data" value="0" c:identifier="GSF_CLIP_FORMAT_NO_DATA"/>
      <member name="clipboard_format_name"
              value="1"
              c:identifier="GSF_CLIP_FORMAT_CLIPBOARD_FORMAT_NAME"/>
      <member name="unknown" value="2" c:identifier="GSF_CLIP_FORMAT_UNKNOWN"/>
    </enumeration>
    <enumeration name="ClipFormatWindows" c:type="GsfClipFormatWindows">
      <member name="error"
              value="-1"
              c:identifier="GSF_CLIP_FORMAT_WINDOWS_ERROR"/>
      <member name="unknown"
              value="-2"
              c:identifier="GSF_CLIP_FORMAT_WINDOWS_UNKNOWN"/>
      <member name="metafile"
              value="3"
              c:identifier="GSF_CLIP_FORMAT_WINDOWS_METAFILE"/>
      <member name="dib" value="8" c:identifier="GSF_CLIP_FORMAT_WINDOWS_DIB"/>
      <member name="enhanced_metafile"
              value="14"
              c:identifier="GSF_CLIP_FORMAT_WINDOWS_ENHANCED_METAFILE"/>
    </enumeration>
    <constant name="DIRENT_CHILD" value="76">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_CLSID" value="80">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_COLOUR" value="67">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_CREATE_TIME" value="100">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_DETAILS_SIZE" value="64">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_FILE_SIZE" value="120">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_FIRSTBLOCK" value="116">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_MAGIC_END" value="2147483647">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_MAX_NAME_SIZE" value="64">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_MODIFY_TIME" value="108">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_NAME_LEN" value="64">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_NEXT" value="72">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_PREV" value="68">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_SIZE" value="0">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_TYPE" value="66">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_TYPE_DIR" value="1">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_TYPE_FILE" value="2">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_TYPE_INVALID" value="0">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_TYPE_LOCKBYTES" value="3">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_TYPE_PROPERTY" value="4">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_TYPE_ROOTDIR" value="5">
      <type name="int"/>
    </constant>
    <constant name="DIRENT_USERFLAGS" value="96">
      <type name="int"/>
    </constant>
    <class name="DocMetaData"
           c:type="GsfDocMetaData"
           doc="Class representing information about a document, such as creator and time of
last modification."
           parent="GObject.Object"
           glib:type-name="GsfDocMetaData"
           glib:get-type="gsf_doc_meta_data_get_type">
      <constructor name="new" c:identifier="gsf_doc_meta_data_new">
        <return-value transfer-ownership="full">
          <type name="DocMetaData" c:type="GsfDocMetaData*"/>
        </return-value>
      </constructor>
      <method name="lookup" c:identifier="gsf_doc_meta_data_lookup">
        <return-value transfer-ownership="full">
          <type name="DocProp" c:type="GsfDocProp*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert" c:identifier="gsf_doc_meta_data_insert">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="gsf_doc_meta_data_remove">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <method name="steal" c:identifier="gsf_doc_meta_data_steal">
        <return-value transfer-ownership="full">
          <type name="DocProp" c:type="GsfDocProp*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <method name="store" c:identifier="gsf_doc_meta_data_store">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="prop" transfer-ownership="none">
            <type name="DocProp" c:type="GsfDocProp*"/>
          </parameter>
        </parameters>
      </method>
      <method name="foreach" c:identifier="gsf_doc_meta_data_foreach">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="GLib.HFunc" c:type="GHFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="size" c:identifier="gsf_doc_meta_data_size">
        <return-value transfer-ownership="none">
          <type name="size_t" c:type="gsize"/>
        </return-value>
      </method>
    </class>
    <record name="DocProp"
            c:type="GsfDocProp"
            doc="Class representing a properties of a document.">
      <constructor name="new" c:identifier="gsf_doc_prop_new">
        <return-value transfer-ownership="full">
          <type name="DocProp" c:type="GsfDocProp*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="gsf_doc_prop_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="gsf_doc_prop_get_name">
        <return-value transfer-ownership="full">
          <type name="char any" c:type="char any*"/>
        </return-value>
      </method>
      <method name="get_val" c:identifier="gsf_doc_prop_get_val">
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
      </method>
      <method name="set_val" c:identifier="gsf_doc_prop_set_val">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="swap_val" c:identifier="gsf_doc_prop_swap_val">
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_link" c:identifier="gsf_doc_prop_get_link">
        <return-value transfer-ownership="full">
          <type name="char any" c:type="char any*"/>
        </return-value>
      </method>
      <method name="set_link" c:identifier="gsf_doc_prop_set_link">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="link" transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dump" c:identifier="gsf_doc_prop_dump">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </record>
    <class name="DocPropVector"
           c:type="GsfDocPropVector"
           parent="GObject.Object"
           glib:type-name="GsfDocPropVector"
           glib:get-type="gsf_docprop_vector_get_type">
      <constructor name="new" c:identifier="gsf_docprop_vector_new">
        <return-value transfer-ownership="full">
          <type name="DocPropVector" c:type="GsfDocPropVector*"/>
        </return-value>
      </constructor>
      <method name="append" c:identifier="gsf_docprop_vector_append">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="as_string" c:identifier="gsf_docprop_vector_as_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
    </class>
    <enumeration name="Error"
                 c:type="GsfError"
                 glib:error-quark="gsf_error_quark">
      <member name="out_of_memory"
              value="0"
              c:identifier="GSF_ERROR_OUT_OF_MEMORY"/>
      <member name="invalid_data"
              value="1"
              c:identifier="GSF_ERROR_INVALID_DATA"/>
    </enumeration>
    <class name="Infile"
           c:type="GsfInfile"
           parent="Input"
           abstract="1"
           glib:type-name="GsfInfile"
           glib:get-type="gsf_infile_get_type"
           glib:type-struct="InfileClass">
      <virtual-method name="num_children" invoker="num_children">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </virtual-method>
      <virtual-method name="name_by_index" invoker="name_by_index">
        <return-value transfer-ownership="full">
          <type name="char any" c:type="char any*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="child_by_index"
                      invoker="child_by_index"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="Input" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="child_by_name" invoker="child_by_name" throws="1">
        <return-value transfer-ownership="full">
          <type name="Input" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="num_children" c:identifier="gsf_infile_num_children">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </method>
      <method name="name_by_index" c:identifier="gsf_infile_name_by_index">
        <return-value transfer-ownership="full">
          <type name="char any" c:type="char any*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="child_by_index" c:identifier="gsf_infile_child_by_index">
        <return-value transfer-ownership="full">
          <type name="Input" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="i" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="child_by_name" c:identifier="gsf_infile_child_by_name">
        <return-value transfer-ownership="full">
          <type name="Input" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <method name="child_by_vname" c:identifier="gsf_infile_child_by_vname">
        <return-value transfer-ownership="full">
          <type name="Input" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="child_by_aname" c:identifier="gsf_infile_child_by_aname">
        <return-value transfer-ownership="full">
          <type name="Input" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="names" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Input" c:type="GsfInput"/>
      </field>
    </class>
    <record name="InfileClass"
            c:type="GsfInfileClass"
            glib:is-gtype-struct-for="Infile">
      <field name="input_class">
        <type name="InputClass" c:type="GsfInputClass"/>
      </field>
      <field name="num_children">
        <callback name="num_children" c:type="num_children">
          <return-value transfer-ownership="none">
            <type name="int" c:type="int"/>
          </return-value>
          <parameters>
            <parameter name="infile" transfer-ownership="none">
              <type name="Infile" c:type="GsfInfile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="name_by_index">
        <callback name="name_by_index" c:type="name_by_index">
          <return-value transfer-ownership="full">
            <type name="char any" c:type="char any*"/>
          </return-value>
          <parameters>
            <parameter name="infile" transfer-ownership="none">
              <type name="Infile" c:type="GsfInfile*"/>
            </parameter>
            <parameter name="i" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="child_by_index">
        <callback name="child_by_index" c:type="child_by_index" throws="1">
          <return-value transfer-ownership="full">
            <type name="Input" c:type="GsfInput*"/>
          </return-value>
          <parameters>
            <parameter name="infile" transfer-ownership="none">
              <type name="Infile" c:type="GsfInfile*"/>
            </parameter>
            <parameter name="i" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="child_by_name">
        <callback name="child_by_name" c:type="child_by_name" throws="1">
          <return-value transfer-ownership="full">
            <type name="Input" c:type="GsfInput*"/>
          </return-value>
          <parameters>
            <parameter name="infile" transfer-ownership="none">
              <type name="Infile" c:type="GsfInfile*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="char any" c:type="char any*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="InfileMSOle"
           c:type="GsfInfileMSOle"
           parent="Infile"
           glib:type-name="GsfInfileMSOle"
           glib:get-type="gsf_infile_msole_get_type">
      <constructor name="new" c:identifier="gsf_infile_msole_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="InfileMSOle" c:type="GsfInfile*"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="Input" c:type="GsfInput*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_class_id" c:identifier="gsf_infile_msole_get_class_id">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
    </class>
    <class name="InfileMSVBA"
           c:type="GsfInfileMSVBA"
           parent="Infile"
           glib:type-name="GsfInfileMSVBA"
           glib:get-type="gsf_infile_msvba_get_type">
      <constructor name="new" c:identifier="gsf_infile_msvba_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="InfileMSVBA" c:type="GsfInfile*"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="Infile" c:type="GsfInfile*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_modules" c:identifier="gsf_infile_msvba_get_modules">
        <return-value transfer-ownership="full">
          <type name="GLib.HashTable" c:type="GHashTable*"/>
        </return-value>
      </method>
      <method name="steal_modules"
              c:identifier="gsf_infile_msvba_steal_modules">
        <return-value transfer-ownership="full">
          <type name="GLib.HashTable" c:type="GHashTable*"/>
        </return-value>
      </method>
    </class>
    <class name="InfileStdio"
           c:type="GsfInfileStdio"
           parent="Infile"
           glib:type-name="GsfInfileStdio"
           glib:get-type="gsf_infile_stdio_get_type">
      <constructor name="new" c:identifier="gsf_infile_stdio_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="InfileStdio" c:type="GsfInfile*"/>
        </return-value>
        <parameters>
          <parameter name="root" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <class name="InfileTar"
           c:type="GsfInfileTar"
           parent="Infile"
           glib:type-name="GsfInfileTar"
           glib:get-type="gsf_infile_tar_get_type">
      <constructor name="new" c:identifier="gsf_infile_tar_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="InfileTar" c:type="GsfInfile*"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="Input" c:type="GsfInput*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="source" writable="1" construct-only="1">
        <type name="Input" c:type="GsfInput"/>
      </property>
    </class>
    <class name="InfileZip"
           c:type="GsfInfileZip"
           parent="Infile"
           glib:type-name="GsfInfileZip"
           glib:get-type="gsf_infile_zip_get_type">
      <constructor name="new" c:identifier="gsf_infile_zip_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="InfileZip" c:type="GsfInfile*"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="Input" c:type="GsfInput*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="compression-level">
        <type name="int" c:type="gint"/>
      </property>
      <property name="internal-parent"
                readable="0"
                writable="1"
                construct-only="1">
        <type name="InfileZip" c:type="GsfInfileZip"/>
      </property>
      <property name="source" writable="1" construct-only="1">
        <type name="Input" c:type="GsfInput"/>
      </property>
    </class>
    <class name="Input"
           c:type="GsfInput"
           doc="Class representing an input stream."
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GsfInput"
           glib:get-type="gsf_input_get_type"
           glib:type-struct="InputClass">
      <function name="error_id" c:identifier="gsf_input_error_id">
        <return-value transfer-ownership="full">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
      <function name="error" c:identifier="gsf_input_error">
        <return-value transfer-ownership="full">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
      <function name="mmap_new" c:identifier="gsf_input_mmap_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="Input" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="Dup" throws="1">
        <return-value transfer-ownership="full">
          <type name="Input" c:type="GsfInput*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="Read">
        <return-value transfer-ownership="none">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="num_bytes" transfer-ownership="none">
            <type name="size_t" c:type="size_t"/>
          </parameter>
          <parameter name="optional_buffer" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="Seek">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="size_t" c:type="gsf_off_t"/>
          </parameter>
          <parameter name="whence" transfer-ownership="none">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="OpenSibling" throws="1">
        <return-value transfer-ownership="full">
          <type name="Input" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="dump" c:identifier="gsf_input_dump">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="dump_as_hex" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="name" c:identifier="gsf_input_name">
        <return-value transfer-ownership="full">
          <type name="char any" c:type="char any*"/>
        </return-value>
      </method>
      <method name="container" c:identifier="gsf_input_container">
        <return-value transfer-ownership="full">
          <type name="Infile" c:type="GsfInfile*"/>
        </return-value>
      </method>
      <method name="dup" c:identifier="gsf_input_dup" throws="1">
        <return-value transfer-ownership="full">
          <type name="Input" c:type="GsfInput*"/>
        </return-value>
      </method>
      <method name="sibling" c:identifier="gsf_input_sibling" throws="1">
        <return-value transfer-ownership="full">
          <type name="Input" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <method name="size" c:identifier="gsf_input_size">
        <return-value transfer-ownership="full">
          <type name="size_t" c:type="gsf_off_t"/>
        </return-value>
      </method>
      <method name="eof" c:identifier="gsf_input_eof">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="read" c:identifier="gsf_input_read">
        <return-value transfer-ownership="full">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="num_bytes" transfer-ownership="none">
            <type name="size_t" c:type="size_t"/>
          </parameter>
          <parameter name="optional_buffer" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="remaining" c:identifier="gsf_input_remaining">
        <return-value transfer-ownership="full">
          <type name="size_t" c:type="gsf_off_t"/>
        </return-value>
      </method>
      <method name="tell" c:identifier="gsf_input_tell">
        <return-value transfer-ownership="full">
          <type name="size_t" c:type="gsf_off_t"/>
        </return-value>
      </method>
      <method name="seek" c:identifier="gsf_input_seek">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="size_t" c:type="gsf_off_t"/>
          </parameter>
          <parameter name="whence" transfer-ownership="none">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy" c:identifier="gsf_input_copy">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="output" transfer-ownership="none">
            <type name="Output" c:type="GsfOutput*"/>
          </parameter>
        </parameters>
      </method>
      <method name="uncompress" c:identifier="gsf_input_uncompress">
        <return-value transfer-ownership="full">
          <type name="Input" c:type="GsfInput*"/>
        </return-value>
      </method>
      <method name="set_name" c:identifier="gsf_input_set_name">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name_from_filename"
              c:identifier="gsf_input_set_name_from_filename">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_container" c:identifier="gsf_input_set_container">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="container" transfer-ownership="none">
            <type name="Infile" c:type="GsfInfile*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size" c:identifier="gsf_input_set_size">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="size_t" c:type="gsf_off_t"/>
          </parameter>
        </parameters>
      </method>
      <method name="seek_emulate" c:identifier="gsf_input_seek_emulate">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="pos" transfer-ownership="none">
            <type name="size_t" c:type="gsf_off_t"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_vba" c:identifier="gsf_input_find_vba" throws="1">
        <return-value transfer-ownership="full">
          <type name="InfileMSVBA" c:type="GsfInfileMSVBA*"/>
        </return-value>
      </method>
      <property name="eof">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="name">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="position">
        <type name="int64" c:type="gint64"/>
      </property>
      <property name="remaining">
        <type name="int64" c:type="gint64"/>
      </property>
      <property name="size">
        <type name="int64" c:type="gint64"/>
      </property>
      <field name="g_object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="size">
        <type name="size_t" c:type="gsf_off_t"/>
      </field>
      <field name="cur_offset">
        <type name="size_t" c:type="gsf_off_t"/>
      </field>
      <field name="name">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="container">
        <type name="Infile" c:type="GsfInfile*"/>
      </field>
    </class>
    <record name="InputClass"
            c:type="GsfInputClass"
            glib:is-gtype-struct-for="Input">
      <field name="g_object_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="Dup">
        <callback name="Dup" c:type="Dup" throws="1">
          <return-value transfer-ownership="full">
            <type name="Input" c:type="GsfInput*"/>
          </return-value>
          <parameters>
            <parameter name="input" transfer-ownership="none">
              <type name="Input" c:type="GsfInput*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="Read">
        <callback name="Read" c:type="Read">
          <return-value transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="input" transfer-ownership="none">
              <type name="Input" c:type="GsfInput*"/>
            </parameter>
            <parameter name="num_bytes" transfer-ownership="none">
              <type name="size_t" c:type="size_t"/>
            </parameter>
            <parameter name="optional_buffer" transfer-ownership="none">
              <array c:type="guint8*">
                <type name="uint8"/>
              </array>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="Seek">
        <callback name="Seek" c:type="Seek">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="input" transfer-ownership="none">
              <type name="Input" c:type="GsfInput*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="size_t" c:type="gsf_off_t"/>
            </parameter>
            <parameter name="whence" transfer-ownership="none">
              <type name="GLib.SeekType" c:type="GSeekType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="OpenSibling">
        <callback name="OpenSibling" c:type="OpenSibling" throws="1">
          <return-value transfer-ownership="full">
            <type name="Input" c:type="GsfInput*"/>
          </return-value>
          <parameters>
            <parameter name="input" transfer-ownership="none">
              <type name="Input" c:type="GsfInput*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="char any" c:type="char any*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gsf_reserved0">
        <callback name="gsf_reserved0" c:type="_gsf_reserved0">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gsf_reserved1">
        <callback name="gsf_reserved1" c:type="_gsf_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gsf_reserved2">
        <callback name="gsf_reserved2" c:type="_gsf_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gsf_reserved3">
        <callback name="gsf_reserved3" c:type="_gsf_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="InputGZip"
           c:type="GsfInputGZip"
           parent="Input"
           glib:type-name="GsfInputGZip"
           glib:get-type="gsf_input_gzip_get_type">
      <constructor name="new" c:identifier="gsf_input_gzip_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="InputGZip" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="Input" c:type="GsfInput*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="raw" writable="1" construct-only="1">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="source" writable="1" construct-only="1">
        <type name="Input" c:type="GsfInput"/>
      </property>
      <property name="uncompressed-size" writable="1" construct-only="1">
        <type name="int64" c:type="gint64"/>
      </property>
    </class>
    <class name="InputGio"
           c:type="GsfInputGio"
           parent="Input"
           glib:type-name="GsfInputGio"
           glib:get-type="gsf_input_gio_get_type">
      <constructor name="new" c:identifier="gsf_input_gio_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="InputGio" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="file" transfer-ownership="none">
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_path"
                   c:identifier="gsf_input_gio_new_for_path"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="InputGio" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_uri"
                   c:identifier="gsf_input_gio_new_for_uri"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="InputGio" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <class name="InputHTTP"
           c:type="GsfInputHTTP"
           parent="Input"
           glib:type-name="GsfInputHTTP"
           glib:get-type="gsf_input_http_get_type">
      <constructor name="new" c:identifier="gsf_input_http_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="InputHTTP" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="url" transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_url" c:identifier="gsf_input_http_get_url">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_content_type"
              c:identifier="gsf_input_http_get_content_type">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <property name="content-type" writable="1" construct-only="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="url" writable="1" construct-only="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
    </class>
    <class name="InputMemory"
           c:type="GsfInputMemory"
           parent="Input"
           glib:type-name="GsfInputMemory"
           glib:get-type="gsf_input_memory_get_type">
      <constructor name="new_from_bzip"
                   c:identifier="gsf_input_memory_new_from_bzip"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="InputMemory" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="Input" c:type="GsfInput*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_iochannel"
                   c:identifier="gsf_input_memory_new_from_iochannel"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="InputMemory" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="channel" transfer-ownership="none">
            <type name="GLib.IOChannel" c:type="GIOChannel*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new" c:identifier="gsf_input_memory_new">
        <return-value transfer-ownership="full">
          <type name="InputMemory" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="buf" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="size_t" c:type="gsf_off_t"/>
          </parameter>
          <parameter name="needs_free" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_clone" c:identifier="gsf_input_memory_new_clone">
        <return-value transfer-ownership="full">
          <type name="InputMemory" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="buf" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="size_t" c:type="gsf_off_t"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <class name="InputProxy"
           c:type="GsfInputProxy"
           parent="Input"
           glib:type-name="GsfInputProxy"
           glib:get-type="gsf_input_proxy_get_type">
      <constructor name="new" c:identifier="gsf_input_proxy_new">
        <return-value transfer-ownership="full">
          <type name="InputProxy" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="Input" c:type="GsfInput*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_section"
                   c:identifier="gsf_input_proxy_new_section">
        <return-value transfer-ownership="full">
          <type name="InputProxy" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="Input" c:type="GsfInput*"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <type name="size_t" c:type="gsf_off_t"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="size_t" c:type="gsf_off_t"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <class name="InputStdio"
           c:type="GsfInputStdio"
           parent="Input"
           glib:type-name="GsfInputStdio"
           glib:get-type="gsf_input_stdio_get_type">
      <constructor name="new" c:identifier="gsf_input_stdio_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="InputStdio" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <class name="InputTextline"
           c:type="GsfInputTextline"
           parent="Input"
           glib:type-name="GsfInputTextline"
           glib:get-type="gsf_input_textline_get_type">
      <constructor name="new" c:identifier="gsf_input_textline_new">
        <return-value transfer-ownership="full">
          <type name="InputTextline" c:type="GsfInput*"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="Input" c:type="GsfInput*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="ascii_gets" c:identifier="gsf_input_textline_ascii_gets">
        <return-value transfer-ownership="full">
          <array c:type="unsigned char*">
            <type name="uint8"/>
          </array>
        </return-value>
      </method>
      <method name="utf8_gets" c:identifier="gsf_input_textline_utf8_gets">
        <return-value transfer-ownership="full">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </return-value>
      </method>
    </class>
    <constant name="META_NAME_BYTE_COUNT" value="gsf:byte-count">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_CASE_SENSITIVE" value="gsf:case-sensitivity">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_CATEGORY" value="gsf:category">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_CELL_COUNT" value="gsf:cell-count">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_CHARACTER_COUNT" value="gsf:character-count">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_CODEPAGE" value="msole:codepage">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_COMPANY" value="dc:publisher">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_CREATOR" value="dc:creator">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_DATE_CREATED" value="meta:creation-date">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_DATE_MODIFIED" value="dc:date">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_DESCRIPTION" value="dc:description">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_DICTIONARY" value="gsf:dictionary">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_DOCUMENT_PARTS" value="gsf:document-parts">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_EDITING_DURATION" value="meta:editing-duration">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_GENERATOR" value="meta:generator">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_HEADING_PAIRS" value="gsf:heading-pairs">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_HIDDEN_SLIDE_COUNT"
              value="gsf:hidden-slide-count">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_IMAGE_COUNT" value="gsf:image-count">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_INITIAL_CREATOR" value="meta:initial-creator">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_KEYWORD" value="meta:keyword">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_KEYWORDS" value="dc:keywords">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_LANGUAGE" value="dc:language">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_LAST_PRINTED" value="gsf:last-printed">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_LAST_SAVED_BY" value="gsf:last-saved-by">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_LINE_COUNT" value="gsf:line-count">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_LINKS_DIRTY" value="gsf:links-dirty">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_LOCALE_SYSTEM_DEFAULT"
              value="gsf:default-locale">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_MANAGER" value="gsf:manager">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_MM_CLIP_COUNT" value="gsf:MM-clip-count">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_MSOLE_UNKNOWN_17" value="msole:unknown-doc-17">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_MSOLE_UNKNOWN_18" value="msole:unknown-doc-18">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_MSOLE_UNKNOWN_19" value="msole:unknown-doc-19">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_MSOLE_UNKNOWN_20" value="msole:unknown-doc-20">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_MSOLE_UNKNOWN_21" value="msole:unknown-doc-21">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_MSOLE_UNKNOWN_22" value="msole:unknown-doc-22">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_MSOLE_UNKNOWN_23" value="msole:unknown-doc-23">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_NOTE_COUNT" value="gsf:note-count">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_OBJECT_COUNT" value="gsf:object-count">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_PAGE_COUNT" value="gsf:page-count">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_PARAGRAPH_COUNT" value="gsf:paragraph-count">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_PRESENTATION_FORMAT"
              value="gsf:presentation-format">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_PRINTED_BY" value="meta:printed-by">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_PRINT_DATE" value="meta:print-date">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_REVISION_COUNT" value="meta:editing-cycles">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_SCALE" value="gsf:scale">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_SECURITY" value="gsf:security">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_SLIDE_COUNT" value="gsf:slide-count">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_SPREADSHEET_COUNT" value="gsf:spreadsheet-count">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_SUBJECT" value="dc:subject">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_TABLE_COUNT" value="gsf:table-count">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_TEMPLATE" value="meta:template">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_THUMBNAIL" value="gsf:thumbnail">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_TITLE" value="dc:title">
      <type name="utf8"/>
    </constant>
    <constant name="META_NAME_WORD_COUNT" value="gsf:word-count">
      <type name="utf8"/>
    </constant>
    <constant name="OLE_DEFAULT_BB_SHIFT" value="9">
      <type name="int"/>
    </constant>
    <constant name="OLE_DEFAULT_SB_SHIFT" value="6">
      <type name="int"/>
    </constant>
    <constant name="OLE_HEADER_BB_SHIFT" value="30">
      <type name="int"/>
    </constant>
    <constant name="OLE_HEADER_BYTE_ORDER" value="28">
      <type name="int"/>
    </constant>
    <constant name="OLE_HEADER_CLSID" value="8">
      <type name="int"/>
    </constant>
    <constant name="OLE_HEADER_CSECTDIR" value="40">
      <type name="int"/>
    </constant>
    <constant name="OLE_HEADER_DIRENT_START" value="48">
      <type name="int"/>
    </constant>
    <constant name="OLE_HEADER_MAJOR_VER" value="26">
      <type name="int"/>
    </constant>
    <constant name="OLE_HEADER_METABAT_BLOCK" value="68">
      <type name="int"/>
    </constant>
    <constant name="OLE_HEADER_METABAT_SIZE" value="0">
      <type name="int"/>
    </constant>
    <constant name="OLE_HEADER_MINOR_VER" value="24">
      <type name="int"/>
    </constant>
    <constant name="OLE_HEADER_NUM_BAT" value="44">
      <type name="int"/>
    </constant>
    <constant name="OLE_HEADER_NUM_METABAT" value="72">
      <type name="int"/>
    </constant>
    <constant name="OLE_HEADER_NUM_SBAT" value="64">
      <type name="int"/>
    </constant>
    <constant name="OLE_HEADER_SBAT_START" value="60">
      <type name="int"/>
    </constant>
    <constant name="OLE_HEADER_SB_SHIFT" value="32">
      <type name="int"/>
    </constant>
    <constant name="OLE_HEADER_SIGNATURE" value="0">
      <type name="int"/>
    </constant>
    <constant name="OLE_HEADER_SIZE" value="512">
      <type name="int"/>
    </constant>
    <constant name="OLE_HEADER_START_BAT" value="76">
      <type name="int"/>
    </constant>
    <constant name="OLE_HEADER_THRESHOLD" value="56">
      <type name="int"/>
    </constant>
    <callback name="OpenPkgIter" c:type="GsfOpenPkgIter">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="opkg" transfer-ownership="none">
          <type name="Input" c:type="GsfInput*"/>
        </parameter>
        <parameter name="rel" transfer-ownership="none">
          <type name="OpenPkgRel" c:type="GsfOpenPkgRel*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="OpenPkgRel" c:type="GsfOpenPkgRel">
      <method name="is_extern" c:identifier="gsf_open_pkg_rel_is_extern">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_target" c:identifier="gsf_open_pkg_rel_get_target">
        <return-value transfer-ownership="full">
          <type name="char any" c:type="char any*"/>
        </return-value>
      </method>
    </record>
    <record name="OpenPkgRels" c:type="GsfOpenPkgRels">
    </record>
    <class name="Outfile"
           c:type="GsfOutfile"
           doc="Class representing an output file, counterpart to #GsfInfile."
           parent="Output"
           abstract="1"
           glib:type-name="GsfOutfile"
           glib:get-type="gsf_outfile_get_type"
           glib:type-struct="OutfileClass">
      <constructor name="new_child" c:identifier="gsf_outfile_new_child">
        <return-value transfer-ownership="full">
          <type name="Outfile" c:type="GsfOutput*"/>
        </return-value>
        <parameters>
          <parameter name="outfile" transfer-ownership="none">
            <type name="Outfile" c:type="GsfOutfile*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="is_dir" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_child_full"
                   c:identifier="gsf_outfile_new_child_full">
        <return-value transfer-ownership="full">
          <type name="Outfile" c:type="GsfOutput*"/>
        </return-value>
        <parameters>
          <parameter name="outfile" transfer-ownership="none">
            <type name="Outfile" c:type="GsfOutfile*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="is_dir" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="first_property_name" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </constructor>
      <method name="open_pkg_add_rel"
              c:identifier="gsf_outfile_open_pkg_add_rel"
              doc="A convenience wrapper to create a child in @dir of @content_type then create
a @type relation to @parent">
        <return-value transfer-ownership="full">
          <type name="Output" c:type="GsfOutput*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="content_type" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <type name="Outfile" c:type="GsfOutfile*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Output" c:type="GsfOutput"/>
      </field>
    </class>
    <record name="OutfileClass"
            c:type="GsfOutfileClass"
            glib:is-gtype-struct-for="Outfile">
      <field name="output_class">
        <type name="OutputClass" c:type="GsfOutputClass"/>
      </field>
      <field name="new_child" readable="0">
        <type name="any" c:type="void*"/>
      </field>
    </record>
    <class name="OutfileMSOle"
           c:type="GsfOutfileMSOle"
           parent="Outfile"
           glib:type-name="GsfOutfileMSOle"
           glib:get-type="gsf_outfile_msole_get_type">
      <constructor name="new" c:identifier="gsf_outfile_msole_new">
        <return-value transfer-ownership="full">
          <type name="OutfileMSOle" c:type="GsfOutfile*"/>
        </return-value>
        <parameters>
          <parameter name="sink" transfer-ownership="none">
            <type name="Output" c:type="GsfOutput*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_full" c:identifier="gsf_outfile_msole_new_full">
        <return-value transfer-ownership="full">
          <type name="OutfileMSOle" c:type="GsfOutfile*"/>
        </return-value>
        <parameters>
          <parameter name="sink" transfer-ownership="none">
            <type name="Output" c:type="GsfOutput*"/>
          </parameter>
          <parameter name="bb_size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="sb_size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_class_id"
              c:identifier="gsf_outfile_msole_set_class_id">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="clsid" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
    </class>
    <class name="OutfileOpenPkg"
           c:type="GsfOutfileOpenPkg"
           parent="Outfile"
           glib:type-name="GsfOutfileOpenPkg"
           glib:get-type="gsf_outfile_open_pkg_get_type">
      <constructor name="new" c:identifier="gsf_outfile_open_pkg_new">
        <return-value transfer-ownership="full">
          <type name="OutfileOpenPkg" c:type="GsfOutfile*"/>
        </return-value>
        <parameters>
          <parameter name="sink" transfer-ownership="none">
            <type name="Outfile" c:type="GsfOutfile*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_sink" c:identifier="gsf_outfile_open_pkg_set_sink">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="sink" transfer-ownership="none">
            <type name="Output" c:type="GsfOutput*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_content_type"
              c:identifier="gsf_outfile_open_pkg_set_content_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="content_type" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <method name="relate"
              c:identifier="gsf_outfile_open_pkg_relate"
              doc="Create a relationship between @child and @parent of @type.">
        <return-value transfer-ownership="full">
          <type name="char any" c:type="char any*"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="OutfileOpenPkg" c:type="GsfOutfileOpenPkg*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_extern_rel"
              c:identifier="gsf_outfile_open_pkg_add_extern_rel">
        <return-value transfer-ownership="full">
          <type name="char any" c:type="char any*"/>
        </return-value>
        <parameters>
          <parameter name="target" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="content_type" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <property name="content-type" writable="1" construct-only="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="is-dir" writable="1" construct-only="1">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="sink" writable="1" construct-only="1">
        <type name="Outfile" c:type="GsfOutfile"/>
      </property>
    </class>
    <class name="OutfileStdio"
           c:type="GsfOutfileStdio"
           parent="Outfile"
           glib:type-name="GsfOutfileStdio"
           glib:get-type="gsf_outfile_stdio_get_type">
      <constructor name="new" c:identifier="gsf_outfile_stdio_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="OutfileStdio" c:type="GsfOutfile*"/>
        </return-value>
        <parameters>
          <parameter name="root" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_full" c:identifier="gsf_outfile_stdio_new_full">
        <return-value transfer-ownership="full">
          <type name="OutfileStdio" c:type="GsfOutfile*"/>
        </return-value>
        <parameters>
          <parameter name="root" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="err" transfer-ownership="none">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
          <parameter name="first_property_name" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <class name="OutfileZip"
           c:type="GsfOutfileZip"
           parent="Outfile"
           glib:type-name="GsfOutfileZip"
           glib:get-type="gsf_outfile_zip_get_type">
      <constructor name="new" c:identifier="gsf_outfile_zip_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="OutfileZip" c:type="GsfOutfile*"/>
        </return-value>
        <parameters>
          <parameter name="sink" transfer-ownership="none">
            <type name="Output" c:type="GsfOutput*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_compression_method"
              c:identifier="gsf_outfile_zip_set_compression_method">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="method" transfer-ownership="none">
            <type name="ZipCompressionMethod"
                  c:type="GsfZipCompressionMethod"/>
          </parameter>
        </parameters>
      </method>
      <property name="compression-level" writable="1" construct-only="1">
        <type name="int" c:type="gint"/>
      </property>
      <property name="entry-name" writable="1" construct-only="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="sink" writable="1" construct-only="1">
        <type name="Output" c:type="GsfOutput"/>
      </property>
    </class>
    <class name="Output"
           c:type="GsfOutput"
           doc="Class representing an output stream, counterpart to #GsfInput."
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GsfOutput"
           glib:get-type="gsf_output_get_type"
           glib:type-struct="OutputClass">
      <function name="wrap" c:identifier="gsf_output_wrap">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="wrapper" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="wrapee" transfer-ownership="none">
            <type name="Output" c:type="GsfOutput*"/>
          </parameter>
        </parameters>
      </function>
      <function name="unwrap" c:identifier="gsf_output_unwrap">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="wrapper" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="wrapee" transfer-ownership="none">
            <type name="Output" c:type="GsfOutput*"/>
          </parameter>
        </parameters>
      </function>
      <function name="error_id" c:identifier="gsf_output_error_id">
        <return-value transfer-ownership="full">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
      <virtual-method name="Close">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="Seek">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="size_t" c:type="gsf_off_t"/>
          </parameter>
          <parameter name="whence" transfer-ownership="none">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="Write">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="num_bytes" transfer-ownership="none">
            <type name="size_t" c:type="size_t"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="name" c:identifier="gsf_output_name">
        <return-value transfer-ownership="full">
          <type name="char any" c:type="char any*"/>
        </return-value>
      </method>
      <method name="container" c:identifier="gsf_output_container">
        <return-value transfer-ownership="full">
          <type name="Outfile" c:type="GsfOutfile*"/>
        </return-value>
      </method>
      <method name="error" c:identifier="gsf_output_error">
        <return-value transfer-ownership="full">
          <type name="GLib.Error" c:type="GError*"/>
        </return-value>
      </method>
      <method name="set_error" c:identifier="gsf_output_set_error">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="code" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="size" c:identifier="gsf_output_size">
        <return-value transfer-ownership="full">
          <type name="size_t" c:type="gsf_off_t"/>
        </return-value>
      </method>
      <method name="close" c:identifier="gsf_output_close">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_closed" c:identifier="gsf_output_is_closed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="tell" c:identifier="gsf_output_tell">
        <return-value transfer-ownership="full">
          <type name="size_t" c:type="gsf_off_t"/>
        </return-value>
      </method>
      <method name="seek" c:identifier="gsf_output_seek">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="size_t" c:type="gsf_off_t"/>
          </parameter>
          <parameter name="whence" transfer-ownership="none">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
        </parameters>
      </method>
      <method name="write" c:identifier="gsf_output_write">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="num_bytes" transfer-ownership="none">
            <type name="size_t" c:type="size_t"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="printf" c:identifier="gsf_output_printf">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="puts"
              c:identifier="gsf_output_puts"
              doc="Like fputs, this assumes that the line already ends with a newline">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="line" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name" c:identifier="gsf_output_set_name">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name_from_filename"
              c:identifier="gsf_output_set_name_from_filename">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_container" c:identifier="gsf_output_set_container">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="container" transfer-ownership="none">
            <type name="Outfile" c:type="GsfOutfile*"/>
          </parameter>
        </parameters>
      </method>
      <property name="is-closed">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="name">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="position">
        <type name="int64" c:type="gint64"/>
      </property>
      <property name="size">
        <type name="int64" c:type="gint64"/>
      </property>
      <field name="g_object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="cur_size">
        <type name="size_t" c:type="gsf_off_t"/>
      </field>
      <field name="cur_offset">
        <type name="size_t" c:type="gsf_off_t"/>
      </field>
      <field name="name">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="wrapped_by">
        <type name="GObject.Object" c:type="GObject*"/>
      </field>
      <field name="container">
        <type name="Outfile" c:type="GsfOutfile*"/>
      </field>
      <field name="err">
        <type name="GLib.Error" c:type="GError*"/>
      </field>
      <field name="is_closed">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="printf_buf">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="printf_buf_size">
        <type name="int" c:type="int"/>
      </field>
    </class>
    <class name="OutputBzip"
           c:type="GsfOutputBzip"
           parent="Output"
           glib:type-name="GsfOutputBzip"
           glib:get-type="gsf_output_bzip_get_type">
      <constructor name="new" c:identifier="gsf_output_bzip_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="OutputBzip" c:type="GsfOutput*"/>
        </return-value>
        <parameters>
          <parameter name="sink" transfer-ownership="none">
            <type name="Output" c:type="GsfOutput*"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <record name="OutputClass"
            c:type="GsfOutputClass"
            glib:is-gtype-struct-for="Output">
      <field name="g_object_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="Close">
        <callback name="Close" c:type="Close">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="output" transfer-ownership="none">
              <type name="Output" c:type="GsfOutput*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="Seek">
        <callback name="Seek" c:type="Seek">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="output" transfer-ownership="none">
              <type name="Output" c:type="GsfOutput*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="size_t" c:type="gsf_off_t"/>
            </parameter>
            <parameter name="whence" transfer-ownership="none">
              <type name="GLib.SeekType" c:type="GSeekType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="Write">
        <callback name="Write" c:type="Write">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="output" transfer-ownership="none">
              <type name="Output" c:type="GsfOutput*"/>
            </parameter>
            <parameter name="num_bytes" transfer-ownership="none">
              <type name="size_t" c:type="size_t"/>
            </parameter>
            <parameter name="data" transfer-ownership="none">
              <array c:type="guint8*">
                <type name="uint8"/>
              </array>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="Vprintf" readable="0">
        <type name="any" c:type="void*"/>
      </field>
    </record>
    <class name="OutputCsv"
           c:type="GsfOutputCsv"
           parent="Output"
           glib:type-name="GsfOutputCsv"
           glib:get-type="gsf_output_csv_get_type"
           glib:type-struct="OutputCsvClass">
      <method name="write_field" c:identifier="gsf_output_csv_write_field">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="field" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <type name="size_t" c:type="size_t"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_eol" c:identifier="gsf_output_csv_write_eol">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <property name="eol" writable="1" construct="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="quote" writable="1" construct="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="quoting-mode" writable="1" construct="1">
        <type name="OutputCsvQuotingMode" c:type="GsfOutputCsvQuotingMode"/>
      </property>
      <property name="quoting-on-whitespace" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="quoting-triggers" writable="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="separator" writable="1" construct="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="sink" writable="1">
        <type name="Output" c:type="GsfOutput"/>
      </property>
      <field name="output">
        <type name="Output" c:type="GsfOutput"/>
      </field>
      <field name="sink">
        <type name="Output" c:type="GsfOutput*"/>
      </field>
      <field name="quote">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="quote_len">
        <type name="size_t" c:type="size_t"/>
      </field>
      <field name="quoting_mode">
        <type name="OutputCsvQuotingMode" c:type="GsfOutputCsvQuotingMode"/>
      </field>
      <field name="quoting_triggers">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="eol">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="eol_len">
        <type name="size_t" c:type="size_t"/>
      </field>
      <field name="separator">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="separator_len">
        <type name="size_t" c:type="size_t"/>
      </field>
      <field name="fields_on_line">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="buf">
        <type name="GLib.String" c:type="GString*"/>
      </field>
    </class>
    <record name="OutputCsvClass"
            c:type="GsfOutputCsvClass"
            glib:is-gtype-struct-for="OutputCsv">
      <field name="output_class">
        <type name="OutputClass" c:type="GsfOutputClass"/>
      </field>
    </record>
    <enumeration name="OutputCsvQuotingMode"
                 glib:type-name="GsfOutputCsvQuotingMode"
                 glib:get-type="gsf_output_csv_quoting_mode_get_type"
                 c:type="GsfOutputCsvQuotingMode">
      <member name="never"
              value="0"
              c:identifier="GSF_OUTPUT_CSV_QUOTING_MODE_NEVER"
              glib:nick="never"/>
      <member name="auto"
              value="1"
              c:identifier="GSF_OUTPUT_CSV_QUOTING_MODE_AUTO"
              glib:nick="auto"/>
      <member name="always"
              value="2"
              c:identifier="GSF_OUTPUT_CSV_QUOTING_MODE_ALWAYS"
              glib:nick="always"/>
    </enumeration>
    <class name="OutputGZip"
           c:type="GsfOutputGZip"
           parent="Output"
           glib:type-name="GsfOutputGZip"
           glib:get-type="gsf_output_gzip_get_type">
      <constructor name="new" c:identifier="gsf_output_gzip_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="OutputGZip" c:type="GsfOutput*"/>
        </return-value>
        <parameters>
          <parameter name="sink" transfer-ownership="none">
            <type name="Output" c:type="GsfOutput*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="raw" writable="1" construct-only="1">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="sink" writable="1" construct-only="1">
        <type name="Output" c:type="GsfOutput"/>
      </property>
    </class>
    <class name="OutputGio"
           c:type="GsfOutputGio"
           parent="Output"
           glib:type-name="GsfOutputGio"
           glib:get-type="gsf_output_gio_get_type">
      <constructor name="new" c:identifier="gsf_output_gio_new">
        <return-value transfer-ownership="full">
          <type name="OutputGio" c:type="GsfOutput*"/>
        </return-value>
        <parameters>
          <parameter name="file" transfer-ownership="none">
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_path"
                   c:identifier="gsf_output_gio_new_for_path"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="OutputGio" c:type="GsfOutput*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_uri"
                   c:identifier="gsf_output_gio_new_for_uri"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="OutputGio" c:type="GsfOutput*"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <class name="OutputIOChannel"
           c:type="GsfOutputIOChannel"
           parent="Output"
           glib:type-name="GsfOutputIOChannel"
           glib:get-type="gsf_output_iochannel_get_type">
      <constructor name="new" c:identifier="gsf_output_iochannel_new">
        <return-value transfer-ownership="full">
          <type name="OutputIOChannel" c:type="GsfOutput*"/>
        </return-value>
        <parameters>
          <parameter name="channel" transfer-ownership="none">
            <type name="GLib.IOChannel" c:type="GIOChannel*"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <class name="OutputIconv"
           c:type="GsfOutputIconv"
           parent="Output"
           glib:type-name="GsfOutputIconv"
           glib:get-type="gsf_output_iconv_get_type"
           glib:type-struct="OutputIconvClass">
      <constructor name="new" c:identifier="gsf_output_iconv_new">
        <return-value transfer-ownership="full">
          <type name="OutputIconv" c:type="GsfOutput*"/>
        </return-value>
        <parameters>
          <parameter name="sink" transfer-ownership="none">
            <type name="Output" c:type="GsfOutput*"/>
          </parameter>
          <parameter name="dst" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="src" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="fallback" writable="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="input-charset" writable="1" construct-only="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="output-charset" writable="1" construct-only="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="sink" writable="1" construct-only="1">
        <type name="Output" c:type="GsfOutput"/>
      </property>
    </class>
    <record name="OutputIconvClass"
            c:type="GsfOutputIconvClass"
            glib:is-gtype-struct-for="OutputIconv">
      <field name="output_class">
        <type name="OutputClass" c:type="GsfOutputClass"/>
      </field>
    </record>
    <class name="OutputMemory"
           c:type="GsfOutputMemory"
           parent="Output"
           glib:type-name="GsfOutputMemory"
           glib:get-type="gsf_output_memory_get_type">
      <constructor name="new" c:identifier="gsf_output_memory_new">
        <return-value transfer-ownership="full">
          <type name="OutputMemory" c:type="GsfOutput*"/>
        </return-value>
      </constructor>
      <method name="get_bytes" c:identifier="gsf_output_memory_get_bytes">
        <return-value transfer-ownership="none">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </return-value>
      </method>
    </class>
    <class name="OutputStdio"
           c:type="GsfOutputStdio"
           parent="Output"
           glib:type-name="GsfOutputStdio"
           glib:get-type="gsf_output_stdio_get_type">
      <constructor name="new" c:identifier="gsf_output_stdio_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="OutputStdio" c:type="GsfOutput*"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_full" c:identifier="gsf_output_stdio_new_full">
        <return-value transfer-ownership="full">
          <type name="OutputStdio" c:type="GsfOutput*"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="err" transfer-ownership="none">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
          <parameter name="first_property_name" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <constant name="PARAM_STATIC" value="0">
      <type name="int"/>
    </constant>
    <class name="SharedMemory"
           c:type="GsfSharedMemory"
           parent="GObject.Object"
           glib:type-name="GsfSharedMemory"
           glib:get-type="gsf_shared_memory_get_type">
      <constructor name="new" c:identifier="gsf_shared_memory_new">
        <return-value transfer-ownership="full">
          <type name="SharedMemory" c:type="GsfSharedMemory*"/>
        </return-value>
        <parameters>
          <parameter name="buf" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="size_t" c:type="gsf_off_t"/>
          </parameter>
          <parameter name="needs_free" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="mmapped_new"
                c:identifier="gsf_shared_memory_mmapped_new">
        <return-value transfer-ownership="full">
          <type name="SharedMemory" c:type="GsfSharedMemory*"/>
        </return-value>
        <parameters>
          <parameter name="buf" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="size_t" c:type="gsf_off_t"/>
          </parameter>
        </parameters>
      </function>
      <field name="g_object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="buf">
        <type name="any" c:type="void*"/>
      </field>
      <field name="size">
        <type name="size_t" c:type="gsf_off_t"/>
      </field>
      <field name="needs_free">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="needs_unmap">
        <type name="boolean" c:type="gboolean"/>
      </field>
    </class>
    <class name="StructuredBlob"
           c:type="GsfStructuredBlob"
           parent="Infile"
           glib:type-name="GsfStructuredBlob"
           glib:get-type="gsf_structured_blob_get_type">
      <function name="read" c:identifier="gsf_structured_blob_read">
        <return-value transfer-ownership="full">
          <type name="StructuredBlob" c:type="GsfStructuredBlob*"/>
        </return-value>
        <parameters>
          <parameter name="input" transfer-ownership="none">
            <type name="Input" c:type="GsfInput*"/>
          </parameter>
        </parameters>
      </function>
      <method name="write" c:identifier="gsf_structured_blob_write">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="container" transfer-ownership="none">
            <type name="Outfile" c:type="GsfOutfile*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="Timestamp"
            c:type="GsfTimestamp"
            doc="A point in time."
            glib:type-name="GsfTimestamp"
            glib:get-type="gsf_timestamp_get_type">
      <field name="date" writable="1">
        <type name="GLib.Date" c:type="GDate"/>
      </field>
      <field name="seconds" writable="1">
        <type name="long" c:type="glong"/>
      </field>
      <field name="time_zone" writable="1">
        <type name="GLib.String" c:type="GString"/>
      </field>
      <field name="timet" writable="1">
        <type name="uint32" c:type="guint32"/>
      </field>
      <constructor name="new" c:identifier="gsf_timestamp_new">
        <return-value transfer-ownership="full">
          <type name="Timestamp" c:type="GsfTimestamp*"/>
        </return-value>
      </constructor>
      <method name="copy"
              c:identifier="gsf_timestamp_copy"
              doc="Copies a timestamp.">
        <return-value transfer-ownership="full">
          <type name="Timestamp" c:type="GsfTimestamp*"/>
        </return-value>
      </method>
      <method name="free" c:identifier="gsf_timestamp_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="as_string" c:identifier="gsf_timestamp_as_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="hash" c:identifier="gsf_timestamp_hash">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="equal" c:identifier="gsf_timestamp_equal">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="b" transfer-ownership="none">
            <type name="Timestamp" c:type="GsfTimestamp*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_time" c:identifier="gsf_timestamp_set_time">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="t" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="XMLBlob" c:type="GsfXMLBlob">
    </record>
    <enumeration name="XMLContent" c:type="GsfXMLContent">
      <member name="no_content" value="0" c:identifier="GSF_XML_NO_CONTENT"/>
      <member name="content" value="1" c:identifier="GSF_XML_CONTENT"/>
      <member name="shared_content"
              value="2"
              c:identifier="GSF_XML_SHARED_CONTENT"/>
    </enumeration>
    <record name="XMLIn" c:type="GsfXMLIn">
      <field name="user_state" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="content" writable="1">
        <type name="GLib.String" c:type="GString*"/>
      </field>
      <field name="doc" writable="1">
        <type name="XMLInDoc" c:type="GsfXMLInDoc*"/>
      </field>
      <field name="node" writable="1">
        <type name="XMLInNode" c:type="GsfXMLInNode*"/>
      </field>
      <field name="node_stack" writable="1">
        <type name="GLib.SList" c:type="GSList*"/>
      </field>
      <method name="push_state" c:identifier="gsf_xml_in_push_state">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="doc" transfer-ownership="none">
            <type name="XMLInDoc" c:type="GsfXMLInDoc*"/>
          </parameter>
          <parameter name="new_state" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="dtor" transfer-ownership="none" scope="call">
            <type name="XMLInExtDtor" c:type="GsfXMLInExtDtor"/>
          </parameter>
          <parameter name="attrs" transfer-ownership="none">
            <type name="libxml2.Char" c:type="xmlChar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_input" c:identifier="gsf_xml_in_get_input">
        <return-value transfer-ownership="full">
          <type name="Input" c:type="GsfInput*"/>
        </return-value>
      </method>
      <method name="check_ns" c:identifier="gsf_xml_in_check_ns">
        <return-value transfer-ownership="full">
          <type name="char any" c:type="char any*"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="ns_id" transfer-ownership="none">
            <type name="uint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="namecmp" c:identifier="gsf_xml_in_namecmp">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="ns_id" transfer-ownership="none">
            <type name="uint" c:type="unsigned int"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="XMLInDoc" c:type="GsfXMLInDoc">
      <constructor name="new" c:identifier="gsf_xml_in_doc_new">
        <return-value transfer-ownership="full">
          <type name="XMLInDoc" c:type="GsfXMLInDoc*"/>
        </return-value>
        <parameters>
          <parameter name="nodes" transfer-ownership="none">
            <type name="XMLInNode" c:type="GsfXMLInNode*"/>
          </parameter>
          <parameter name="ns" transfer-ownership="none">
            <type name="XMLInNS" c:type="GsfXMLInNS*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="gsf_xml_in_doc_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="parse" c:identifier="gsf_xml_in_doc_parse">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="input" transfer-ownership="none">
            <type name="Input" c:type="GsfInput*"/>
          </parameter>
          <parameter name="user_state" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_nodes" c:identifier="gsf_xml_in_doc_add_nodes">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="nodes" transfer-ownership="none">
            <type name="XMLInNode" c:type="GsfXMLInNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_unknown_handler"
              c:identifier="gsf_xml_in_doc_set_unknown_handler"
              doc="Call the function @handler when an unexpected child node is found">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="handler" transfer-ownership="none" scope="call">
            <type name="XMLInUnknownFunc" c:type="GsfXMLInUnknownFunc"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <callback name="XMLInExtDtor" c:type="GsfXMLInExtDtor">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="xin" transfer-ownership="none">
          <type name="XMLIn" c:type="GsfXMLIn*"/>
        </parameter>
        <parameter name="old_state" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="XMLInNS" c:type="GsfXMLInNS">
      <field name="uri" writable="1">
        <type name="char any" c:type="char any*"/>
      </field>
      <field name="ns_id" writable="1">
        <type name="uint" c:type="unsigned"/>
      </field>
    </record>
    <record name="XMLInNode" c:type="GsfXMLInNode">
      <field name="id" writable="1">
        <type name="char any" c:type="char any*"/>
      </field>
      <field name="ns_id" writable="1">
        <type name="int" c:type="int"/>
      </field>
      <field name="name" writable="1">
        <type name="char any" c:type="char any*"/>
      </field>
      <field name="parent_id" writable="1">
        <type name="char any" c:type="char any*"/>
      </field>
      <field name="start">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="end">
        <type name="any" c:type="pointer"/>
      </field>
      <union name="user_data" c:type="user_data">
        <field name="v_int" writable="1">
          <type name="int" c:type="int"/>
        </field>
        <field name="v_bool" writable="1">
          <type name="boolean" c:type="gboolean"/>
        </field>
        <field name="v_blob" writable="1">
          <type name="any" c:type="gpointer"/>
        </field>
        <field name="v_str" writable="1">
          <type name="char any" c:type="char any*"/>
        </field>
      </union>
      <field name="has_content" writable="1">
        <type name="XMLContent" c:type="GsfXMLContent"/>
      </field>
      <field name="check_children_for_ns" writable="1" bits="1">
        <type name="uint" c:type="unsigned int"/>
      </field>
      <field name="share_children_with_parent" writable="1" bits="1">
        <type name="uint" c:type="unsigned int"/>
      </field>
    </record>
    <callback name="XMLInUnknownFunc" c:type="GsfXMLInUnknownFunc">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="xin" transfer-ownership="none">
          <type name="XMLIn" c:type="GsfXMLIn*"/>
        </parameter>
        <parameter name="elem" transfer-ownership="none">
          <type name="libxml2.Char" c:type="xmlChar*"/>
        </parameter>
        <parameter name="attrs" transfer-ownership="none">
          <type name="libxml2.Char" c:type="xmlChar**"/>
        </parameter>
      </parameters>
    </callback>
    <class name="XMLOut"
           c:type="GsfXMLOut"
           parent="GObject.Object"
           glib:type-name="GsfXMLOut"
           glib:get-type="gsf_xml_out_get_type">
      <constructor name="new" c:identifier="gsf_xml_out_new">
        <return-value transfer-ownership="full">
          <type name="XMLOut" c:type="GsfXMLOut*"/>
        </return-value>
        <parameters>
          <parameter name="output" transfer-ownership="none">
            <type name="Output" c:type="GsfOutput*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_doc_type" c:identifier="gsf_xml_out_set_doc_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <method name="start_element" c:identifier="gsf_xml_out_start_element">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <method name="end_element" c:identifier="gsf_xml_out_end_element">
        <return-value transfer-ownership="full">
          <type name="char any" c:type="char any*"/>
        </return-value>
      </method>
      <method name="simple_element" c:identifier="gsf_xml_out_simple_element">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="content" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <method name="simple_int_element"
              c:identifier="gsf_xml_out_simple_int_element">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="val" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="simple_float_element"
              c:identifier="gsf_xml_out_simple_float_element">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="val" transfer-ownership="none">
            <type name="double" c:type="double"/>
          </parameter>
          <parameter name="precision" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_cstr_unchecked"
              c:identifier="gsf_xml_out_add_cstr_unchecked">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="val_utf8" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_cstr" c:identifier="gsf_xml_out_add_cstr">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="val_utf8" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_bool" c:identifier="gsf_xml_out_add_bool">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="val" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_int" c:identifier="gsf_xml_out_add_int">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="val" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_uint" c:identifier="gsf_xml_out_add_uint">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="val" transfer-ownership="none">
            <type name="uint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_float" c:identifier="gsf_xml_out_add_float">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="val" transfer-ownership="none">
            <type name="double" c:type="double"/>
          </parameter>
          <parameter name="precision" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_color" c:identifier="gsf_xml_out_add_color">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="r" transfer-ownership="none">
            <type name="uint" c:type="unsigned int"/>
          </parameter>
          <parameter name="g" transfer-ownership="none">
            <type name="uint" c:type="unsigned int"/>
          </parameter>
          <parameter name="b" transfer-ownership="none">
            <type name="uint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_base64" c:identifier="gsf_xml_out_add_base64">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <type name="uint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_enum" c:identifier="gsf_xml_out_add_enum">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="etype" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="val" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_gvalue" c:identifier="gsf_xml_out_add_gvalue">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="char any" c:type="char any*"/>
          </parameter>
          <parameter name="val" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_output" c:identifier="gsf_xml_out_get_output">
        <return-value transfer-ownership="full">
          <type name="Output" c:type="GsfOutput*"/>
        </return-value>
      </method>
      <property name="pretty-print" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </property>
    </class>
    <callback name="XMLProbeFunc" c:type="GsfXMLProbeFunc">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="libxml2.Char" c:type="xmlChar*"/>
        </parameter>
        <parameter name="prefix" transfer-ownership="none">
          <type name="libxml2.Char" c:type="xmlChar*"/>
        </parameter>
        <parameter name="URI" transfer-ownership="none">
          <type name="libxml2.Char" c:type="xmlChar*"/>
        </parameter>
        <parameter name="nb_namespaces" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="namespaces" transfer-ownership="none">
          <type name="libxml2.Char" c:type="xmlChar**"/>
        </parameter>
        <parameter name="nb_attributes" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="nb_defaulted" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="attributes" transfer-ownership="none">
          <type name="libxml2.Char" c:type="xmlChar**"/>
        </parameter>
      </parameters>
    </callback>
    <constant name="ZIP_BLOCK_SIZE" value="32768">
      <type name="int"/>
    </constant>
    <constant name="ZIP_BUF_SIZE" value="512">
      <type name="int"/>
    </constant>
    <constant name="ZIP_DIRENT_COMMENT_SIZE" value="32">
      <type name="int"/>
    </constant>
    <constant name="ZIP_DIRENT_COMPR_METHOD" value="10">
      <type name="int"/>
    </constant>
    <constant name="ZIP_DIRENT_CRC32" value="16">
      <type name="int"/>
    </constant>
    <constant name="ZIP_DIRENT_CSIZE" value="20">
      <type name="int"/>
    </constant>
    <constant name="ZIP_DIRENT_DISKSTART" value="34">
      <type name="int"/>
    </constant>
    <constant name="ZIP_DIRENT_DOSTIME" value="12">
      <type name="int"/>
    </constant>
    <constant name="ZIP_DIRENT_ENCODER" value="4">
      <type name="int"/>
    </constant>
    <constant name="ZIP_DIRENT_EXTRACT" value="6">
      <type name="int"/>
    </constant>
    <constant name="ZIP_DIRENT_EXTRAS_SIZE" value="30">
      <type name="int"/>
    </constant>
    <constant name="ZIP_DIRENT_FILE_MODE" value="38">
      <type name="int"/>
    </constant>
    <constant name="ZIP_DIRENT_FILE_TYPE" value="36">
      <type name="int"/>
    </constant>
    <constant name="ZIP_DIRENT_FLAGS" value="8">
      <type name="int"/>
    </constant>
    <constant name="ZIP_DIRENT_NAME_SIZE" value="28">
      <type name="int"/>
    </constant>
    <constant name="ZIP_DIRENT_OFFSET" value="42">
      <type name="int"/>
    </constant>
    <constant name="ZIP_DIRENT_SIZE" value="46">
      <type name="int"/>
    </constant>
    <constant name="ZIP_DIRENT_USIZE" value="24">
      <type name="int"/>
    </constant>
    <constant name="ZIP_FILE_HEADER_COMPR_METHOD" value="8">
      <type name="int"/>
    </constant>
    <constant name="ZIP_FILE_HEADER_CRC32" value="14">
      <type name="int"/>
    </constant>
    <constant name="ZIP_FILE_HEADER_CSIZE" value="18">
      <type name="int"/>
    </constant>
    <constant name="ZIP_FILE_HEADER_DOSTIME" value="10">
      <type name="int"/>
    </constant>
    <constant name="ZIP_FILE_HEADER_EXTRACT" value="4">
      <type name="int"/>
    </constant>
    <constant name="ZIP_FILE_HEADER_EXTRAS_SIZE" value="28">
      <type name="int"/>
    </constant>
    <constant name="ZIP_FILE_HEADER_FLAGS" value="6">
      <type name="int"/>
    </constant>
    <constant name="ZIP_FILE_HEADER_NAME_SIZE" value="26">
      <type name="int"/>
    </constant>
    <constant name="ZIP_FILE_HEADER_SIZE" value="30">
      <type name="int"/>
    </constant>
    <constant name="ZIP_FILE_HEADER_USIZE" value="22">
      <type name="int"/>
    </constant>
    <constant name="ZIP_HEADER_COMP_METHOD" value="8">
      <type name="int"/>
    </constant>
    <constant name="ZIP_HEADER_COMP_SIZE" value="18">
      <type name="int"/>
    </constant>
    <constant name="ZIP_HEADER_CRC" value="14">
      <type name="int"/>
    </constant>
    <constant name="ZIP_HEADER_EXTRA_LEN" value="28">
      <type name="int"/>
    </constant>
    <constant name="ZIP_HEADER_FLAGS" value="6">
      <type name="int"/>
    </constant>
    <constant name="ZIP_HEADER_NAME_LEN" value="26">
      <type name="int"/>
    </constant>
    <constant name="ZIP_HEADER_OS" value="5">
      <type name="int"/>
    </constant>
    <constant name="ZIP_HEADER_SIZE" value="30">
      <type name="int"/>
    </constant>
    <constant name="ZIP_HEADER_TIME" value="10">
      <type name="int"/>
    </constant>
    <constant name="ZIP_HEADER_UNCOMP_SIZE" value="22">
      <type name="int"/>
    </constant>
    <constant name="ZIP_HEADER_VERSION" value="4">
      <type name="int"/>
    </constant>
    <constant name="ZIP_TRAILER_COMMENT_SIZE" value="20">
      <type name="int"/>
    </constant>
    <constant name="ZIP_TRAILER_DIR_DISK" value="6">
      <type name="int"/>
    </constant>
    <constant name="ZIP_TRAILER_DIR_POS" value="16">
      <type name="int"/>
    </constant>
    <constant name="ZIP_TRAILER_DIR_SIZE" value="12">
      <type name="int"/>
    </constant>
    <constant name="ZIP_TRAILER_DISK" value="4">
      <type name="int"/>
    </constant>
    <constant name="ZIP_TRAILER_ENTRIES" value="8">
      <type name="int"/>
    </constant>
    <constant name="ZIP_TRAILER_SIZE" value="22">
      <type name="int"/>
    </constant>
    <constant name="ZIP_TRAILER_TOTAL_ENTRIES" value="10">
      <type name="int"/>
    </constant>
    <enumeration name="ZipCompressionMethod" c:type="GsfZipCompressionMethod">
      <member name="stored" value="0" c:identifier="GSF_ZIP_STORED"/>
      <member name="shrunk" value="1" c:identifier="GSF_ZIP_SHRUNK"/>
      <member name="reducedx1" value="2" c:identifier="GSF_ZIP_REDUCEDx1"/>
      <member name="reducedx2" value="3" c:identifier="GSF_ZIP_REDUCEDx2"/>
      <member name="reducedx3" value="4" c:identifier="GSF_ZIP_REDUCEDx3"/>
      <member name="reducedx4" value="5" c:identifier="GSF_ZIP_REDUCEDx4"/>
      <member name="imploded" value="6" c:identifier="GSF_ZIP_IMPLODED"/>
      <member name="tokenized" value="7" c:identifier="GSF_ZIP_TOKENIZED"/>
      <member name="deflated" value="8" c:identifier="GSF_ZIP_DEFLATED"/>
      <member name="deflated_better"
              value="9"
              c:identifier="GSF_ZIP_DEFLATED_BETTER"/>
      <member name="imploded_better"
              value="10"
              c:identifier="GSF_ZIP_IMPLODED_BETTER"/>
    </enumeration>
    <record name="ZipDirent" c:type="GsfZipDirent">
      <field name="name" writable="1">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="flags" writable="1">
        <type name="uint16" c:type="guint16"/>
      </field>
      <field name="compr_method" writable="1">
        <type name="ZipCompressionMethod" c:type="GsfZipCompressionMethod"/>
      </field>
      <field name="crc32" writable="1">
        <type name="uint32" c:type="guint32"/>
      </field>
      <field name="csize" writable="1">
        <type name="size_t" c:type="size_t"/>
      </field>
      <field name="usize" writable="1">
        <type name="size_t" c:type="size_t"/>
      </field>
      <field name="offset" writable="1">
        <type name="size_t" c:type="gsf_off_t"/>
      </field>
      <field name="data_offset" writable="1">
        <type name="size_t" c:type="gsf_off_t"/>
      </field>
      <field name="dostime" writable="1">
        <type name="uint32" c:type="guint32"/>
      </field>
      <constructor name="new" c:identifier="gsf_zip_dirent_new">
        <return-value transfer-ownership="full">
          <type name="ZipDirent" c:type="GsfZipDirent*"/>
        </return-value>
      </constructor>
      <method name="free" c:identifier="gsf_zip_dirent_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </record>
    <record name="ZipVDir" c:type="GsfZipVDir">
      <field name="name" writable="1">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="is_directory" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="dirent" writable="1">
        <type name="ZipDirent" c:type="GsfZipDirent*"/>
      </field>
      <field name="children" writable="1">
        <type name="GLib.SList" c:type="GSList*"/>
      </field>
      <field name="last_child" writable="1">
        <type name="GLib.SList" c:type="GSList*"/>
      </field>
    </record>
    <function name="base64_decode_simple"
              c:identifier="gsf_base64_decode_simple">
      <return-value transfer-ownership="none">
        <type name="size_t" c:type="size_t"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </parameter>
        <parameter name="len" transfer-ownership="none">
          <type name="size_t" c:type="size_t"/>
        </parameter>
      </parameters>
    </function>
    <function name="base64_decode_step"
              c:identifier="gsf_base64_decode_step"
              doc="Decodes a chunk of base64 encoded data">
      <return-value transfer-ownership="none">
        <type name="size_t" c:type="size_t"/>
      </return-value>
      <parameters>
        <parameter name="in" transfer-ownership="none">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </parameter>
        <parameter name="len" transfer-ownership="none">
          <type name="size_t" c:type="size_t"/>
        </parameter>
        <parameter name="out" transfer-ownership="none">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </parameter>
        <parameter name="state" direction="out" transfer-ownership="full">
          <type name="int" c:type="int*"/>
        </parameter>
        <parameter name="save" direction="out" transfer-ownership="full">
          <type name="uint" c:type="guint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="base64_encode_close"
              c:identifier="gsf_base64_encode_close">
      <return-value transfer-ownership="none">
        <type name="size_t" c:type="size_t"/>
      </return-value>
      <parameters>
        <parameter name="in" transfer-ownership="none">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </parameter>
        <parameter name="inlen" transfer-ownership="none">
          <type name="size_t" c:type="size_t"/>
        </parameter>
        <parameter name="break_lines" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="out" transfer-ownership="none">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </parameter>
        <parameter name="state" direction="out" transfer-ownership="full">
          <type name="int" c:type="int*"/>
        </parameter>
        <parameter name="save" direction="out" transfer-ownership="full">
          <type name="uint" c:type="guint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="base64_encode_simple"
              c:identifier="gsf_base64_encode_simple">
      <return-value transfer-ownership="full">
        <array c:type="guint8*">
          <type name="uint8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </parameter>
        <parameter name="len" transfer-ownership="none">
          <type name="size_t" c:type="size_t"/>
        </parameter>
      </parameters>
    </function>
    <function name="base64_encode_step" c:identifier="gsf_base64_encode_step">
      <return-value transfer-ownership="none">
        <type name="size_t" c:type="size_t"/>
      </return-value>
      <parameters>
        <parameter name="in" transfer-ownership="none">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </parameter>
        <parameter name="len" transfer-ownership="none">
          <type name="size_t" c:type="size_t"/>
        </parameter>
        <parameter name="break_lines" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="out" transfer-ownership="none">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </parameter>
        <parameter name="state" direction="out" transfer-ownership="full">
          <type name="int" c:type="int*"/>
        </parameter>
        <parameter name="save" direction="out" transfer-ownership="full">
          <type name="uint" c:type="guint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="doc_meta_dump" c:identifier="gsf_doc_meta_dump">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="meta" transfer-ownership="none">
          <type name="DocMetaData" c:type="GsfDocMetaData*"/>
        </parameter>
      </parameters>
    </function>
    <function name="extension_pointer"
              c:identifier="gsf_extension_pointer"
              doc="Extracts the extension from the end of a filename (the part after the final
&apos;.&apos; in the filename).
pointer to the end of the string if the filename does not
have an extension.">
      <return-value transfer-ownership="full">
        <type name="char any" c:type="char any*"/>
      </return-value>
      <parameters>
        <parameter name="path" transfer-ownership="none">
          <type name="char any" c:type="char any*"/>
        </parameter>
      </parameters>
    </function>
    <function name="filename_to_utf8"
              c:identifier="gsf_filename_to_utf8"
              doc="A utility wrapper to make sure filenames are valid utf8.
Caller must g_free the result.">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="filename" transfer-ownership="none">
          <type name="char any" c:type="char any*"/>
        </parameter>
        <parameter name="quoted"
                   transfer-ownership="none"
                   doc=" (unless it is invalid).">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_gsf_odf_version" c:identifier="get_gsf_odf_version">
      <return-value transfer-ownership="none">
        <type name="short" c:type="short"/>
      </return-value>
    </function>
    <function name="get_gsf_odf_version_string"
              c:identifier="get_gsf_odf_version_string">
      <return-value transfer-ownership="full">
        <type name="char any" c:type="char any*"/>
      </return-value>
    </function>
    <function name="get_gsf_ooo_ns" c:identifier="get_gsf_ooo_ns">
      <return-value transfer-ownership="full">
        <type name="XMLInNS" c:type="GsfXMLInNS*"/>
      </return-value>
    </function>
    <function name="iconv_close" c:identifier="gsf_iconv_close">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="handle" transfer-ownership="none">
          <type name="GLib.IConv" c:type="GIConv"/>
        </parameter>
      </parameters>
    </function>
    <function name="init" c:identifier="gsf_init">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="init_dynamic" c:identifier="gsf_init_dynamic">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="module" transfer-ownership="none">
          <type name="GObject.TypeModule" c:type="GTypeModule*"/>
        </parameter>
      </parameters>
    </function>
    <function name="le_get_double" c:identifier="gsf_le_get_double">
      <return-value transfer-ownership="none">
        <type name="double" c:type="double"/>
      </return-value>
      <parameters>
        <parameter name="p" transfer-ownership="none">
          <type name="any" c:type="void*"/>
        </parameter>
      </parameters>
    </function>
    <function name="le_get_float" c:identifier="gsf_le_get_float">
      <return-value transfer-ownership="none">
        <type name="float" c:type="float"/>
      </return-value>
      <parameters>
        <parameter name="p" transfer-ownership="none">
          <type name="any" c:type="void*"/>
        </parameter>
      </parameters>
    </function>
    <function name="le_get_guint64" c:identifier="gsf_le_get_guint64">
      <return-value transfer-ownership="none">
        <type name="uint64" c:type="guint64"/>
      </return-value>
      <parameters>
        <parameter name="p" transfer-ownership="none">
          <type name="any" c:type="void*"/>
        </parameter>
      </parameters>
    </function>
    <function name="le_set_double" c:identifier="gsf_le_set_double">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="p" transfer-ownership="none">
          <type name="any" c:type="void*"/>
        </parameter>
        <parameter name="d" transfer-ownership="none">
          <type name="double" c:type="double"/>
        </parameter>
      </parameters>
    </function>
    <function name="le_set_float" c:identifier="gsf_le_set_float">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="p" transfer-ownership="none">
          <type name="any" c:type="void*"/>
        </parameter>
        <parameter name="f" transfer-ownership="none">
          <type name="float" c:type="float"/>
        </parameter>
      </parameters>
    </function>
    <function name="mem_dump" c:identifier="gsf_mem_dump">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="ptr" transfer-ownership="none">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </parameter>
        <parameter name="len" transfer-ownership="none">
          <type name="size_t" c:type="size_t"/>
        </parameter>
      </parameters>
    </function>
    <function name="msole_codepage_to_lid"
              c:identifier="gsf_msole_codepage_to_lid">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="codepage" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="msole_iconv_open_codepage_for_export"
              c:identifier="gsf_msole_iconv_open_codepage_for_export">
      <return-value transfer-ownership="full">
        <type name="GLib.IConv" c:type="GIConv"/>
      </return-value>
      <parameters>
        <parameter name="codepage_to" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="msole_iconv_open_codepage_for_import"
              c:identifier="gsf_msole_iconv_open_codepage_for_import">
      <return-value transfer-ownership="full">
        <type name="GLib.IConv" c:type="GIConv"/>
      </return-value>
      <parameters>
        <parameter name="to" transfer-ownership="none">
          <type name="char any" c:type="char any*"/>
        </parameter>
        <parameter name="codepage" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="msole_iconv_open_codepages_for_export"
              c:identifier="gsf_msole_iconv_open_codepages_for_export">
      <return-value transfer-ownership="full">
        <type name="GLib.IConv" c:type="GIConv"/>
      </return-value>
      <parameters>
        <parameter name="codepage_to" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="from" transfer-ownership="none">
          <type name="char any" c:type="char any*"/>
        </parameter>
      </parameters>
    </function>
    <function name="msole_iconv_open_for_export"
              c:identifier="gsf_msole_iconv_open_for_export">
      <return-value transfer-ownership="full">
        <type name="GLib.IConv" c:type="GIConv"/>
      </return-value>
    </function>
    <function name="msole_iconv_open_for_import"
              c:identifier="gsf_msole_iconv_open_for_import">
      <return-value transfer-ownership="full">
        <type name="GLib.IConv" c:type="GIConv"/>
      </return-value>
      <parameters>
        <parameter name="codepage" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="msole_iconv_win_codepage"
              c:identifier="gsf_msole_iconv_win_codepage">
      <return-value transfer-ownership="none">
        <type name="int" c:type="int"/>
      </return-value>
    </function>
    <function name="msole_inflate"
              c:identifier="gsf_msole_inflate"
              doc="Decompresses an LZ compressed stream.">
      <return-value transfer-ownership="full">
        <type name="GLib.ByteArray" c:type="GByteArray*"/>
      </return-value>
      <parameters>
        <parameter name="input" transfer-ownership="none">
          <type name="Input" c:type="GsfInput*"/>
        </parameter>
        <parameter name="offset" transfer-ownership="none">
          <type name="size_t" c:type="gsf_off_t"/>
        </parameter>
      </parameters>
    </function>
    <function name="msole_language_for_lid"
              c:identifier="gsf_msole_language_for_lid">
      <return-value transfer-ownership="full">
        <type name="char any" c:type="char any*"/>
      </return-value>
      <parameters>
        <parameter name="lid" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="msole_lid_for_language"
              c:identifier="gsf_msole_lid_for_language">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="lang" transfer-ownership="none">
          <type name="char any" c:type="char any*"/>
        </parameter>
      </parameters>
    </function>
    <function name="msole_lid_to_codepage"
              c:identifier="gsf_msole_lid_to_codepage">
      <return-value transfer-ownership="none">
        <type name="int" c:type="int"/>
      </return-value>
      <parameters>
        <parameter name="lid" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="msole_lid_to_codepage_str"
              c:identifier="gsf_msole_lid_to_codepage_str">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="lid" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="msole_metadata_read"
              c:identifier="gsf_msole_metadata_read">
      <return-value transfer-ownership="full">
        <type name="GLib.Error" c:type="GError*"/>
      </return-value>
      <parameters>
        <parameter name="in" transfer-ownership="none">
          <type name="Input" c:type="GsfInput*"/>
        </parameter>
        <parameter name="accum" transfer-ownership="none">
          <type name="DocMetaData" c:type="GsfDocMetaData*"/>
        </parameter>
      </parameters>
    </function>
    <function name="msole_metadata_write"
              c:identifier="gsf_msole_metadata_write">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="out" transfer-ownership="none">
          <type name="Output" c:type="GsfOutput*"/>
        </parameter>
        <parameter name="meta_data" transfer-ownership="none">
          <type name="DocMetaData" c:type="GsfDocMetaData*"/>
        </parameter>
        <parameter name="doc_not_component" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="open_pkg_error_id" c:identifier="gsf_open_pkg_error_id">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
    </function>
    <function name="open_pkg_foreach_rel"
              c:identifier="gsf_open_pkg_foreach_rel"
              doc="New in 1.14.9
Walks each relationship associated with @opkg and calls @func with @user_data.">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="opkg" transfer-ownership="none">
          <type name="Input" c:type="GsfInput*"/>
        </parameter>
        <parameter name="func"
                   transfer-ownership="none"
                   scope="call"
                   closure="2">
          <type name="OpenPkgIter" c:type="GsfOpenPkgIter"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="open_pkg_get_rel_by_id"
              c:identifier="gsf_open_pkg_get_rel_by_id">
      <return-value transfer-ownership="full">
        <type name="Input" c:type="GsfInput*"/>
      </return-value>
      <parameters>
        <parameter name="opkg" transfer-ownership="none">
          <type name="Input" c:type="GsfInput*"/>
        </parameter>
        <parameter name="id" transfer-ownership="none">
          <type name="char any" c:type="char any*"/>
        </parameter>
      </parameters>
    </function>
    <function name="open_pkg_get_rel_by_type"
              c:identifier="gsf_open_pkg_get_rel_by_type">
      <return-value transfer-ownership="full">
        <type name="Input" c:type="GsfInput*"/>
      </return-value>
      <parameters>
        <parameter name="opkg" transfer-ownership="none">
          <type name="Input" c:type="GsfInput*"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="char any" c:type="char any*"/>
        </parameter>
      </parameters>
    </function>
    <function name="open_pkg_lookup_rel_by_id"
              c:identifier="gsf_open_pkg_lookup_rel_by_id">
      <return-value transfer-ownership="full">
        <type name="OpenPkgRel" c:type="GsfOpenPkgRel*"/>
      </return-value>
      <parameters>
        <parameter name="opkg" transfer-ownership="none">
          <type name="Input" c:type="GsfInput*"/>
        </parameter>
        <parameter name="id" transfer-ownership="none">
          <type name="char any" c:type="char any*"/>
        </parameter>
      </parameters>
    </function>
    <function name="open_pkg_lookup_rel_by_type"
              c:identifier="gsf_open_pkg_lookup_rel_by_type">
      <return-value transfer-ownership="full">
        <type name="OpenPkgRel" c:type="GsfOpenPkgRel*"/>
      </return-value>
      <parameters>
        <parameter name="opkg" transfer-ownership="none">
          <type name="Input" c:type="GsfInput*"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="char any" c:type="char any*"/>
        </parameter>
      </parameters>
    </function>
    <function name="open_pkg_open_rel"
              c:identifier="gsf_open_pkg_open_rel"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="Input" c:type="GsfInput*"/>
      </return-value>
      <parameters>
        <parameter name="opkg" transfer-ownership="none">
          <type name="Input" c:type="GsfInput*"/>
        </parameter>
        <parameter name="rel" transfer-ownership="none">
          <type name="OpenPkgRel" c:type="GsfOpenPkgRel*"/>
        </parameter>
      </parameters>
    </function>
    <function name="open_pkg_open_rel_by_id"
              c:identifier="gsf_open_pkg_open_rel_by_id"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="Input" c:type="GsfInput*"/>
      </return-value>
      <parameters>
        <parameter name="opkg" transfer-ownership="none">
          <type name="Input" c:type="GsfInput*"/>
        </parameter>
        <parameter name="id" transfer-ownership="none">
          <type name="char any" c:type="char any*"/>
        </parameter>
      </parameters>
    </function>
    <function name="open_pkg_open_rel_by_type"
              c:identifier="gsf_open_pkg_open_rel_by_type"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="Input" c:type="GsfInput*"/>
      </return-value>
      <parameters>
        <parameter name="opkg" transfer-ownership="none">
          <type name="Input" c:type="GsfInput*"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="char any" c:type="char any*"/>
        </parameter>
      </parameters>
    </function>
    <function name="open_pkg_parse_rel_by_id"
              c:identifier="gsf_open_pkg_parse_rel_by_id">
      <return-value transfer-ownership="full">
        <type name="GLib.Error" c:type="GError*"/>
      </return-value>
      <parameters>
        <parameter name="xin" transfer-ownership="none">
          <type name="XMLIn" c:type="GsfXMLIn*"/>
        </parameter>
        <parameter name="id" transfer-ownership="none">
          <type name="char any" c:type="char any*"/>
        </parameter>
        <parameter name="dtd" transfer-ownership="none">
          <type name="XMLInNode" c:type="GsfXMLInNode*"/>
        </parameter>
        <parameter name="ns" transfer-ownership="none">
          <type name="XMLInNS" c:type="GsfXMLInNS*"/>
        </parameter>
      </parameters>
    </function>
    <function name="open_pkg_rel_get_type"
              c:identifier="gsf_open_pkg_rel_get_type">
      <return-value transfer-ownership="full">
        <type name="char any" c:type="char any*"/>
      </return-value>
      <parameters>
        <parameter name="rel" transfer-ownership="none">
          <type name="OpenPkgRel" c:type="GsfOpenPkgRel*"/>
        </parameter>
      </parameters>
    </function>
    <function name="opendoc_metadata_read"
              c:identifier="gsf_opendoc_metadata_read">
      <return-value transfer-ownership="full">
        <type name="GLib.Error" c:type="GError*"/>
      </return-value>
      <parameters>
        <parameter name="input" transfer-ownership="none">
          <type name="Input" c:type="GsfInput*"/>
        </parameter>
        <parameter name="md" transfer-ownership="none">
          <type name="DocMetaData" c:type="GsfDocMetaData*"/>
        </parameter>
      </parameters>
    </function>
    <function name="opendoc_metadata_subtree"
              c:identifier="gsf_opendoc_metadata_subtree">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="doc" transfer-ownership="none">
          <type name="XMLIn" c:type="GsfXMLIn*"/>
        </parameter>
        <parameter name="md" transfer-ownership="none">
          <type name="DocMetaData" c:type="GsfDocMetaData*"/>
        </parameter>
      </parameters>
    </function>
    <function name="opendoc_metadata_write"
              c:identifier="gsf_opendoc_metadata_write">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="output" transfer-ownership="none">
          <type name="XMLOut" c:type="GsfXMLOut*"/>
        </parameter>
        <parameter name="md" transfer-ownership="none">
          <type name="DocMetaData" c:type="GsfDocMetaData*"/>
        </parameter>
      </parameters>
    </function>
    <function name="property_settings_collect"
              c:identifier="gsf_property_settings_collect">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="p_params" transfer-ownership="none">
          <type name="GObject.Parameter" c:type="GParameter**"/>
        </parameter>
        <parameter name="p_n_params" direction="out" transfer-ownership="full">
          <type name="size_t" c:type="size_t*"/>
        </parameter>
        <parameter name="first_property_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="property_settings_free"
              c:identifier="gsf_property_settings_free">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="params" transfer-ownership="none">
          <type name="GObject.Parameter" c:type="GParameter*"/>
        </parameter>
        <parameter name="n_params" transfer-ownership="none">
          <type name="size_t" c:type="size_t"/>
        </parameter>
      </parameters>
    </function>
    <function name="shutdown"
              c:identifier="gsf_shutdown"
              doc="De-intializes the GSF library from a type module.
Currently does nothing.">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="shutdown_dynamic" c:identifier="gsf_shutdown_dynamic">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="module" transfer-ownership="none">
          <type name="GObject.TypeModule" c:type="GTypeModule*"/>
        </parameter>
      </parameters>
    </function>
    <function name="timestamp_from_string"
              c:identifier="gsf_timestamp_from_string">
      <return-value transfer-ownership="none">
        <type name="int" c:type="int"/>
      </return-value>
      <parameters>
        <parameter name="spec" transfer-ownership="none">
          <type name="char any" c:type="char any*"/>
        </parameter>
        <parameter name="stamp" transfer-ownership="none">
          <type name="Timestamp" c:type="GsfTimestamp*"/>
        </parameter>
      </parameters>
    </function>
    <function name="timestamp_parse" c:identifier="gsf_timestamp_parse">
      <return-value transfer-ownership="none">
        <type name="int" c:type="int"/>
      </return-value>
      <parameters>
        <parameter name="spec" transfer-ownership="none">
          <type name="char any" c:type="char any*"/>
        </parameter>
        <parameter name="stamp" transfer-ownership="none">
          <type name="Timestamp" c:type="GsfTimestamp*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_docprop_varray"
              c:identifier="gsf_value_get_docprop_varray">
      <return-value transfer-ownership="full">
        <type name="GObject.ValueArray" c:type="GValueArray*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_docprop_vector"
              c:identifier="gsf_value_get_docprop_vector">
      <return-value transfer-ownership="full">
        <type name="DocPropVector" c:type="GsfDocPropVector*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_timestamp"
              c:identifier="gsf_value_set_timestamp">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="stamp" transfer-ownership="none">
          <type name="Timestamp" c:type="GsfTimestamp*"/>
        </parameter>
      </parameters>
    </function>
    <function name="vdir_add_child" c:identifier="gsf_vdir_add_child">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="vdir" transfer-ownership="none">
          <type name="ZipVDir" c:type="GsfZipVDir*"/>
        </parameter>
        <parameter name="child" transfer-ownership="none">
          <type name="ZipVDir" c:type="GsfZipVDir*"/>
        </parameter>
      </parameters>
    </function>
    <function name="vdir_free" c:identifier="gsf_vdir_free">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="vdir" transfer-ownership="none">
          <type name="ZipVDir" c:type="GsfZipVDir*"/>
        </parameter>
        <parameter name="free_dirent" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="vdir_new" c:identifier="gsf_vdir_new">
      <return-value transfer-ownership="full">
        <type name="ZipVDir" c:type="GsfZipVDir*"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="char any" c:type="char any*"/>
        </parameter>
        <parameter name="is_directory" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="dirent" transfer-ownership="none">
          <type name="ZipDirent" c:type="GsfZipDirent*"/>
        </parameter>
      </parameters>
    </function>
    <function name="xmlDocFormatDump" c:identifier="gsf_xmlDocFormatDump">
      <return-value transfer-ownership="none">
        <type name="int" c:type="int"/>
      </return-value>
      <parameters>
        <parameter name="output" transfer-ownership="none">
          <type name="Output" c:type="GsfOutput*"/>
        </parameter>
        <parameter name="cur" transfer-ownership="none">
          <type name="libxml2.Doc" c:type="xmlDoc*"/>
        </parameter>
        <parameter name="encoding" transfer-ownership="none">
          <type name="char any" c:type="char any*"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_gvalue_from_str"
              c:identifier="gsf_xml_gvalue_from_str">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="t" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="str" transfer-ownership="none">
          <type name="char any" c:type="char any*"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_parser_context" c:identifier="gsf_xml_parser_context">
      <return-value transfer-ownership="full">
        <type name="libxml2.ParserCtxt" c:type="xmlParserCtxt*"/>
      </return-value>
      <parameters>
        <parameter name="input" transfer-ownership="none">
          <type name="Input" c:type="GsfInput*"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_probe" c:identifier="gsf_xml_probe">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="input" transfer-ownership="none">
          <type name="Input" c:type="GsfInput*"/>
        </parameter>
        <parameter name="startElement" transfer-ownership="none" scope="call">
          <type name="XMLProbeFunc" c:type="GsfXMLProbeFunc"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
