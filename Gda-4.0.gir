<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.1"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="libxml2" version="2.0"/>
  <namespace name="Gda"
             version="4.0"
             shared-library="libgda-4.0.so.4"
             c:prefix="Gda">
    <alias name="Error" target="GLib.Error" c:type="GdaError"/>
    <alias name="SList" target="GLib.SList" c:type="GdaSList"/>
    <alias name="SqlErrorType" target="SqlError" c:type="GdaSqlErrorType"/>
    <alias name="ValueList" target="GLib.List" c:type="GdaValueList"/>
    <constant name="ATTRIBUTE_AUTO_INCREMENT" value="__gda_attr_autoinc">
      <type name="utf8"/>
    </constant>
    <constant name="ATTRIBUTE_DESCRIPTION" value="__gda_attr_descr">
      <type name="utf8"/>
    </constant>
    <constant name="ATTRIBUTE_IS_DEFAULT" value="__gda_attr_is_default">
      <type name="utf8"/>
    </constant>
    <constant name="ATTRIBUTE_NAME" value="__gda_attr_name">
      <type name="utf8"/>
    </constant>
    <constant name="ATTRIBUTE_NUMERIC_PRECISION"
              value="__gda_attr_numeric_precision">
      <type name="utf8"/>
    </constant>
    <constant name="ATTRIBUTE_NUMERIC_SCALE" value="__gda_attr_numeric_scale">
      <type name="utf8"/>
    </constant>
    <record name="AttributesManager" c:type="GdaAttributesManager">
      <constructor name="new" c:identifier="gda_attributes_manager_new">
        <return-value transfer-ownership="full">
          <type name="AttributesManager" c:type="GdaAttributesManager*"/>
        </return-value>
        <parameters>
          <parameter name="for_objects" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="signal_func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="AttributesManagerSignal"
                  c:type="GdaAttributesManagerSignal"/>
          </parameter>
          <parameter name="signal_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="gda_attributes_manager_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set" c:identifier="gda_attributes_manager_set">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="ptr" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="att_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_full" c:identifier="gda_attributes_manager_set_full">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="ptr" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="att_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="destroy" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="get" c:identifier="gda_attributes_manager_get">
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="ptr" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="att_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy" c:identifier="gda_attributes_manager_copy">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="from" transfer-ownership="none">
            <type name="any" c:type="gpointer*"/>
          </parameter>
          <parameter name="to_mgr" transfer-ownership="none">
            <type name="AttributesManager" c:type="GdaAttributesManager*"/>
          </parameter>
          <parameter name="to" transfer-ownership="none">
            <type name="any" c:type="gpointer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear" c:identifier="gda_attributes_manager_clear">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="ptr" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="foreach" c:identifier="gda_attributes_manager_foreach">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="ptr" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="3">
            <type name="AttributesManagerFunc"
                  c:type="GdaAttributesManagerFunc"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <callback name="AttributesManagerFunc" c:type="GdaAttributesManagerFunc">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="att_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="AttributesManagerSignal"
              c:type="GdaAttributesManagerSignal">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="obj" transfer-ownership="none">
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="att_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Batch"
           c:type="GdaBatch"
           parent="GObject.Object"
           glib:type-name="GdaBatch"
           glib:get-type="gda_batch_get_type"
           glib:type-struct="BatchClass">
      <constructor name="new" c:identifier="gda_batch_new">
        <doc xml:whitespace="preserve">Creates a new #GdaBatch object</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">the new object</doc>
          <type name="Batch" c:type="GdaBatch*"/>
        </return-value>
      </constructor>
      <method name="copy" c:identifier="gda_batch_copy">
        <doc xml:whitespace="preserve">Copy constructor</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a the new copy of @orig</doc>
          <type name="Batch" c:type="GdaBatch*"/>
        </return-value>
      </method>
      <method name="add_statement" c:identifier="gda_batch_add_statement">
        <doc xml:whitespace="preserve">Add @stmt to the list of statements managed by @batch. A #GdaStatement object can be
added multiple times to a #GdaBatch object.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stmt" transfer-ownership="none">
            <doc xml:whitespace="preserve">a statement to add to @batch's statements list</doc>
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_statement"
              c:identifier="gda_batch_remove_statement">
        <doc xml:whitespace="preserve">Removes @stmt from the list of statements managed by @batch. If @stmt is present several
times in @batch's statements' list, then only the first one is removed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stmt" transfer-ownership="none">
            <doc xml:whitespace="preserve">a statement to remove from @batch's statements list</doc>
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
        </parameters>
      </method>
      <method name="serialize" c:identifier="gda_batch_serialize">
        <doc xml:whitespace="preserve">Creates a string representing the contents of @batch.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a string containing the serialized version of @batch</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_statements" c:identifier="gda_batch_get_statements">
        <doc xml:whitespace="preserve">Get a list of the #GdaStatement objects contained in @batch</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a list of #GdaStatement which should not be modified.</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="Statement"/>
          </type>
        </return-value>
      </method>
      <method name="get_parameters"
              c:identifier="gda_batch_get_parameters"
              throws="1">
        <doc xml:whitespace="preserve">Get a new #GdaSet object which groups all the execution parameters
which @batch needs for all the statements it includes.
This new object is returned though @out_params.
Note that if @batch does not need any parameter, then @out_params is set to %NULL.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if no error occurred.</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="out_params"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <doc xml:whitespace="preserve">a place to store a new #GdaSet object, or %NULL</doc>
            <type name="Set" c:type="GdaSet**"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="BatchPrivate" c:type="GdaBatchPrivate*"/>
      </field>
      <glib:signal name="changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="BatchClass"
            c:type="GdaBatchClass"
            glib:is-gtype-struct-for="Batch">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="changed">
        <callback name="changed" c:type="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="batch" transfer-ownership="none">
              <type name="Batch" c:type="GdaBatch*"/>
            </parameter>
            <parameter name="changed_stmt" transfer-ownership="none">
              <type name="Statement" c:type="GdaStatement*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="BatchError"
                 c:type="GdaBatchError"
                 glib:error-quark="gda_batch_error_quark">
      <member name="batch_conflicting_parameter_error"
              value="0"
              c:identifier="GDA_BATCH_CONFLICTING_PARAMETER_ERROR"/>
    </enumeration>
    <record name="BatchPrivate" c:type="GdaBatchPrivate">
    </record>
    <record name="Binary"
            c:type="GdaBinary"
            glib:type-name="GdaBinary"
            glib:get-type="gda_binary_get_type">
      <field name="data" writable="1">
        <type name="any" c:type="guchar*"/>
      </field>
      <field name="binary_length" writable="1">
        <type name="long" c:type="glong"/>
      </field>
      <method name="to_string" c:identifier="gda_binary_to_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="maxlen" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="Blob"
            c:type="GdaBlob"
            glib:type-name="GdaBlob"
            glib:get-type="gda_blob_get_type">
      <field name="data" writable="1">
        <type name="Binary" c:type="GdaBinary"/>
      </field>
      <field name="op" writable="1">
        <type name="BlobOp" c:type="GdaBlobOp*"/>
      </field>
      <method name="to_string" c:identifier="gda_blob_to_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="maxlen" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_op" c:identifier="gda_blob_set_op">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op" transfer-ownership="none">
            <type name="BlobOp" c:type="GdaBlobOp*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <class name="BlobOp"
           c:type="GdaBlobOp"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GdaBlobOp"
           glib:get-type="gda_blob_op_get_type"
           glib:type-struct="BlobOpClass">
      <virtual-method name="get_length" invoker="get_length">
        <doc xml:whitespace="preserve">provider should have added an error (a #GdaConnectionEvent) to the connection.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the length of the blob in bytes. In case of error, -1 is returned and the</doc>
          <type name="long" c:type="glong"/>
        </return-value>
      </virtual-method>
      <virtual-method name="read" invoker="read">
        <doc xml:whitespace="preserve">Reads a chunk of bytes from the BLOB accessible through @op into @blob.
provider should have added an error to the connection.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the number of bytes actually read. In case of error, -1 is returned and the</doc>
          <type name="long" c:type="glong"/>
        </return-value>
        <parameters>
          <parameter name="blob" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaBlob to read data to</doc>
            <type name="Blob" c:type="GdaBlob*"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:whitespace="preserve">offset to read from the start of the blob (starts at 0)</doc>
            <type name="long" c:type="glong"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:whitespace="preserve">maximum number of bytes to read.</doc>
            <type name="long" c:type="glong"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="write" invoker="write">
        <doc xml:whitespace="preserve">Writes a chunk of bytes from a @blob to the BLOB accessible through @op, @blob is unchanged after
this call.
If @blob has an associated #GdaBlobOp (ie. if @blob-&gt;op is not %NULL) then the data to be written
using @op is the data fetched using @blob-&gt;op.
provider should have added an error to the connection.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the number of bytes written. In case of error, -1 is returned and the</doc>
          <type name="long" c:type="glong"/>
        </return-value>
        <parameters>
          <parameter name="blob" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaBlob which contains the data to write</doc>
            <type name="Blob" c:type="GdaBlob*"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:whitespace="preserve">offset to write from the start of the blob (starts at 0)</doc>
            <type name="long" c:type="glong"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="write_all" invoker="write_all">
        <doc xml:whitespace="preserve">Writes the whole contents of @blob into the blob manipulated by @op. If necessary the resulting
blob is truncated from its previous length.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE on success</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="blob" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaBlob which contains the data to write</doc>
            <type name="Blob" c:type="GdaBlob*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_length" c:identifier="gda_blob_op_get_length">
        <doc xml:whitespace="preserve">provider should have added an error (a #GdaConnectionEvent) to the connection.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the length of the blob in bytes. In case of error, -1 is returned and the</doc>
          <type name="long" c:type="glong"/>
        </return-value>
      </method>
      <method name="read" c:identifier="gda_blob_op_read">
        <doc xml:whitespace="preserve">Reads a chunk of bytes from the BLOB accessible through @op into @blob.
provider should have added an error to the connection.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the number of bytes actually read. In case of error, -1 is returned and the</doc>
          <type name="long" c:type="glong"/>
        </return-value>
        <parameters>
          <parameter name="blob" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaBlob to read data to</doc>
            <type name="Blob" c:type="GdaBlob*"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:whitespace="preserve">offset to read from the start of the blob (starts at 0)</doc>
            <type name="long" c:type="glong"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:whitespace="preserve">maximum number of bytes to read.</doc>
            <type name="long" c:type="glong"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_all" c:identifier="gda_blob_op_read_all">
        <doc xml:whitespace="preserve">Reads the whole contents of the blob manipulated by @op into @blob</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if @blob-&gt;data contains the whole BLOB manipulated by @op</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="blob" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaBlob to read data to</doc>
            <type name="Blob" c:type="GdaBlob*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write" c:identifier="gda_blob_op_write">
        <doc xml:whitespace="preserve">Writes a chunk of bytes from a @blob to the BLOB accessible through @op, @blob is unchanged after
this call.
If @blob has an associated #GdaBlobOp (ie. if @blob-&gt;op is not %NULL) then the data to be written
using @op is the data fetched using @blob-&gt;op.
provider should have added an error to the connection.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the number of bytes written. In case of error, -1 is returned and the</doc>
          <type name="long" c:type="glong"/>
        </return-value>
        <parameters>
          <parameter name="blob" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaBlob which contains the data to write</doc>
            <type name="Blob" c:type="GdaBlob*"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:whitespace="preserve">offset to write from the start of the blob (starts at 0)</doc>
            <type name="long" c:type="glong"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_all" c:identifier="gda_blob_op_write_all">
        <doc xml:whitespace="preserve">Writes the whole contents of @blob into the blob manipulated by @op. If necessary the resulting
blob is truncated from its previous length.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE on success</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="blob" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaBlob which contains the data to write</doc>
            <type name="Blob" c:type="GdaBlob*"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="_gda_reserved1">
        <type name="any" c:type="gpointer"/>
      </field>
    </class>
    <record name="BlobOpClass"
            c:type="GdaBlobOpClass"
            glib:is-gtype-struct-for="BlobOp">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_length">
        <callback name="get_length" c:type="get_length">
          <return-value transfer-ownership="none">
            <doc xml:whitespace="preserve">the length of the blob in bytes. In case of error, -1 is returned and the</doc>
            <type name="long" c:type="glong"/>
          </return-value>
          <parameters>
            <parameter name="op" transfer-ownership="none">
              <type name="BlobOp" c:type="GdaBlobOp*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="read">
        <callback name="read" c:type="read">
          <return-value transfer-ownership="none">
            <doc xml:whitespace="preserve">the number of bytes actually read. In case of error, -1 is returned and the</doc>
            <type name="long" c:type="glong"/>
          </return-value>
          <parameters>
            <parameter name="op" transfer-ownership="none">
              <type name="BlobOp" c:type="GdaBlobOp*"/>
            </parameter>
            <parameter name="blob" transfer-ownership="none">
              <doc xml:whitespace="preserve">a #GdaBlob to read data to</doc>
              <type name="Blob" c:type="GdaBlob*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <doc xml:whitespace="preserve">offset to read from the start of the blob (starts at 0)</doc>
              <type name="long" c:type="glong"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <doc xml:whitespace="preserve">maximum number of bytes to read.</doc>
              <type name="long" c:type="glong"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="write">
        <callback name="write" c:type="write">
          <return-value transfer-ownership="none">
            <doc xml:whitespace="preserve">the number of bytes written. In case of error, -1 is returned and the</doc>
            <type name="long" c:type="glong"/>
          </return-value>
          <parameters>
            <parameter name="op" transfer-ownership="none">
              <type name="BlobOp" c:type="GdaBlobOp*"/>
            </parameter>
            <parameter name="blob" transfer-ownership="none">
              <doc xml:whitespace="preserve">a #GdaBlob which contains the data to write</doc>
              <type name="Blob" c:type="GdaBlob*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <doc xml:whitespace="preserve">offset to write from the start of the blob (starts at 0)</doc>
              <type name="long" c:type="glong"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="write_all">
        <callback name="write_all" c:type="write_all">
          <return-value transfer-ownership="none">
            <doc xml:whitespace="preserve">TRUE on success</doc>
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="op" transfer-ownership="none">
              <type name="BlobOp" c:type="GdaBlobOp*"/>
            </parameter>
            <parameter name="blob" transfer-ownership="none">
              <doc xml:whitespace="preserve">a #GdaBlob which contains the data to write</doc>
              <type name="Blob" c:type="GdaBlob*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="Column"
           c:type="GdaColumn"
           parent="GObject.Object"
           glib:type-name="GdaColumn"
           glib:get-type="gda_column_get_type"
           glib:type-struct="ColumnClass">
      <constructor name="new" c:identifier="gda_column_new">
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a newly allocated #GdaColumn object.</doc>
          <type name="Column" c:type="GdaColumn*"/>
        </return-value>
      </constructor>
      <method name="copy" c:identifier="gda_column_copy">
        <doc xml:whitespace="preserve">Creates a new #GdaColumn object from an existing one.
in @column.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a newly allocated #GdaColumn with a copy of the data</doc>
          <type name="Column" c:type="GdaColumn*"/>
        </return-value>
      </method>
      <method name="get_description" c:identifier="gda_column_get_description">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the column's description, in any</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_description" c:identifier="gda_column_set_description">
        <doc xml:whitespace="preserve">Sets the column's description</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="title" transfer-ownership="none">
            <doc xml:whitespace="preserve">title name.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="gda_column_get_name">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the name of @column.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_name" c:identifier="gda_column_set_name">
        <doc xml:whitespace="preserve">Sets the name of @column to @name.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:whitespace="preserve">the new name of @column.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_dbms_type" c:identifier="gda_column_get_dbms_type">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the database type of @column.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_dbms_type" c:identifier="gda_column_set_dbms_type">
        <doc xml:whitespace="preserve">Defines @column's database type</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="dbms_type" transfer-ownership="none">
            <doc xml:whitespace="preserve">a string</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_g_type" c:identifier="gda_column_get_g_type">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the type of @column.</doc>
          <type name="GType" c:type="GType"/>
        </return-value>
      </method>
      <method name="set_g_type" c:identifier="gda_column_set_g_type">
        <doc xml:whitespace="preserve">Sets the type of @column to @type.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:whitespace="preserve">the new type of @column.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_allow_null" c:identifier="gda_column_get_allow_null">
        <doc xml:whitespace="preserve">Gets the 'allow null' flag of the given column.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">whether the given column allows null values or not (%TRUE or %FALSE).</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_allow_null" c:identifier="gda_column_set_allow_null">
        <doc xml:whitespace="preserve">Sets the 'allow null' flag of the given column.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="allow" transfer-ownership="none">
            <doc xml:whitespace="preserve">whether the given column should allows null values or not.</doc>
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_auto_increment"
              c:identifier="gda_column_get_auto_increment">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">whether the given column is an auto incremented one (%TRUE or %FALSE).</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_auto_increment"
              c:identifier="gda_column_set_auto_increment">
        <doc xml:whitespace="preserve">Sets the auto increment flag for the given column.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="is_auto" transfer-ownership="none">
            <doc xml:whitespace="preserve">auto increment status.</doc>
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_position" c:identifier="gda_column_get_position">
        <doc xml:whitespace="preserve">containing data model.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the position of the column refer to in the</doc>
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="set_position" c:identifier="gda_column_set_position">
        <doc xml:whitespace="preserve">Sets the position of the column refer to in the containing
data model.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="position" transfer-ownership="none">
            <doc xml:whitespace="preserve">the wanted position of the column in the containing data model.</doc>
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_default_value"
              c:identifier="gda_column_get_default_value">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">@column's default value, as a #GValue object.</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
      </method>
      <method name="set_default_value"
              c:identifier="gda_column_set_default_value">
        <doc xml:whitespace="preserve">Sets @column's default #GValue.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="default_value" transfer-ownership="none">
            <doc xml:whitespace="preserve">default #GValue for the column</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute" c:identifier="gda_column_get_attribute">
        <doc xml:whitespace="preserve">Get the value associated to a named attribute.
Attributes can have any name, but Libgda proposes some default names, see &lt;link linkend="libgda-40-Attributes-manager.synopsis"&gt;this section&lt;/link&gt;.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a read-only #GValue, or %NULL if not attribute named @attribute has been set for @column</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <doc xml:whitespace="preserve">attribute name as a string</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute" c:identifier="gda_column_set_attribute">
        <doc xml:whitespace="preserve">Set the value associated to a named attribute. The @attribute string is 'stolen' by this method, and
the memory it uses will be freed using the @destroy function when no longer needed (if @destroy is %NULL,
then the string will not be freed at all).
Attributes can have any name, but Libgda proposes some default names, 
see &lt;link linkend="libgda-40-Attributes-manager.synopsis"&gt;this section&lt;/link&gt;.
If there is already an attribute named @attribute set, then its value is replaced with the new value (@value is
copied), except if @value is %NULL, in which case the attribute is removed.
For example one would use it as:
&lt;code&gt;
gda_column_set_attribute (holder, g_strdup (my_attribute), g_free, my_value);
gda_column_set_attribute (holder, GDA_ATTRIBUTE_NAME, NULL, my_value);
&lt;/code&gt;
does it modify the table definition of the tables used by a SELECT statement is the model was created from a
SELECT statement).</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <doc xml:whitespace="preserve">attribute name as a static string</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GValue, or %NULL</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="destroy" transfer-ownership="none" scope="call">
            <doc xml:whitespace="preserve">a function to be called when @attribute is not needed anymore, or %NULL</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <property name="id" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ColumnPrivate" c:type="GdaColumnPrivate*"/>
      </field>
      <glib:signal name="g-type-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="name-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ColumnClass"
            c:type="GdaColumnClass"
            glib:is-gtype-struct-for="Column">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="name_changed">
        <callback name="name_changed" c:type="name_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="column" transfer-ownership="none">
              <type name="Column" c:type="GdaColumn*"/>
            </parameter>
            <parameter name="old_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_type_changed">
        <callback name="g_type_changed" c:type="g_type_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="column" transfer-ownership="none">
              <type name="Column" c:type="GdaColumn*"/>
            </parameter>
            <parameter name="old_type" transfer-ownership="none">
              <type name="GType" c:type="GType"/>
            </parameter>
            <parameter name="new_type" transfer-ownership="none">
              <type name="GType" c:type="GType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ColumnPrivate" c:type="GdaColumnPrivate">
    </record>
    <class name="Config"
           c:type="GdaConfig"
           parent="GObject.Object"
           glib:type-name="GdaConfig"
           glib:get-type="gda_config_get_type"
           glib:type-struct="ConfigClass">
      <function name="get" c:identifier="gda_config_get">
        <doc xml:whitespace="preserve">Get a pointer to the global GdaConfig object</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a non %NULL pointer to a #GdaConfig</doc>
          <type name="Config" c:type="GdaConfig*"/>
        </return-value>
      </function>
      <function name="get_dsn_info" c:identifier="gda_config_get_dsn_info">
        <doc xml:whitespace="preserve">Get information about the DSN named @dsn_name. 
and optionally &amp;lt;password&amp;gt; are provided, they are ignored). Also see the gda_dsn_split() utility
function.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a pointer to read-only #GdaDsnInfo structure, or %NULL if not found</doc>
          <type name="DsnInfo" c:type="GdaDsnInfo*"/>
        </return-value>
        <parameters>
          <parameter name="dsn_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">the name of the DSN to look for</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="define_dsn"
                c:identifier="gda_config_define_dsn"
                throws="1">
        <doc xml:whitespace="preserve">Add or update a DSN from the definition in @info</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if no error occurred</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <doc xml:whitespace="preserve">a pointer to a filled GdaDsnInfo structure</doc>
            <type name="DsnInfo" c:type="GdaDsnInfo*"/>
          </parameter>
        </parameters>
      </function>
      <function name="remove_dsn"
                c:identifier="gda_config_remove_dsn"
                throws="1">
        <doc xml:whitespace="preserve">Remove the DSN named @dsn_name</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if no error occurred</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="dsn_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">the name of the DSN to remove</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="dsn_needs_authentication"
                c:identifier="gda_config_dsn_needs_authentication">
        <doc xml:whitespace="preserve">Tells if the data source identified as @dsn_name needs any authentication. If a &amp;lt;username&amp;gt;
and optionally a &amp;lt;password&amp;gt; are specified, they are ignored.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if an authentication is needed</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="dsn_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">the name of a DSN, in the "[&amp;lt;username&amp;gt;[:&amp;lt;password&amp;gt;]@]&amp;lt;DSN&amp;gt;" format</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="list_dsn" c:identifier="gda_config_list_dsn">
        <doc xml:whitespace="preserve">Get a #GdaDataModel representing all the configured DSN, and keeping itself up to date with
the changes in the declared DSN.
The returned data model is composed of the following columns:
&lt;itemizedlist&gt;
&lt;listitem&gt;&lt;para&gt;DSN name&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;Provider name&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;Description&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;Connection string&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;Username if it exists&lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #GdaDataModel</doc>
          <type name="DataModel" c:type="GdaDataModel*"/>
        </return-value>
      </function>
      <function name="can_modify_system_config"
                c:identifier="gda_config_can_modify_system_config">
        <doc xml:whitespace="preserve">Tells if the global (system) configuration can be modified (considering
system permissions and settings)</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if system-wide configuration can be modified</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </function>
      <function name="get_nb_dsn" c:identifier="gda_config_get_nb_dsn">
        <doc xml:whitespace="preserve">Get the number of defined DSN</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the number of defined DSN</doc>
          <type name="int" c:type="gint"/>
        </return-value>
      </function>
      <function name="get_dsn_info_index"
                c:identifier="gda_config_get_dsn_info_index">
        <doc xml:whitespace="preserve">Get the index (starting at 0) of the DSN named @dsn_name</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the index or -1 if not found</doc>
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="dsn_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">a DSN</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_dsn_info_at_index"
                c:identifier="gda_config_get_dsn_info_at_index">
        <doc xml:whitespace="preserve">Get a pointer to a read-only #GdaDsnInfo at the @index position</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the pointer or %NULL if no DSN exists at position @index</doc>
          <type name="DsnInfo" c:type="GdaDsnInfo*"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <doc xml:whitespace="preserve">an index</doc>
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_provider_info"
                c:identifier="gda_config_get_provider_info">
        <doc xml:whitespace="preserve">Get some information about the a database provider (adapter) named</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a pointer to read-only #GdaProviderInfo structure, or %NULL if not found</doc>
          <type name="ProviderInfo" c:type="GdaProviderInfo*"/>
        </return-value>
        <parameters>
          <parameter name="provider_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">a database provider</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_provider"
                c:identifier="gda_config_get_provider"
                throws="1">
        <doc xml:whitespace="preserve">Get a pointer to the session-wide #GdaServerProvider for the
provider named @provider_name. The caller must not call g_object_unref() on the
returned object.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a pointer to the #GdaServerProvider, or %NULL if an error occurred</doc>
          <type name="ServerProvider" c:type="GdaServerProvider*"/>
        </return-value>
        <parameters>
          <parameter name="provider_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">a database provider</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="list_providers" c:identifier="gda_config_list_providers">
        <doc xml:whitespace="preserve">Get a #GdaDataModel representing all the installed database providers.
The returned data model is composed of the following columns:
&lt;itemizedlist&gt;
&lt;listitem&gt;&lt;para&gt;Provider name&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;Description&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;DSN parameters&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;Authentication parameters&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;File name of the plugin&lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #GdaDataModel</doc>
          <type name="DataModel" c:type="GdaDataModel*"/>
        </return-value>
      </function>
      <property name="system-filename" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="user-filename" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ConfigPrivate" c:type="GdaConfigPrivate*"/>
      </field>
      <glib:signal name="dsn-added">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="dsn-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="dsn-removed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="dsn-to-be-removed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ConfigClass"
            c:type="GdaConfigClass"
            glib:is-gtype-struct-for="Config">
      <field name="object_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="dsn_added">
        <callback name="dsn_added" c:type="dsn_added">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="conf" transfer-ownership="none">
              <type name="Config" c:type="GdaConfig*"/>
            </parameter>
            <parameter name="new_dsn" transfer-ownership="none">
              <type name="DsnInfo" c:type="GdaDsnInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="dsn_to_be_removed">
        <callback name="dsn_to_be_removed" c:type="dsn_to_be_removed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="conf" transfer-ownership="none">
              <type name="Config" c:type="GdaConfig*"/>
            </parameter>
            <parameter name="old_dsn" transfer-ownership="none">
              <type name="DsnInfo" c:type="GdaDsnInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="dsn_removed">
        <callback name="dsn_removed" c:type="dsn_removed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="conf" transfer-ownership="none">
              <type name="Config" c:type="GdaConfig*"/>
            </parameter>
            <parameter name="old_dsn" transfer-ownership="none">
              <type name="DsnInfo" c:type="GdaDsnInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="dsn_changed">
        <callback name="dsn_changed" c:type="dsn_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="conf" transfer-ownership="none">
              <type name="Config" c:type="GdaConfig*"/>
            </parameter>
            <parameter name="dsn" transfer-ownership="none">
              <type name="DsnInfo" c:type="GdaDsnInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ConfigError"
                 c:type="GdaConfigError"
                 glib:error-quark="gda_config_error_quark">
      <member name="dsn_not_found_error"
              value="0"
              c:identifier="GDA_CONFIG_DSN_NOT_FOUND_ERROR"/>
      <member name="permission_error"
              value="1"
              c:identifier="GDA_CONFIG_PERMISSION_ERROR"/>
      <member name="provider_not_found_error"
              value="2"
              c:identifier="GDA_CONFIG_PROVIDER_NOT_FOUND_ERROR"/>
      <member name="provider_creation_error"
              value="3"
              c:identifier="GDA_CONFIG_PROVIDER_CREATION_ERROR"/>
    </enumeration>
    <record name="ConfigPrivate" c:type="GdaConfigPrivate">
    </record>
    <class name="Connection"
           c:type="GdaConnection"
           parent="GObject.Object"
           glib:type-name="GdaConnection"
           glib:get-type="gda_connection_get_type"
           glib:type-struct="ConnectionClass">
      <implements name="Lockable"/>
      <function name="open_from_dsn"
                c:identifier="gda_connection_open_from_dsn"
                throws="1">
        <doc xml:whitespace="preserve">This function is the way of opening database connections with libgda, using a pre-defined data source (DSN),
see gda_config_define_dsn() for more information about how to define a DSN. If you don't want to define
a DSN, it is possible to use gda_connection_open_from_string() instead of this method.
(if &amp;lt;username&amp;gt; and/or &amp;lt;password&amp;gt; are provided, and @auth_string is %NULL, then these username
and passwords will be used). Note that if provided, &amp;lt;username&amp;gt; and &amp;lt;password&amp;gt; 
must be encoded as per RFC 1738, see gda_rfc1738_encode() for more information.
The @auth_string can contain the authentication information for the server
to accept the connection. It is a string containing semi-colon seperated named value, usually 
like "USERNAME=...;PASSWORD=..." where the ... are replaced by actual values. Note that each
name and value must be encoded as per RFC 1738, see gda_rfc1738_encode() for more information.
The actual named parameters required depend on the provider being used, and that list is available
as the &lt;parameter&gt;auth_params&lt;/parameter&gt; member of the #GdaProviderInfo structure for each installed
provider (use gda_config_get_provider_info() to get it). Also one can use the "gda-sql-4.0 -L" command to 
list the possible named parameters.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #GdaConnection if connection opening was sucessfull or %NULL if there was an error.</doc>
          <type name="Connection" c:type="GdaConnection*"/>
        </return-value>
        <parameters>
          <parameter name="dsn" transfer-ownership="none">
            <doc xml:whitespace="preserve">data source name.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="auth_string" transfer-ownership="none">
            <doc xml:whitespace="preserve">authentication string, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:whitespace="preserve">options for the connection (see #GdaConnectionOptions).</doc>
            <type name="ConnectionOptions" c:type="GdaConnectionOptions"/>
          </parameter>
        </parameters>
      </function>
      <function name="open_from_string"
                c:identifier="gda_connection_open_from_string"
                throws="1">
        <doc xml:whitespace="preserve">Opens a connection given a provider ID and a connection string. This
allows applications to open connections without having to create
a data source (DSN) in the configuration. The format of @cnc_string is
similar to PostgreSQL and MySQL connection strings. It is a semicolumn-separated
series of &amp;lt;key&amp;gt;=&amp;lt;value&amp;gt; pairs, where each key and value are encoded as per RFC 1738, 
see gda_rfc1738_encode() for more information.
The possible keys depend on the provider, the "gda-sql-4.0 -L" command
can be used to list the actual keys for each installed database provider.
For example the connection string to open an SQLite connection to a database
file named "my_data.db" in the current directory would be &lt;constant&gt;"DB_DIR=.;DB_NAME=my_data"&lt;/constant&gt;.
"[&amp;lt;provider&amp;gt;://][&amp;lt;username&amp;gt;[:&amp;lt;password&amp;gt;]@]&amp;lt;connection_params&amp;gt;"
(if &amp;lt;username&amp;gt; and/or &amp;lt;password&amp;gt; are provided, and @auth_string is %NULL, then these username
and passwords will be used, and if &amp;lt;provider&amp;gt; is provided and @provider_name is %NULL then this
provider will be used). Note that if provided, &amp;lt;username&amp;gt;, &amp;lt;password&amp;gt; and  &amp;lt;provider&amp;gt;
must be encoded as per RFC 1738, see gda_rfc1738_encode() for more information.
The @auth_string must contain the authentication information for the server
to accept the connection. It is a string containing semi-colon seperated named values, usually 
like "USERNAME=...;PASSWORD=..." where the ... are replaced by actual values. Note that each
name and value must be encoded as per RFC 1738, see gda_rfc1738_encode() for more information.
The actual named parameters required depend on the provider being used, and that list is available
as the &lt;parameter&gt;auth_params&lt;/parameter&gt; member of the #GdaProviderInfo structure for each installed
provider (use gda_config_get_provider_info() to get it). Similarly to the format of the connection
string, use the "gda-sql-4.0 -L" command to list the possible named parameters.
Additionally, it is possible to have the connection string
respect the "&amp;lt;provider_name&amp;gt;://&amp;lt;real cnc string&amp;gt;" format, in which case the provider name
and the real connection string will be extracted from that string (note that if @provider_name
is not %NULL then it will still be used as the provider ID).</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #GdaConnection if connection opening was sucessfull or %NULL if there was an error.</doc>
          <type name="Connection" c:type="GdaConnection*"/>
        </return-value>
        <parameters>
          <parameter name="provider_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">provider ID to connect to, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cnc_string" transfer-ownership="none">
            <doc xml:whitespace="preserve">connection string.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="auth_string" transfer-ownership="none">
            <doc xml:whitespace="preserve">authentication string, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:whitespace="preserve">options for the connection (see #GdaConnectionOptions).</doc>
            <type name="ConnectionOptions" c:type="GdaConnectionOptions"/>
          </parameter>
        </parameters>
      </function>
      <function name="open_sqlite" c:identifier="gda_connection_open_sqlite">
        <doc xml:whitespace="preserve">Opens an SQLite connection even if the SQLite provider is not installed,
to be used by database providers which need a temporary database to store
some information.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #GdaConnection, or %NULL if an error occurred</doc>
          <type name="Connection" c:type="GdaConnection*"/>
        </return-value>
        <parameters>
          <parameter name="directory" transfer-ownership="none">
            <doc xml:whitespace="preserve">the directory the database file will be in, or %NULL for the default TMP directory</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:whitespace="preserve">the database file name</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="auto_unlink" transfer-ownership="none">
            <doc xml:whitespace="preserve">if %TRUE, then the database file will be removed afterwards</doc>
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </function>
      <function name="string_split" c:identifier="gda_connection_string_split">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="out_cnc_params" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="out_provider" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="out_username" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="out_password" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </function>
      <method name="open" c:identifier="gda_connection_open" throws="1">
        <doc xml:whitespace="preserve">Tries to open the connection.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if the connection is opened, and FALSE otherwise.</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="close" c:identifier="gda_connection_close">
        <doc xml:whitespace="preserve">Closes the connection to the underlying data source, but first emits the 
"conn-to-close" signal.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="close_no_warning"
              c:identifier="gda_connection_close_no_warning">
        <doc xml:whitespace="preserve">Closes the connection to the underlying data source, without emiting any warning signal.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="is_opened" c:identifier="gda_connection_is_opened">
        <doc xml:whitespace="preserve">Checks whether a connection is open or not.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE if the connection is open, %FALSE if it's not.</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_options" c:identifier="gda_connection_get_options">
        <doc xml:whitespace="preserve">Gets the #GdaConnectionOptions used to open this connection.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">the connection options.</doc>
          <type name="ConnectionOptions" c:type="GdaConnectionOptions"/>
        </return-value>
      </method>
      <method name="get_provider" c:identifier="gda_connection_get_provider">
        <doc xml:whitespace="preserve">Gets a pointer to the #GdaServerProvider object used to access the database</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GdaServerProvider (NEVER NULL)</doc>
          <type name="ServerProvider" c:type="GdaServerProvider*"/>
        </return-value>
      </method>
      <method name="get_provider_name"
              c:identifier="gda_connection_get_provider_name">
        <doc xml:whitespace="preserve">Gets the name (identifier) of the database provider used by @cnc</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a non modifiable string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="create_operation"
              c:identifier="gda_connection_create_operation"
              throws="1">
        <doc xml:whitespace="preserve">Creates a new #GdaServerOperation object which can be modified in order 
to perform the type type of action. It is a wrapper around the gda_server_provider_create_operation()
method.
of operation or if an error occurred</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #GdaServerOperation object, or %NULL in the connection's provider does not support the @type type</doc>
          <type name="ServerOperation" c:type="GdaServerOperation*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:whitespace="preserve">the type of operation requested</doc>
            <type name="ServerOperationType" c:type="GdaServerOperationType"/>
          </parameter>
          <parameter name="options" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">an optional list of parameters</doc>
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
        </parameters>
      </method>
      <method name="perform_operation"
              c:identifier="gda_connection_perform_operation"
              throws="1">
        <doc xml:whitespace="preserve">Performs the operation described by @op (which should have been created using
gda_connection_create_operation()). It is a wrapper around the gda_server_provider_perform_operation()
method.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if no error occurred</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="op" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaServerOperation object</doc>
            <type name="ServerOperation" c:type="GdaServerOperation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_dsn" c:identifier="gda_connection_get_dsn">
        <doc xml:whitespace="preserve">to.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the data source name the connection object is connected</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_cnc_string"
              c:identifier="gda_connection_get_cnc_string">
        <doc xml:whitespace="preserve">Gets the connection string used to open this connection.
The connection string is the string sent over to the underlying
database provider, which describes the parameters to be used
to open a connection on the underlying data source.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the connection string used when opening the connection.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_authentication"
              c:identifier="gda_connection_get_authentication">
        <doc xml:whitespace="preserve">Gets the user name used to open this connection.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the user name.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_events"
              c:identifier="gda_connection_get_events"
              introspectable="0">
        <doc xml:whitespace="preserve">Retrieves a list of the last errors occurred during the connection. The returned list is
chronologically ordered such as that the most recent event is the #GdaConnectionEvent of the first node.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GList of #GdaConnectionEvent objects (the list should not be modified)</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <method name="create_parser" c:identifier="gda_connection_create_parser">
        <doc xml:whitespace="preserve">Creates a new parser object able to parse the SQL dialect understood by @cnc. 
If the #GdaServerProvider object internally used by @cnc does not have its own parser, 
then %NULL is returned, and a general SQL parser can be obtained
using gda_sql_parser_new().</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #GdaSqlParser object, or %NULL</doc>
          <type name="SqlParser" c:type="GdaSqlParser*"/>
        </return-value>
      </method>
      <method name="batch_execute"
              c:identifier="gda_connection_batch_execute"
              throws="1">
        <doc xml:whitespace="preserve">Executes all the statements contained in @batch (in the order in which they were added to @batch), and
returns a list of #GObject objects, at most one #GObject for each statement; see gda_connection_statement_execute()
for details about the returned objects.
If one of the statement fails, then none of the subsequent statement will be executed, and the method returns
the list of #GObject created by the correct execution of the previous statements. If a transaction is required,
then it should be started before calling this method.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new list of #GObject objects</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="GObject.Object"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="batch" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaBatch object which contains all the statements to execute</doc>
            <type name="Batch" c:type="GdaBatch*"/>
          </parameter>
          <parameter name="params" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">a #GdaSet object (which can be obtained using gda_batch_get_parameters()), or %NULL</doc>
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
          <parameter name="model_usage" transfer-ownership="none">
            <doc xml:whitespace="preserve">specifies how the returned data model(s) will be used, as a #GdaStatementModelUsage enum</doc>
            <type name="StatementModelUsage" c:type="GdaStatementModelUsage"/>
          </parameter>
        </parameters>
      </method>
      <method name="quote_sql_identifier"
              c:identifier="gda_connection_quote_sql_identifier"
              version="4.0.3">
        <doc xml:whitespace="preserve">Use this method to get a correctly quoted (if necessary) SQL identifier which can be used
in SQL statements, from @id. If @id is already correctly quoted for @cnc, then a copy of @id
may be returned.
This method may add double quotes (or other characters) around @id:
&lt;itemizedlist&gt;
&lt;listitem&gt;&lt;para&gt;if @id is a reserved SQL keyword (such as SELECT, INSERT, ...)&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;if @id contains non allowed characters such as spaces, or if it starts with a digit&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;in any other event as necessary for @cnc, depending on the the options passed when opening the @cnc
connection, and specifically the &lt;link linkend="GDA-CONNECTION-OPTIONS-SQL-IDENTIFIERS-CASE-SENSITIVE:CAPS"&gt;
GDA_CONNECTION_OPTIONS_SQL_IDENTIFIERS_CASE_SENSITIVE&lt;/link&gt; option.&lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;
One can safely pass an already quoted @id to this method, either with quoting characters allowed by @cnc or using the
double quote (") character.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new string, to free with g_free() once not needed anymore</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:whitespace="preserve">an SQL identifier</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="statement_to_sql"
              c:identifier="gda_connection_statement_to_sql"
              throws="1">
        <doc xml:whitespace="preserve">Renders @stmt as an SQL statement, adapted to the SQL dialect used by @cnc</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new string, or %NULL if an error occurred</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="stmt" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaStatement object</doc>
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
          <parameter name="params" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">a #GdaSet object (which can be obtained using gda_statement_get_parameters()), or %NULL</doc>
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:whitespace="preserve">SQL rendering flags, as #GdaStatementSqlFlag OR'ed values</doc>
            <type name="StatementSqlFlag" c:type="GdaStatementSqlFlag"/>
          </parameter>
          <parameter name="params_used"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     allow-none="1">
            <doc xml:whitespace="preserve">a place to store the list of individual #GdaHolder objects within @params which have been used</doc>
            <type name="GLib.SList" c:type="GSList**">
              <type name="Holder"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="statement_prepare"
              c:identifier="gda_connection_statement_prepare"
              throws="1">
        <doc xml:whitespace="preserve">Ask the database accessed through the @cnc connection to prepare the usage of @stmt. This is only useful
if @stmt will be used more than once (however some database providers may always prepare statements 
before executing them).
This function is also useful to make sure @stmt is fully understood by the database before actually executing it.
Note however that it is also possible that gda_connection_statement_prepare() fails when
gda_connection_statement_execute() does not fail (this will usually be the case with statements such as
&lt;![CDATA["SELECT * FROM ##tablename::string"]]&gt; because database usually don't allow variables to be used in place of a 
table name).</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if no error occurred.</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stmt" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaStatement object</doc>
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
        </parameters>
      </method>
      <method name="statement_execute"
              c:identifier="gda_connection_statement_execute"
              throws="1">
        <doc xml:whitespace="preserve">Executes @stmt. 
As @stmt can, by desing (and if not abused), contain only one SQL statement, the
return object will either be:
&lt;itemizedlist&gt;
&lt;listitem&gt;&lt;para&gt;a #GdaDataSelect object (which is also a #GdaDataModel) if @stmt is a SELECT statement 
(usually a GDA_SQL_STATEMENT_SELECT, see #GdaSqlStatementType)
containing the results of the SELECT. The resulting data model is by default read only, but
modifications can be enabled, see the #GdaDataSelect's documentation for more information.&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;a #GdaSet for any other SQL statement which correctly executed. In this case
(if the provider supports it), then the #GdaSet may contain value holders named:
&lt;itemizedlist&gt;
&lt;listitem&gt;&lt;para&gt;a (gint) #GdaHolder named "IMPACTED_ROWS"&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;a (GObject) #GdaHolder named "EVENT" which contains a #GdaConnectionEvent&lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;&lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;
If @last_insert_row is not %NULL and @stmt is an INSERT statement, then it will contain (if the
provider used by @cnc supports it) a new #GdaSet object composed of value holders named "+&amp;lt;column number&amp;gt;"
starting at column 0 which contain the actual inserted values. For example if a table is composed of an 'id' column
which is auto incremented and a 'name' column then the execution of a "INSERT INTO mytable (name) VALUES ('joe')"
query will return a #GdaSet with two holders:
&lt;itemizedlist&gt;
&lt;listitem&gt;&lt;para&gt;one with the '+0' ID which may for example contain 1 (note that its "name" property should be "id")&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;one with the '+1' ID which will contain 'joe' (note that its "name" property should be "name")&lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;
This method may fail with a %GDA_SERVER_PROVIDER_ERROR domain error (see the #GdaServerProviderError error codes).
be executed and this method will return %NULL.
invalid parameters, then the statement can't be executed and this method will return %NULL, unless the
invalid parameters and if @model_usage has the GDA_STATEMENT_MODEL_ALLOW_NOPARAM flag, then the returned
data model will contain no row but will have all the correct columns (even though some of the columns might
report as GDA_TYPE_NULL). In this case, if (after this method call) any of @params' parameters change
then the resulting data model will re-run itself, see the GdaDataSelect's 
&lt;link linkend="GdaDataSelect--auto-reset"&gt;auto-reset&lt;/link&gt; property for more information.
GDA_STATEMENT_MODEL_CURSOR_FORWARD flags, then the default will be to return a random access data model
transaction will have been started by the database provider, and it's up to the caller to close the transaction
(which will then be locked) once all the blob ressources have been
liberated (when the returned data model is destroyed). See the section about
&lt;link linkend="gen:blobs"&gt;Binary large objects (BLOBs)&lt;/link&gt; for more information.
Also see the &lt;link linkend="limitations"&gt;provider's limitations&lt;/link&gt;, and the
&lt;link linkend="data-select"&gt;Advanced GdaDataSelect usage&lt;/link&gt; sections.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #GObject, or %NULL if an error occurred</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <parameter name="stmt" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaStatement object</doc>
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
          <parameter name="params" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">a #GdaSet object (which can be obtained using gda_statement_get_parameters()), or %NULL</doc>
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
          <parameter name="model_usage" transfer-ownership="none">
            <doc xml:whitespace="preserve">in the case where @stmt is a SELECT statement, specifies how the returned data model will be used</doc>
            <type name="StatementModelUsage" c:type="GdaStatementModelUsage"/>
          </parameter>
          <parameter name="last_insert_row"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <doc xml:whitespace="preserve">a place to store a new #GdaSet object which contains the values of the last inserted row, or %NULL</doc>
            <type name="Set" c:type="GdaSet**"/>
          </parameter>
        </parameters>
      </method>
      <method name="statement_execute_select"
              c:identifier="gda_connection_statement_execute_select"
              throws="1">
        <doc xml:whitespace="preserve">Executes a selection command on the given connection. The gda_execute_select_command() method can be easier
to use if one prefers to use some SQL directly.
This function returns a #GdaDataModel resulting from the SELECT statement, or %NULL
if an error occurred.
This function is just a convenience function around the gda_connection_statement_execute()
function.
See the documentation of the gda_connection_statement_execute() for information
about the @params list of parameters.
data source, or %NULL if an error occurred</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #GdaDataModel containing the data returned by the</doc>
          <type name="DataModel" c:type="GdaDataModel*"/>
        </return-value>
        <parameters>
          <parameter name="stmt" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaStatement object.</doc>
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
          <parameter name="params" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">a #GdaSet object (which can be obtained using gda_statement_get_parameters()), or %NULL</doc>
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
        </parameters>
      </method>
      <method name="statement_execute_select_fullv"
              c:identifier="gda_connection_statement_execute_select_fullv"
              introspectable="0">
        <doc xml:whitespace="preserve">Executes a selection command on the given connection.
This function returns a #GdaDataModel resulting from the SELECT statement, or %NULL
if an error occurred.
This function is just a convenience function around the gda_connection_statement_execute()
function.
See the documentation of the gda_connection_statement_execute() for information
about the @params list of parameters.
data source, or %NULL if an error occurred</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #GdaDataModel containing the data returned by the</doc>
          <type name="DataModel" c:type="GdaDataModel*"/>
        </return-value>
        <parameters>
          <parameter name="stmt" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaStatement object.</doc>
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
          <parameter name="params" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">a #GdaSet object (which can be obtained using gda_statement_get_parameters()), or %NULL</doc>
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
          <parameter name="model_usage" transfer-ownership="none">
            <doc xml:whitespace="preserve">specifies how the returned data model will be used as a #GdaStatementModelUsage enum</doc>
            <type name="StatementModelUsage" c:type="GdaStatementModelUsage"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <doc xml:whitespace="preserve">a place to store an error, or %NULL</doc>
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="statement_execute_select_full"
              c:identifier="gda_connection_statement_execute_select_full"
              throws="1">
        <doc xml:whitespace="preserve">Executes a selection command on the given connection.
This function returns a #GdaDataModel resulting from the SELECT statement, or %NULL
if an error occurred.
This function is just a convenience function around the gda_connection_statement_execute()
function.
See the documentation of the gda_connection_statement_execute() for information
about the @params list of parameters.
data source, or %NULL if an error occurred</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #GdaDataModel containing the data returned by the</doc>
          <type name="DataModel" c:type="GdaDataModel*"/>
        </return-value>
        <parameters>
          <parameter name="stmt" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaStatement object.</doc>
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
          <parameter name="params" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">a #GdaSet object (which can be obtained using gda_statement_get_parameters()), or %NULL</doc>
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
          <parameter name="model_usage" transfer-ownership="none">
            <doc xml:whitespace="preserve">specifies how the returned data model will be used as a #GdaStatementModelUsage enum</doc>
            <type name="StatementModelUsage" c:type="GdaStatementModelUsage"/>
          </parameter>
          <parameter name="col_types" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">an array of GType to request each returned #GdaDataModel's column's GType, terminated with the G_TYPE_NONE value. Any value left to 0 will make the database provider determine the real GType. @col_types can also be %NULL if no column type is specified.</doc>
            <array c:type="GType*">
              <type name="GType"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="statement_execute_non_select"
              c:identifier="gda_connection_statement_execute_non_select"
              throws="1">
        <doc xml:whitespace="preserve">Executes a non-selection statement on the given connection. The gda_execute_non_select_command() method can be easier
to use if one prefers to use some SQL directly.
This function returns the number of rows affected by the execution of @stmt, or -1
if an error occurred, or -2 if the connection's provider does not return the number of rows affected.
This function is just a convenience function around the gda_connection_statement_execute()
function. 
See the documentation of the gda_connection_statement_execute() for information
about the @params list of parameters.
See gda_connection_statement_execute() form more information about @last_insert_row.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the number of rows affected (&amp;gt;=0) or -1 or -2</doc>
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="stmt" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaStatement object.</doc>
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
          <parameter name="params" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">a #GdaSet object (which can be obtained using gda_statement_get_parameters()), or %NULL</doc>
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
          <parameter name="last_insert_row"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <doc xml:whitespace="preserve">a place to store a new #GdaSet object which contains the values of the last inserted row, or %NULL</doc>
            <type name="Set" c:type="GdaSet**"/>
          </parameter>
        </parameters>
      </method>
      <method name="async_statement_execute"
              c:identifier="gda_connection_async_statement_execute"
              version="4.2"
              throws="1">
        <doc xml:whitespace="preserve">This method is similar to gda_connection_statement_execute() but is asynchronous as it method returns
immediately with a task ID. It's up to the caller to use gda_connection_async_fetch_result() regularly to check
if the statement's execution is finished.
It is possible to call the method several times to request several statements to be executed asynchronously, the
statements will be executed in the order in which they were requested.
The parameters, if present, are copied and can be discarded or modified before the statement is actually executed.
The @stmt object is not copied but simply referenced (for performance reasons), and if it is modified before
it is actually executed, then its execution will not occur. It is however safe to call g_object_unref() on it if
it's not needed anymore.
The execution failure of any statement has no impact on the execution of other statements except for example if
the connection has a transaction started and the failure invalidates the transaction (as decided by the database
server).
but any other error)</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a task ID, or 0 if an error occurred (not an error regarding @stmt itself as its execution has not yet started</doc>
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="stmt" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaStatement object</doc>
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
          <parameter name="params" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">a #GdaSet object (which can be obtained using gda_statement_get_parameters()), or %NULL</doc>
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
          <parameter name="model_usage" transfer-ownership="none">
            <doc xml:whitespace="preserve">in the case where @stmt is a SELECT statement, specifies how the returned data model will be used</doc>
            <type name="StatementModelUsage" c:type="GdaStatementModelUsage"/>
          </parameter>
          <parameter name="col_types" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">an array of GType to request each returned #GdaDataModel's column's GType, terminated with the G_TYPE_NONE</doc>
            <array c:type="GType*">
              <type name="GType"/>
            </array>
          </parameter>
          <parameter name="need_last_insert_row" transfer-ownership="none">
            <doc xml:whitespace="preserve">TRUE if the values of the last interted row must be computed</doc>
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="async_fetch_result"
              c:identifier="gda_connection_async_fetch_result"
              version="4.2"
              throws="1">
        <doc xml:whitespace="preserve">Use this method to obtain the result of the execution of a statement which has been executed asynchronously by
calling gda_connection_async_statement_execute(). This function is non locking and will return %NULL (and no
error will be set) if the statement has not been executed yet.
If the statement has been executed, this method returns the same value as gda_connection_statement_execute()
would have if the statement had been
executed synchronously.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #GObject, or %NULL if an error occurred</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <parameter name="task_id" transfer-ownership="none">
            <doc xml:whitespace="preserve">a task ID returned by gda_connection_async_statement_execute()</doc>
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="last_insert_row"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <doc xml:whitespace="preserve">a place to store a new #GdaSet object which contains the values of the last inserted row, or %NULL</doc>
            <type name="Set" c:type="GdaSet**"/>
          </parameter>
        </parameters>
      </method>
      <method name="async_cancel"
              c:identifier="gda_connection_async_cancel"
              version="4.2"
              throws="1">
        <doc xml:whitespace="preserve">Requests that a task be cancelled. This operation may of may not have any effect
depending on the task's status, even if it returns %TRUE. If it returns %FALSE,
then the task has not been cancelled.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if no error occurred</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="task_id" transfer-ownership="none">
            <doc xml:whitespace="preserve">a task ID returned by gda_connection_async_statement_execute()</doc>
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="repetitive_statement_execute"
              c:identifier="gda_connection_repetitive_statement_execute"
              version="4.2"
              throws="1">
        <doc xml:whitespace="preserve">Executes the statement upon which @rstmt is built. Note that as several statements can actually be executed by this
method, it is recommended to be within a transaction.
If @error is not %NULL and @stop_on_error is %FALSE, then it may contain the last error which occurred.
represent), one for each actual execution of the statement upon which @rstmt is built. If @stop_on_error is %FALSE, then
the list may contain some %NULL pointers which refer to statements which failed to execute.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new list of #GObject pointers (see gda_connection_statement_execute() for more information about what they</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="GObject.Object"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="rstmt" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaRepetitiveStatement object</doc>
            <type name="RepetitiveStatement" c:type="GdaRepetitiveStatement*"/>
          </parameter>
          <parameter name="model_usage" transfer-ownership="none">
            <doc xml:whitespace="preserve">specifies how the returned data model will be used as a #GdaStatementModelUsage enum</doc>
            <type name="StatementModelUsage" c:type="GdaStatementModelUsage"/>
          </parameter>
          <parameter name="col_types" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">an array of GType to request each returned GdaDataModel's column's GType, see gda_connection_statement_execute_select_full() for more information</doc>
            <array c:type="GType*">
              <type name="GType"/>
            </array>
          </parameter>
          <parameter name="stop_on_error" transfer-ownership="none">
            <doc xml:whitespace="preserve">set to TRUE if the method has to stop on the first error.</doc>
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="begin_transaction"
              c:identifier="gda_connection_begin_transaction"
              throws="1">
        <doc xml:whitespace="preserve">Starts a transaction on the data source, identified by the
Before starting a transaction, you can check whether the underlying
provider does support transactions or not by using the
gda_connection_supports_feature() function.
otherwise.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE if the transaction was started successfully, %FALSE</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">the name of the transation to start, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="level" transfer-ownership="none">
            <doc xml:whitespace="preserve">the requested transaction level (%GDA_TRANSACTION_ISOLATION_UNKNOWN if not specified)</doc>
            <type name="TransactionIsolation"
                  c:type="GdaTransactionIsolation"/>
          </parameter>
        </parameters>
      </method>
      <method name="commit_transaction"
              c:identifier="gda_connection_commit_transaction"
              throws="1">
        <doc xml:whitespace="preserve">Commits the given transaction to the backend database. You need to call
gda_connection_begin_transaction() first.
%FALSE otherwise.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE if the transaction was finished successfully,</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">the name of the transation to commit, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="rollback_transaction"
              c:identifier="gda_connection_rollback_transaction"
              throws="1">
        <doc xml:whitespace="preserve">Rollbacks the given transaction. This means that all changes
made to the underlying data source since the last call to
#gda_connection_begin_transaction() or #gda_connection_commit_transaction()
will be discarded.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE if the operation was successful, %FALSE otherwise.</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">the name of the transation to commit, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_savepoint"
              c:identifier="gda_connection_add_savepoint"
              throws="1">
        <doc xml:whitespace="preserve">Adds a SAVEPOINT named @name.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if no error occurred</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">name of the savepoint to add</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="rollback_savepoint"
              c:identifier="gda_connection_rollback_savepoint"
              throws="1">
        <doc xml:whitespace="preserve">Rollback all the modifications made after the SAVEPOINT named @name.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if no error occurred</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">name of the savepoint to rollback to</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_savepoint"
              c:identifier="gda_connection_delete_savepoint"
              throws="1">
        <doc xml:whitespace="preserve">Delete the SAVEPOINT named @name when not used anymore.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if no error occurred</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">name of the savepoint to delete</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_transaction_status"
              c:identifier="gda_connection_get_transaction_status">
        <doc xml:whitespace="preserve">Get the status of @cnc regarding transactions. The returned object should not be modified
or destroyed; however it may be modified or destroyed by the connection itself.
If %NULL is returned, then no transaction has been associated with @cnc</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GdaTransactionStatus object, or %NULL</doc>
          <type name="TransactionStatus" c:type="GdaTransactionStatus*"/>
        </return-value>
      </method>
      <method name="value_to_sql_string"
              c:identifier="gda_connection_value_to_sql_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="from" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="supports_feature"
              c:identifier="gda_connection_supports_feature">
        <doc xml:whitespace="preserve">Asks the underlying provider for if a specific feature is supported.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE if the provider supports it, %FALSE if not.</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:whitespace="preserve">feature to ask for.</doc>
            <type name="ConnectionFeature" c:type="GdaConnectionFeature"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_meta_store"
              c:identifier="gda_connection_get_meta_store">
        <doc xml:whitespace="preserve">Get or initializes the #GdaMetaStore associated to @cnc</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #GdaMetaStore object</doc>
          <type name="MetaStore" c:type="GdaMetaStore*"/>
        </return-value>
      </method>
      <method name="update_meta_store"
              c:identifier="gda_connection_update_meta_store"
              throws="1">
        <doc xml:whitespace="preserve">Updates @cnc's associated #GdaMetaStore. If @context is not %NULL, then only the parts described by
explanations follow:
In order to keep the meta store's contents in a consistent state, the update process involves updating
the contents of all the tables related to one where the contents change. For example the "_columns"
table (which lists all the columns of a table) depends on the "_tables" table (which lists all the tables
in a schema), so if a row is added, removed or modified in the "_tables", then the "_columns" table's contents
needs to be updated as well regarding that row.
If @context is %NULL, then the update process will simply overwrite any data that was present in all the
meta store's tables with new (up to date) data even if nothing has changed, without having to build the
tables' dependency tree. This is the recommended way of proceeding when dealing with a meta store which
might be outdated.
On the other hand, if @context is not %NULL, then a tree of the dependencies has to be built (depending on
context may be useful for example in the following situations:
&lt;itemizedlist&gt;
&lt;listitem&gt;&lt;para&gt;One knows that a database object has changed (for example a table created), and
may use the @context to request that only the information about that table be updated
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;One is only interrested in the list of views, and may request that only the information
about views may be updated&lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;
When @context is not %NULL, and contains specified SQL identifiers (for example the "table_name" of the "_tables"
table), then each SQL identifier has to match the convention the #GdaMetaStore has adopted regarding
case sensitivity, using gda_connection_quote_sql_identifier() or gda_meta_store_sql_identifier_quote().
see the &lt;link linkend="information_schema:sql_identifiers"&gt;
meta data section about SQL identifiers&lt;/link&gt; for more information, and the documentation about the
gda_sql_identifier_quote() function which will be most useful.
Note however that usually &lt;emphasis&gt;more&lt;/emphasis&gt; information will be updated than strictly requested by
the @context argument.
For more information, see the &lt;link linkend="information_schema"&gt;Database structure&lt;/link&gt; section, and
the &lt;link linkend="howto-meta2"&gt;Update the meta data about a table&lt;/link&gt; howto.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if no error occurred</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">description of which part of @cnc's associated #GdaMetaStore should be updated, or %NULL</doc>
            <type name="MetaContext" c:type="GdaMetaContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_meta_store_data"
              c:identifier="gda_connection_get_meta_store_data"
              introspectable="0">
        <doc xml:whitespace="preserve">Retrieves data stored in @cnc's associated #GdaMetaStore object. This method is useful
to easily get some information about the meta-data associated to @cnc, such as the list of
tables, views, and other database objects.
is up to date using gda_connection_update_meta_store() (it can become outdated if the database's schema
is modified).
For more information about the returned data model's attributes, or about the @meta_type and ... filter arguments,
see &lt;link linkend="GdaConnectionMetaTypeHead"&gt;this description&lt;/link&gt;.
Also, when using filters involving data which are SQL identifiers, make sure each SQL identifier
is represented using the #GdaMetaStore convention, using gda_meta_store_sql_identifier_quote() or
gda_meta_store_sql_identifier_quote().
See the &lt;link linkend="information_schema:sql_identifiers"&gt;
meta data section about SQL identifiers&lt;/link&gt; for more information, and the documentation about the
gda_sql_identifier_quote() function which will be most useful.
for freeing the returned model using g_object_unref().</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #GdaDataModel containing the data required. The caller is responsible</doc>
          <type name="DataModel" c:type="GdaDataModel*"/>
        </return-value>
        <parameters>
          <parameter name="meta_type" transfer-ownership="none">
            <doc xml:whitespace="preserve">describes which data to get.</doc>
            <type name="ConnectionMetaType" c:type="GdaConnectionMetaType"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <doc xml:whitespace="preserve">a place to store errors, or %NULL</doc>
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
          <parameter name="nb_filters" transfer-ownership="none">
            <doc xml:whitespace="preserve">the number of filters in the @... argument</doc>
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="get_meta_store_data_v"
              c:identifier="gda_connection_get_meta_store_data_v"
              throws="1">
        <doc xml:whitespace="preserve">see #gda_connection_get_meta_store_data
for freeing the returned model using g_object_unref().</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #GdaDataModel containing the data required. The caller is responsible</doc>
          <type name="DataModel" c:type="GdaDataModel*"/>
        </return-value>
        <parameters>
          <parameter name="meta_type" transfer-ownership="none">
            <doc xml:whitespace="preserve">describes which data to get.</doc>
            <type name="ConnectionMetaType" c:type="GdaConnectionMetaType"/>
          </parameter>
          <parameter name="filters" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GList of #GdaHolder objects</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Holder"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="internal_set_provider_data"
              c:identifier="gda_connection_internal_set_provider_data"
              introspectable="0">
        <doc xml:whitespace="preserve">set opaque @data, you'll have to do it yourself.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <doc xml:whitespace="preserve">an opaque structure, known only to the provider for which @cnc is opened</doc>
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_func"
                     transfer-ownership="none"
                     scope="call">
            <doc xml:whitespace="preserve">function to call when the connection closes and @data needs to be destroyed</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="internal_get_provider_data"
              c:identifier="gda_connection_internal_get_provider_data"
              introspectable="0">
        <doc xml:whitespace="preserve">Get the opaque pointer previously set using gda_connection_internal_set_provider_data().
If it's not set, then add a connection event and returns %NULL</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the pointer to the opaque structure set using gda_connection_internal_set_provider_data()</doc>
          <type name="any" c:type="gpointer"/>
        </return-value>
      </method>
      <method name="add_event" c:identifier="gda_connection_add_event">
        <doc xml:whitespace="preserve">Adds an event to the given connection. This function is usually
called by providers, to inform clients of events that happened
during some operation.
As soon as a provider (or a client, it does not matter) calls this
function with an @event object which is an error,
the connection object emits the "error" signal, to which clients can connect to be
informed of events.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="full">
            <doc xml:whitespace="preserve">is stored internally, so you don't need to unref it.</doc>
            <type name="ConnectionEvent" c:type="GdaConnectionEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_event_string"
              c:identifier="gda_connection_add_event_string"
              introspectable="0">
        <doc xml:whitespace="preserve">Adds a new error to the given connection object. This is just a convenience
function that simply creates a #GdaConnectionEvent and then calls
#gda_server_connection_add_error.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a new #GdaConnectionEvent object, however the caller does not hold a reference to the returned object, and if need be the caller must call g_object_ref() on it.</doc>
          <type name="ConnectionEvent" c:type="GdaConnectionEvent*"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <doc xml:whitespace="preserve">a format string (see the printf(3) documentation).</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="clear_events_list"
              c:identifier="gda_connection_clear_events_list">
        <doc xml:whitespace="preserve">This function lets you clear the list of #GdaConnectionEvent's of the
given connection.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="internal_transaction_started"
              c:identifier="gda_connection_internal_transaction_started"
              introspectable="0">
        <doc xml:whitespace="preserve">Internal functions to be called by database providers when a transaction has been started
to keep track of the transaction status of the connection.
has already been called because a statement's execution was necessary to perform
the action.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="parent_trans" transfer-ownership="none">
            <doc xml:whitespace="preserve">name of the parent transaction, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="trans_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">transaction's name, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="isol_level" transfer-ownership="none">
            <doc xml:whitespace="preserve">isolation level.</doc>
            <type name="TransactionIsolation"
                  c:type="GdaTransactionIsolation"/>
          </parameter>
        </parameters>
      </method>
      <method name="internal_transaction_rolledback"
              c:identifier="gda_connection_internal_transaction_rolledback"
              introspectable="0">
        <doc xml:whitespace="preserve">Internal functions to be called by database providers when a transaction has been rolled
back to keep track of the transaction status of the connection
has already been called because a statement's execution was necessary to perform
the action.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="trans_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">transaction's name, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="internal_transaction_committed"
              c:identifier="gda_connection_internal_transaction_committed"
              introspectable="0">
        <doc xml:whitespace="preserve">Internal functions to be called by database providers when a transaction has been committed
to keep track of the transaction status of the connection
has already been called because a statement's execution was necessary to perform
the action.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="trans_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">transaction's name, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="internal_statement_executed"
              c:identifier="gda_connection_internal_statement_executed"
              introspectable="0">
        <doc xml:whitespace="preserve">Internal functions to be called by database providers when a statement has been executed
to keep track of the transaction status of the connection</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stmt" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaStatement which has been executed</doc>
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
          <parameter name="params" transfer-ownership="none">
            <doc xml:whitespace="preserve">execution's parameters</doc>
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaConnectionEvent if the execution failed, or %NULL</doc>
            <type name="ConnectionEvent" c:type="GdaConnectionEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="internal_savepoint_added"
              c:identifier="gda_connection_internal_savepoint_added"
              introspectable="0">
        <doc xml:whitespace="preserve">Internal functions to be called by database providers when a savepoint has been added
to keep track of the transaction status of the connection
has already been called because a statement's execution was necessary to perform
the action.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="parent_trans" transfer-ownership="none">
            <doc xml:whitespace="preserve">name of the parent transaction, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="svp_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">savepoint's name, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="internal_savepoint_rolledback"
              c:identifier="gda_connection_internal_savepoint_rolledback"
              introspectable="0">
        <doc xml:whitespace="preserve">Internal functions to be called by database providers when a savepoint has been rolled back
to keep track of the transaction status of the connection
has already been called because a statement's execution was necessary to perform
the action.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="svp_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">savepoint's name, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="internal_savepoint_removed"
              c:identifier="gda_connection_internal_savepoint_removed"
              introspectable="0">
        <doc xml:whitespace="preserve">Internal functions to be called by database providers when a savepoint has been removed
to keep track of the transaction status of the connection
has already been called because a statement's execution was necessary to perform
the action.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="svp_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">savepoint's name, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="internal_change_transaction_state"
              c:identifier="gda_connection_internal_change_transaction_state"
              introspectable="0">
        <doc xml:whitespace="preserve">Internal function to be called by database providers to force a transaction status
change.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="newstate" transfer-ownership="none">
            <doc xml:whitespace="preserve">the new state</doc>
            <type name="TransactionStatusState"
                  c:type="GdaTransactionStatusState"/>
          </parameter>
        </parameters>
      </method>
      <method name="internal_reset_transaction_status"
              c:identifier="gda_connection_internal_reset_transaction_status"
              introspectable="0">
        <doc xml:whitespace="preserve">Internal function to be called by database providers to reset the transaction status.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="add_prepared_statement"
              c:identifier="gda_connection_add_prepared_statement">
        <doc xml:whitespace="preserve">Declares that @prepared_stmt is a prepared statement object associated to @gda_stmt within the connection
(meaning the connection increments the reference counter of @prepared_stmt).
If @gda_stmt changes or is destroyed, the the association will be lost and the connection will lose the
reference it has on @prepared_stmt.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="gda_stmt" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaStatement object</doc>
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
          <parameter name="prepared_stmt" transfer-ownership="none">
            <doc xml:whitespace="preserve">a prepared statement object (as a #GdaPStmt object, or more likely a descendant)</doc>
            <type name="PStmt" c:type="GdaPStmt*"/>
          </parameter>
        </parameters>
      </method>
      <method name="del_prepared_statement"
              c:identifier="gda_connection_del_prepared_statement">
        <doc xml:whitespace="preserve">gda_connection_add_prepared_statement() does.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="gda_stmt" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaStatement object</doc>
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_prepared_statement"
              c:identifier="gda_connection_get_prepared_statement">
        <doc xml:whitespace="preserve">Retrieves a pointer to an object representing a prepared statement for @gda_stmt within @cnc. The
association must have been done using gda_connection_add_prepared_statement().</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the prepared statement, or %NULL if no association exists</doc>
          <type name="PStmt" c:type="GdaPStmt*"/>
        </return-value>
        <parameters>
          <parameter name="gda_stmt" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaStatement object</doc>
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
        </parameters>
      </method>
      <property name="auth-string" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="cnc-string" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="dsn" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="is-wrapper"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="meta-store" writable="1" transfer-ownership="none">
        <type name="MetaStore" c:type="GdaMetaStore"/>
      </property>
      <property name="monitor-wrapped-in-mainloop"
                writable="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="options" writable="1" transfer-ownership="none">
        <type name="ConnectionOptions" c:type="GdaConnectionOptions"/>
      </property>
      <property name="provider" writable="1" transfer-ownership="none">
        <type name="ServerProvider" c:type="GdaServerProvider"/>
      </property>
      <property name="thread-owner" writable="1" transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ConnectionPrivate" c:type="GdaConnectionPrivate*"/>
      </field>
      <glib:signal name="conn-closed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="conn-opened">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="conn-to-close">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="dsn-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="error">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="ConnectionEvent" c:type="GdaConnectionEvent"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="transaction-status-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ConnectionClass"
            c:type="GdaConnectionClass"
            glib:is-gtype-struct-for="Connection">
      <field name="object_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="error">
        <callback name="error" c:type="error">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="error" transfer-ownership="none">
              <type name="ConnectionEvent" c:type="GdaConnectionEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="conn_opened">
        <callback name="conn_opened" c:type="conn_opened">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="obj" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="conn_to_close">
        <callback name="conn_to_close" c:type="conn_to_close">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="obj" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="conn_closed">
        <callback name="conn_closed" c:type="conn_closed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="obj" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="dsn_changed">
        <callback name="dsn_changed" c:type="dsn_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="obj" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="transaction_status_changed">
        <callback name="transaction_status_changed"
                  c:type="transaction_status_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="obj" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ConnectionError"
                 c:type="GdaConnectionError"
                 glib:error-quark="gda_connection_error_quark">
      <member name="dsn_not_found_error"
              value="0"
              c:identifier="GDA_CONNECTION_DSN_NOT_FOUND_ERROR"/>
      <member name="provider_not_found_error"
              value="1"
              c:identifier="GDA_CONNECTION_PROVIDER_NOT_FOUND_ERROR"/>
      <member name="provider_error"
              value="2"
              c:identifier="GDA_CONNECTION_PROVIDER_ERROR"/>
      <member name="no_cnc_spec_error"
              value="3"
              c:identifier="GDA_CONNECTION_NO_CNC_SPEC_ERROR"/>
      <member name="no_provider_spec_error"
              value="4"
              c:identifier="GDA_CONNECTION_NO_PROVIDER_SPEC_ERROR"/>
      <member name="open_error"
              value="5"
              c:identifier="GDA_CONNECTION_OPEN_ERROR"/>
      <member name="statement_type_error"
              value="6"
              c:identifier="GDA_CONNECTION_STATEMENT_TYPE_ERROR"/>
      <member name="cant_lock_error"
              value="7"
              c:identifier="GDA_CONNECTION_CANT_LOCK_ERROR"/>
      <member name="task_not_found_error"
              value="8"
              c:identifier="GDA_CONNECTION_TASK_NOT_FOUND_ERROR"/>
      <member name="unsupported_threads_error"
              value="9"
              c:identifier="GDA_CONNECTION_UNSUPPORTED_THREADS_ERROR"/>
      <member name="closed_error"
              value="10"
              c:identifier="GDA_CONNECTION_CLOSED_ERROR"/>
    </enumeration>
    <class name="ConnectionEvent"
           c:type="GdaConnectionEvent"
           parent="GObject.Object"
           glib:type-name="GdaConnectionEvent"
           glib:get-type="gda_connection_event_get_type"
           glib:type-struct="ConnectionEventClass">
      <constructor name="new" c:identifier="gda_connection_event_new">
        <doc xml:whitespace="preserve">Creates a new uninitialized event object. This class is used for communicating
events from the different providers to the clients.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">the event object.</doc>
          <type name="ConnectionEvent" c:type="GdaConnectionEvent*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:whitespace="preserve">the type of event</doc>
            <type name="ConnectionEventType" c:type="GdaConnectionEventType"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_event_type"
              c:identifier="gda_connection_event_set_event_type">
        <doc xml:whitespace="preserve">Sets @event's severity (from a simple notice to a fatal event)
This function should not be called directly.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:whitespace="preserve">the severity of the event</doc>
            <type name="ConnectionEventType" c:type="GdaConnectionEventType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_event_type"
              c:identifier="gda_connection_event_get_event_type">
        <doc xml:whitespace="preserve">Get @event's severity (from a simple notice to a fatal event)</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">the event type</doc>
          <type name="ConnectionEventType" c:type="GdaConnectionEventType"/>
        </return-value>
      </method>
      <method name="get_description"
              c:identifier="gda_connection_event_get_description">
        <doc xml:whitespace="preserve">Get the description of the event. Note that is @event's type is GDA_CONNECTION_EVENT_COMMAND,
the the description is the SQL of the command.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">@event's description.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_description"
              c:identifier="gda_connection_event_set_description">
        <doc xml:whitespace="preserve">Sets @event's @description. This function should not be called directly.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="description" transfer-ownership="none">
            <doc xml:whitespace="preserve">a description.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_code" c:identifier="gda_connection_event_get_code">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">@event's code (the code is specific to the provider being used)</doc>
          <type name="long" c:type="glong"/>
        </return-value>
      </method>
      <method name="set_code" c:identifier="gda_connection_event_set_code">
        <doc xml:whitespace="preserve">If you want to have a common understanding of the event codes, use
gda_connection_event_get_gda_code() instead.
This function should not be called directly</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="code" transfer-ownership="none">
            <doc xml:whitespace="preserve">a code.</doc>
            <type name="long" c:type="glong"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_gda_code"
              c:identifier="gda_connection_event_get_gda_code">
        <doc xml:whitespace="preserve">Retrieve the code associated to @event.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">the #GdaConnectionEventCode event's code</doc>
          <type name="ConnectionEventCode" c:type="GdaConnectionEventCode"/>
        </return-value>
      </method>
      <method name="set_gda_code"
              c:identifier="gda_connection_event_set_gda_code">
        <doc xml:whitespace="preserve">library. If you want to specify the corresponding provider specific code,
use gda_connection_event_get_code() or gda_connection_event_get_sqlstate() instead.
This function should not be called directly</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="code" transfer-ownership="none">
            <doc xml:whitespace="preserve">a code</doc>
            <type name="ConnectionEventCode" c:type="GdaConnectionEventCode"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_source" c:identifier="gda_connection_event_get_source">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">@event's source.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_source" c:identifier="gda_connection_event_set_source">
        <doc xml:whitespace="preserve">Sets @event's @source; this function should not be called directly</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <doc xml:whitespace="preserve">a source.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sqlstate"
              c:identifier="gda_connection_event_get_sqlstate">
        <doc xml:whitespace="preserve">Get the SQLSTATE value of @event. Even though the SQLSTATE values are specified by ANSI SQL and ODBC,
consult each DBMS for the possible values. However, the "00000" (success) value means that there is no error,
and the "HY000" (general error) value means an error but no better error code available.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">@event's SQL state.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_sqlstate"
              c:identifier="gda_connection_event_set_sqlstate">
        <doc xml:whitespace="preserve">Changes the SQLSTATE code of @event, this function should not be called directly
Sets @event's SQL state.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="sqlstate" transfer-ownership="none">
            <doc xml:whitespace="preserve">SQL state.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="type" writable="1" transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ConnectionEventPrivate"
              c:type="GdaConnectionEventPrivate*"/>
      </field>
    </class>
    <record name="ConnectionEventClass"
            c:type="GdaConnectionEventClass"
            glib:is-gtype-struct-for="ConnectionEvent">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ConnectionEventCode" c:type="GdaConnectionEventCode">
      <member name="constraint_violation"
              value="0"
              c:identifier="GDA_CONNECTION_EVENT_CODE_CONSTRAINT_VIOLATION"/>
      <member name="restrict_violation"
              value="1"
              c:identifier="GDA_CONNECTION_EVENT_CODE_RESTRICT_VIOLATION"/>
      <member name="not_null_violation"
              value="2"
              c:identifier="GDA_CONNECTION_EVENT_CODE_NOT_NULL_VIOLATION"/>
      <member name="foreign_key_violation"
              value="3"
              c:identifier="GDA_CONNECTION_EVENT_CODE_FOREIGN_KEY_VIOLATION"/>
      <member name="unique_violation"
              value="4"
              c:identifier="GDA_CONNECTION_EVENT_CODE_UNIQUE_VIOLATION"/>
      <member name="check_violation"
              value="5"
              c:identifier="GDA_CONNECTION_EVENT_CODE_CHECK_VIOLATION"/>
      <member name="insufficient_privileges"
              value="6"
              c:identifier="GDA_CONNECTION_EVENT_CODE_INSUFFICIENT_PRIVILEGES"/>
      <member name="undefined_column"
              value="7"
              c:identifier="GDA_CONNECTION_EVENT_CODE_UNDEFINED_COLUMN"/>
      <member name="undefined_function"
              value="8"
              c:identifier="GDA_CONNECTION_EVENT_CODE_UNDEFINED_FUNCTION"/>
      <member name="undefined_table"
              value="9"
              c:identifier="GDA_CONNECTION_EVENT_CODE_UNDEFINED_TABLE"/>
      <member name="duplicate_column"
              value="10"
              c:identifier="GDA_CONNECTION_EVENT_CODE_DUPLICATE_COLUMN"/>
      <member name="duplicate_database"
              value="11"
              c:identifier="GDA_CONNECTION_EVENT_CODE_DUPLICATE_DATABASE"/>
      <member name="duplicate_function"
              value="12"
              c:identifier="GDA_CONNECTION_EVENT_CODE_DUPLICATE_FUNCTION"/>
      <member name="duplicate_schema"
              value="13"
              c:identifier="GDA_CONNECTION_EVENT_CODE_DUPLICATE_SCHEMA"/>
      <member name="duplicate_table"
              value="14"
              c:identifier="GDA_CONNECTION_EVENT_CODE_DUPLICATE_TABLE"/>
      <member name="duplicate_alias"
              value="15"
              c:identifier="GDA_CONNECTION_EVENT_CODE_DUPLICATE_ALIAS"/>
      <member name="duplicate_object"
              value="16"
              c:identifier="GDA_CONNECTION_EVENT_CODE_DUPLICATE_OBJECT"/>
      <member name="syntax_error"
              value="17"
              c:identifier="GDA_CONNECTION_EVENT_CODE_SYNTAX_ERROR"/>
      <member name="unknown"
              value="18"
              c:identifier="GDA_CONNECTION_EVENT_CODE_UNKNOWN"/>
    </enumeration>
    <record name="ConnectionEventPrivate" c:type="GdaConnectionEventPrivate">
    </record>
    <enumeration name="ConnectionEventType" c:type="GdaConnectionEventType">
      <member name="notice"
              value="0"
              c:identifier="GDA_CONNECTION_EVENT_NOTICE"/>
      <member name="warning"
              value="1"
              c:identifier="GDA_CONNECTION_EVENT_WARNING"/>
      <member name="error"
              value="2"
              c:identifier="GDA_CONNECTION_EVENT_ERROR"/>
      <member name="command"
              value="3"
              c:identifier="GDA_CONNECTION_EVENT_COMMAND"/>
    </enumeration>
    <enumeration name="ConnectionFeature" c:type="GdaConnectionFeature">
      <member name="aggregates"
              value="0"
              c:identifier="GDA_CONNECTION_FEATURE_AGGREGATES"/>
      <member name="blobs"
              value="1"
              c:identifier="GDA_CONNECTION_FEATURE_BLOBS"/>
      <member name="indexes"
              value="2"
              c:identifier="GDA_CONNECTION_FEATURE_INDEXES"/>
      <member name="inheritance"
              value="3"
              c:identifier="GDA_CONNECTION_FEATURE_INHERITANCE"/>
      <member name="namespaces"
              value="4"
              c:identifier="GDA_CONNECTION_FEATURE_NAMESPACES"/>
      <member name="procedures"
              value="5"
              c:identifier="GDA_CONNECTION_FEATURE_PROCEDURES"/>
      <member name="sequences"
              value="6"
              c:identifier="GDA_CONNECTION_FEATURE_SEQUENCES"/>
      <member name="sql" value="7" c:identifier="GDA_CONNECTION_FEATURE_SQL"/>
      <member name="transactions"
              value="8"
              c:identifier="GDA_CONNECTION_FEATURE_TRANSACTIONS"/>
      <member name="savepoints"
              value="9"
              c:identifier="GDA_CONNECTION_FEATURE_SAVEPOINTS"/>
      <member name="savepoints_remove"
              value="10"
              c:identifier="GDA_CONNECTION_FEATURE_SAVEPOINTS_REMOVE"/>
      <member name="triggers"
              value="11"
              c:identifier="GDA_CONNECTION_FEATURE_TRIGGERS"/>
      <member name="updatable_cursor"
              value="12"
              c:identifier="GDA_CONNECTION_FEATURE_UPDATABLE_CURSOR"/>
      <member name="users"
              value="13"
              c:identifier="GDA_CONNECTION_FEATURE_USERS"/>
      <member name="views"
              value="14"
              c:identifier="GDA_CONNECTION_FEATURE_VIEWS"/>
      <member name="xa_transactions"
              value="15"
              c:identifier="GDA_CONNECTION_FEATURE_XA_TRANSACTIONS"/>
      <member name="multi_threading"
              value="16"
              c:identifier="GDA_CONNECTION_FEATURE_MULTI_THREADING"/>
      <member name="last"
              value="17"
              c:identifier="GDA_CONNECTION_FEATURE_LAST"/>
    </enumeration>
    <enumeration name="ConnectionMetaType" c:type="GdaConnectionMetaType">
      <doc xml:whitespace="preserve">Used with gda_connection_get_meta_store_data() to describe what meta data to extract from
a connection's associated #GdaMetaStore.</doc>
      <member name="namespaces"
              value="0"
              c:identifier="GDA_CONNECTION_META_NAMESPACES"/>
      <member name="types" value="1" c:identifier="GDA_CONNECTION_META_TYPES"/>
      <member name="tables"
              value="2"
              c:identifier="GDA_CONNECTION_META_TABLES"/>
      <member name="views" value="3" c:identifier="GDA_CONNECTION_META_VIEWS"/>
      <member name="fields"
              value="4"
              c:identifier="GDA_CONNECTION_META_FIELDS"/>
      <member name="indexes"
              value="5"
              c:identifier="GDA_CONNECTION_META_INDEXES"/>
    </enumeration>
    <bitfield name="ConnectionOptions" c:type="GdaConnectionOptions">
      <doc xml:whitespace="preserve">Specifies some aspects of a connection when opening it.
Additional information about the GDA_CONNECTION_OPTIONS_SQL_IDENTIFIERS_CASE_SENSITIVE flag:
&lt;itemizedlist&gt;
&lt;listitem&gt;&lt;para&gt;For example without this flag, if the table
name specified in a #GdaServerOperation to create a table is
&lt;emphasis&gt;MyTable&lt;/emphasis&gt;, then usually the database will create a table named
&lt;emphasis&gt;mytable&lt;/emphasis&gt;, whereas with this flag, the table will be created
as &lt;emphasis&gt;MyTable&lt;/emphasis&gt; (note that in the end the database may still decide
to name the table &lt;emphasis&gt;mytable&lt;/emphasis&gt; or differently if it can't do
otherwise).&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;Libgda will not apply this rule when parsing SQL code, the SQL code being parsed
has to be conform to the database it will be used with&lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;
Additional information about the GDA_CONNECTION_OPTIONS_THREAD_SAFE and GDA_CONNECTION_OPTIONS_THREAD_ISOLATED flags:
The GDA_CONNECTION_OPTIONS_THREAD_SAFE flag specifies that it has to be able to use the returned connection object from
several threads at once (locking is ensured by the #GdaConnection itself). Depending on the database provider's
implementation and on the native libraries it uses, the "normal" connection object might not respect this requirement,
and in this case a specific thread is started and used as the unique thread which will manipulate the actual connection,
while a "wrapper connection" is actually returned and used by the caller (that wrapper connection passes method calls
from the calling thread to the actual connection's specific thread, and gets the results back).
The GDA_CONNECTION_OPTIONS_THREAD_ISOLATED forces using a specific thread and a "wrapper connection" even if the
"normal" connection would itself be thread safe; this is usefull for example to be sure the asynchronous API can
always be used (see gda_connection_async_statement_execute()).
Having a specific thread and a "wrapper connection" definitely has an impact on the performances (because it involves
messages passing between threads for every method call), so using the
GDA_CONNECTION_OPTIONS_THREAD_SAFE or GDA_CONNECTION_OPTIONS_THREAD_ISOLATED flags should be carefully considered.</doc>
      <member name="none"
              value="0"
              c:identifier="GDA_CONNECTION_OPTIONS_NONE"/>
      <member name="read_only"
              value="1"
              c:identifier="GDA_CONNECTION_OPTIONS_READ_ONLY"/>
      <member name="sql_identifiers_case_sensitive"
              value="2"
              c:identifier="GDA_CONNECTION_OPTIONS_SQL_IDENTIFIERS_CASE_SENSITIVE"/>
      <member name="thread_safe"
              value="4"
              c:identifier="GDA_CONNECTION_OPTIONS_THREAD_SAFE"/>
      <member name="thread_isolated"
              value="8"
              c:identifier="GDA_CONNECTION_OPTIONS_THREAD_ISOLATED"/>
    </bitfield>
    <record name="ConnectionPrivate" c:type="GdaConnectionPrivate">
    </record>
    <enumeration name="ConnectionSchema" c:type="GdaConnectionSchema">
      <member name="aggregates"
              value="0"
              c:identifier="GDA_CONNECTION_SCHEMA_AGGREGATES"/>
      <member name="databases"
              value="1"
              c:identifier="GDA_CONNECTION_SCHEMA_DATABASES"/>
      <member name="fields"
              value="2"
              c:identifier="GDA_CONNECTION_SCHEMA_FIELDS"/>
      <member name="indexes"
              value="3"
              c:identifier="GDA_CONNECTION_SCHEMA_INDEXES"/>
      <member name="languages"
              value="4"
              c:identifier="GDA_CONNECTION_SCHEMA_LANGUAGES"/>
      <member name="namespaces"
              value="5"
              c:identifier="GDA_CONNECTION_SCHEMA_NAMESPACES"/>
      <member name="parent_tables"
              value="6"
              c:identifier="GDA_CONNECTION_SCHEMA_PARENT_TABLES"/>
      <member name="procedures"
              value="7"
              c:identifier="GDA_CONNECTION_SCHEMA_PROCEDURES"/>
      <member name="sequences"
              value="8"
              c:identifier="GDA_CONNECTION_SCHEMA_SEQUENCES"/>
      <member name="tables"
              value="9"
              c:identifier="GDA_CONNECTION_SCHEMA_TABLES"/>
      <member name="triggers"
              value="10"
              c:identifier="GDA_CONNECTION_SCHEMA_TRIGGERS"/>
      <member name="types"
              value="11"
              c:identifier="GDA_CONNECTION_SCHEMA_TYPES"/>
      <member name="users"
              value="12"
              c:identifier="GDA_CONNECTION_SCHEMA_USERS"/>
      <member name="views"
              value="13"
              c:identifier="GDA_CONNECTION_SCHEMA_VIEWS"/>
      <member name="constraints"
              value="14"
              c:identifier="GDA_CONNECTION_SCHEMA_CONSTRAINTS"/>
      <member name="table_contents"
              value="15"
              c:identifier="GDA_CONNECTION_SCHEMA_TABLE_CONTENTS"/>
    </enumeration>
    <class name="DataAccessWrapper"
           c:type="GdaDataAccessWrapper"
           parent="GObject.Object"
           glib:type-name="GdaDataAccessWrapper"
           glib:get-type="gda_data_access_wrapper_get_type"
           glib:type-struct="DataAccessWrapperClass">
      <implements name="DataModel"/>
      <constructor name="new" c:identifier="gda_data_access_wrapper_new">
        <doc xml:whitespace="preserve">Creates a new #GdaDataModel object which buffers the rows of @model. This object is useful
only if @model can only be accessed using cursor based method.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a pointer to the newly created #GdaDataModel.</doc>
          <type name="DataAccessWrapper" c:type="GdaDataModel*"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaDataModel</doc>
            <type name="DataModel" c:type="GdaDataModel*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="model"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="DataModel" c:type="GdaDataModel"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="DataAccessWrapperPrivate"
              c:type="GdaDataAccessWrapperPrivate*"/>
      </field>
    </class>
    <record name="DataAccessWrapperClass"
            c:type="GdaDataAccessWrapperClass"
            glib:is-gtype-struct-for="DataAccessWrapper">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DataAccessWrapperPrivate"
            c:type="GdaDataAccessWrapperPrivate">
    </record>
    <class name="DataComparator"
           c:type="GdaDataComparator"
           parent="GObject.Object"
           glib:type-name="GdaDataComparator"
           glib:get-type="gda_data_comparator_get_type"
           glib:type-struct="DataComparatorClass">
      <constructor name="new" c:identifier="gda_data_comparator_new">
        <doc xml:whitespace="preserve">all the computed differences (as #GdaDiff structures) to @old_model, the resulting data model
should have the same contents as @new_model.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #GdaDataComparator object</doc>
          <type name="DataComparator" c:type="GObject*"/>
        </return-value>
        <parameters>
          <parameter name="old_model" transfer-ownership="none">
            <doc xml:whitespace="preserve">Data model to which the modifications should be applied</doc>
            <type name="DataModel" c:type="GdaDataModel*"/>
          </parameter>
          <parameter name="new_model" transfer-ownership="none">
            <doc xml:whitespace="preserve">Target data model.</doc>
            <type name="DataModel" c:type="GdaDataModel*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_key_columns"
              c:identifier="gda_data_comparator_set_key_columns">
        <doc xml:whitespace="preserve">Defines the columns which will be used as a key when searching data. This is not mandatory but
will speed things up as less data will be processed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="col_numbers" transfer-ownership="none">
            <doc xml:whitespace="preserve">an array of @nb_cols values</doc>
            <array length="2" c:type="gint*">
              <type name="int"/>
            </array>
          </parameter>
          <parameter name="nb_cols" transfer-ownership="none">
            <doc xml:whitespace="preserve">the size of the @col_numbers array</doc>
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="compute_diff"
              c:identifier="gda_data_comparator_compute_diff"
              throws="1">
        <doc xml:whitespace="preserve">Actually computes the differences between the data models for which @comp is defined. 
For each difference computed, stored in a #GdaDiff structure, the "diff-computed" signal is emitted.
If one connects to this signal and returns FALSE in the signal handler, then computing differences will be
stopped and an error will be returned.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if all the differences have been sucessfully computed, and FALSE if an error occurred</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_n_diffs"
              c:identifier="gda_data_comparator_get_n_diffs">
        <doc xml:whitespace="preserve">Get the number of differences as computed by the last time gda_data_comparator_compute_diff() was called.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the number of computed differences</doc>
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_diff" c:identifier="gda_data_comparator_get_diff">
        <doc xml:whitespace="preserve">Get a pointer to the #GdaDiff structure representing the difference which number is @pos</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a pointer to a #GdaDiff, or %NULL if @pos is invalid</doc>
          <type name="Diff" c:type="GdaDiff*"/>
        </return-value>
        <parameters>
          <parameter name="pos" transfer-ownership="none">
            <doc xml:whitespace="preserve">the requested difference number (starting at 0)</doc>
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="new-model" writable="1" transfer-ownership="none">
        <type name="DataModel" c:type="GdaDataModel"/>
      </property>
      <property name="old-model" writable="1" transfer-ownership="none">
        <type name="DataModel" c:type="GdaDataModel"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="DataComparatorPrivate" c:type="GdaDataComparatorPrivate*"/>
      </field>
      <glib:signal name="diff-computed">
        <return-value transfer-ownership="full">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DataComparatorClass"
            c:type="GdaDataComparatorClass"
            glib:is-gtype-struct-for="DataComparator">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="diff_computed">
        <callback name="diff_computed" c:type="diff_computed">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="comp" transfer-ownership="none">
              <type name="DataComparator" c:type="GdaDataComparator*"/>
            </parameter>
            <parameter name="diff" transfer-ownership="none">
              <type name="Diff" c:type="GdaDiff*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="DataComparatorError"
                 c:type="GdaDataComparatorError"
                 glib:error-quark="gda_data_comparator_error_quark">
      <member name="missing_data_model_error"
              value="0"
              c:identifier="GDA_DATA_COMPARATOR_MISSING_DATA_MODEL_ERROR"/>
      <member name="column_types_mismatch_error"
              value="1"
              c:identifier="GDA_DATA_COMPARATOR_COLUMN_TYPES_MISMATCH_ERROR"/>
      <member name="model_access_error"
              value="2"
              c:identifier="GDA_DATA_COMPARATOR_MODEL_ACCESS_ERROR"/>
      <member name="user_cancelled_error"
              value="3"
              c:identifier="GDA_DATA_COMPARATOR_USER_CANCELLED_ERROR"/>
    </enumeration>
    <record name="DataComparatorPrivate" c:type="GdaDataComparatorPrivate">
    </record>
    <interface name="DataHandler"
               c:type="GdaDataHandler"
               glib:type-name="GdaDataHandler"
               glib:get-type="gda_data_handler_get_type"
               glib:type-struct="DataHandlerIface">
      <virtual-method name="get_sql_from_value" invoker="get_sql_from_value">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_str_from_value" invoker="get_str_from_value">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_value_from_sql" invoker="get_value_from_sql">
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="sql" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_value_from_str" invoker="get_value_from_str">
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_sane_init_value" invoker="get_sane_init_value">
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="accepts_g_type" invoker="accepts_g_type">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_descr" invoker="get_descr">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <method name="get_sql_from_value"
              c:identifier="gda_data_handler_get_sql_from_value">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_str_from_value"
              c:identifier="gda_data_handler_get_str_from_value">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_from_sql"
              c:identifier="gda_data_handler_get_value_from_sql">
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="sql" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_from_str"
              c:identifier="gda_data_handler_get_value_from_str">
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sane_init_value"
              c:identifier="gda_data_handler_get_sane_init_value">
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="accepts_g_type"
              c:identifier="gda_data_handler_accepts_g_type">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_descr" c:identifier="gda_data_handler_get_descr">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
    </interface>
    <record name="DataHandlerIface"
            c:type="GdaDataHandlerIface"
            glib:is-gtype-struct-for="DataHandler">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_sql_from_value">
        <callback name="get_sql_from_value" c:type="get_sql_from_value">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="dh" transfer-ownership="none">
              <type name="DataHandler" c:type="GdaDataHandler*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_str_from_value">
        <callback name="get_str_from_value" c:type="get_str_from_value">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="dh" transfer-ownership="none">
              <type name="DataHandler" c:type="GdaDataHandler*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_value_from_sql">
        <callback name="get_value_from_sql" c:type="get_value_from_sql">
          <return-value transfer-ownership="full">
            <type name="GObject.Value" c:type="GValue*"/>
          </return-value>
          <parameters>
            <parameter name="dh" transfer-ownership="none">
              <type name="DataHandler" c:type="GdaDataHandler*"/>
            </parameter>
            <parameter name="sql" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="GType" c:type="GType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_value_from_str">
        <callback name="get_value_from_str" c:type="get_value_from_str">
          <return-value transfer-ownership="full">
            <type name="GObject.Value" c:type="GValue*"/>
          </return-value>
          <parameters>
            <parameter name="dh" transfer-ownership="none">
              <type name="DataHandler" c:type="GdaDataHandler*"/>
            </parameter>
            <parameter name="str" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="GType" c:type="GType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_sane_init_value">
        <callback name="get_sane_init_value" c:type="get_sane_init_value">
          <return-value transfer-ownership="full">
            <type name="GObject.Value" c:type="GValue*"/>
          </return-value>
          <parameters>
            <parameter name="dh" transfer-ownership="none">
              <type name="DataHandler" c:type="GdaDataHandler*"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="GType" c:type="GType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="accepts_g_type">
        <callback name="accepts_g_type" c:type="accepts_g_type">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="dh" transfer-ownership="none">
              <type name="DataHandler" c:type="GdaDataHandler*"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="GType" c:type="GType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_descr">
        <callback name="get_descr" c:type="get_descr">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="dh" transfer-ownership="none">
              <type name="DataHandler" c:type="GdaDataHandler*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="DataMetaWrapper" c:type="GdaDataMetaWrapper">
      <field name="object" writable="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" writable="1">
        <type name="DataMetaWrapperPrivate"
              c:type="GdaDataMetaWrapperPrivate*"/>
      </field>
    </record>
    <record name="DataMetaWrapperClass" c:type="GdaDataMetaWrapperClass">
      <field name="parent_class" writable="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved2">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved3">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved4">
        <type name="any" c:type="pointer"/>
      </field>
    </record>
    <enumeration name="DataMetaWrapperMode" c:type="GdaDataMetaWrapperMode">
      <member name="lc"
              value="0"
              c:identifier="GDA_DATA_META_WRAPPER_MODE_LC"/>
      <member name="uc"
              value="1"
              c:identifier="GDA_DATA_META_WRAPPER_MODE_UC"/>
    </enumeration>
    <record name="DataMetaWrapperPrivate" c:type="GdaDataMetaWrapperPrivate">
    </record>
    <interface name="DataModel"
               c:type="GdaDataModel"
               glib:type-name="GdaDataModel"
               glib:get-type="gda_data_model_get_type"
               glib:type-struct="DataModelIface">
      <virtual-method name="i_get_n_rows">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="i_get_n_columns">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="i_describe_column">
        <return-value transfer-ownership="full">
          <type name="Column" c:type="GdaColumn*"/>
        </return-value>
        <parameters>
          <parameter name="col" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="i_get_access_flags">
        <return-value transfer-ownership="full">
          <type name="DataModelAccessFlags" c:type="GdaDataModelAccessFlags"/>
        </return-value>
      </virtual-method>
      <virtual-method name="i_get_value_at" throws="1">
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="col" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="i_get_attributes_at">
        <return-value transfer-ownership="full">
          <type name="ValueAttribute" c:type="GdaValueAttribute"/>
        </return-value>
        <parameters>
          <parameter name="col" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="i_create_iter">
        <return-value transfer-ownership="full">
          <type name="DataModelIter" c:type="GdaDataModelIter*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="i_iter_at_row">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="iter" transfer-ownership="none">
            <type name="DataModelIter" c:type="GdaDataModelIter*"/>
          </parameter>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="i_iter_next">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="iter" transfer-ownership="none">
            <type name="DataModelIter" c:type="GdaDataModelIter*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="i_iter_prev">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="iter" transfer-ownership="none">
            <type name="DataModelIter" c:type="GdaDataModelIter*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="i_set_value_at" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="col" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="i_iter_set_value" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="iter" transfer-ownership="none">
            <type name="DataModelIter" c:type="GdaDataModelIter*"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="i_set_values" introspectable="0" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="values" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="i_append_values" introspectable="0" throws="1">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="values" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="i_append_row" throws="1">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="i_remove_row" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="i_find_row">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="values" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="cols_index"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="i_set_notify">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="do_notify_changes" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="i_get_notify">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="i_send_hint">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="hint" transfer-ownership="none">
            <type name="DataModelHint" c:type="GdaDataModelHint"/>
          </parameter>
          <parameter name="hint_value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_access_flags"
              c:identifier="gda_data_model_get_access_flags">
        <doc xml:whitespace="preserve">Get the attributes of @model such as how to access the data it contains if it's modifiable, etc.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">an ORed value of #GdaDataModelAccessFlags flags</doc>
          <type name="DataModelAccessFlags" c:type="GdaDataModelAccessFlags"/>
        </return-value>
      </method>
      <method name="get_n_rows" c:identifier="gda_data_model_get_n_rows">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the number of rows in the given data model, or -1 if the number of rows is not known</doc>
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_n_columns" c:identifier="gda_data_model_get_n_columns">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the number of columns in the given data model.</doc>
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="describe_column"
              c:identifier="gda_data_model_describe_column">
        <doc xml:whitespace="preserve">Queries the underlying data model implementation for a description
of a given column. That description is returned in the form of
a #GdaColumn structure, which contains all the information
about the given column in the data model.
and should not be destroyed; any modification will affect the whole data model.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the description of the column.</doc>
          <type name="Column" c:type="GdaColumn*"/>
        </return-value>
        <parameters>
          <parameter name="col" transfer-ownership="none">
            <doc xml:whitespace="preserve">column number.</doc>
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_column_index"
              c:identifier="gda_data_model_get_column_index">
        <doc xml:whitespace="preserve">Get the index of the first column named @name in @model.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the column index, or -1 if no column named @name was found</doc>
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:whitespace="preserve">a column name</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_column_name"
              c:identifier="gda_data_model_get_column_name"
              version="3.2">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the name for the given column in a data model object.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="col" transfer-ownership="none">
            <doc xml:whitespace="preserve">column number.</doc>
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_column_name"
              c:identifier="gda_data_model_set_column_name"
              version="3.2">
        <doc xml:whitespace="preserve">Sets the @name of the given @col in @model, and if its title is not set, also sets the
title to @name.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="col" transfer-ownership="none">
            <doc xml:whitespace="preserve">column number</doc>
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:whitespace="preserve">name for the given column.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_column_title"
              c:identifier="gda_data_model_get_column_title">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the title for the given column in a data model object.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="col" transfer-ownership="none">
            <doc xml:whitespace="preserve">column number.</doc>
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_column_title"
              c:identifier="gda_data_model_set_column_title">
        <doc xml:whitespace="preserve">Sets the @title of the given @col in @model.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="col" transfer-ownership="none">
            <doc xml:whitespace="preserve">column number</doc>
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:whitespace="preserve">title for the given column.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_at"
              c:identifier="gda_data_model_get_value_at"
              throws="1">
        <doc xml:whitespace="preserve">Retrieves the data stored in the given position (identified by
the @col and @row parameters) on a data model.
This is the main function for accessing data in a model which allows random access to its data.
To access data in a data model using a cursor, use a #GdaDataModelIter object, obtained using
gda_data_model_create_iter().
occur if you do so).
which means if you want to keep the value, a copy must be made, however it will remain valid
as long as the only Libgda usage is calling gda_data_model_get_value_at() for different values
of the same row.
If you want to modify a value stored in a #GdaDataModel, use the gda_data_model_set_value_at() or 
gda_data_model_set_values() methods.
position, or %NULL on error (out-of-bound position, etc).</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GValue containing the value stored in the given</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="col" transfer-ownership="none">
            <doc xml:whitespace="preserve">a valid column number.</doc>
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:whitespace="preserve">a valid row number.</doc>
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_typed_value_at"
              c:identifier="gda_data_model_get_typed_value_at"
              throws="1">
        <doc xml:whitespace="preserve">This method is similar to gda_data_model_get_value_at(), except that it also allows one to specify the expected
#GType of the value to get: if the data model returned a #GValue of a type different than the expected one, then
this method returns %NULL and an error code.
position, or %NULL on error (out-of-bound position, wrong data type, etc).</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GValue containing the value stored in the given</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="col" transfer-ownership="none">
            <doc xml:whitespace="preserve">a valid column number.</doc>
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:whitespace="preserve">a valid row number.</doc>
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="expected_type" transfer-ownership="none">
            <doc xml:whitespace="preserve">the expected data type of the returned value</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="nullok" transfer-ownership="none">
            <doc xml:whitespace="preserve">if TRUE, then NULL values (value of type %GDA_TYPE_NULL) will not generate any error</doc>
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attributes_at"
              c:identifier="gda_data_model_get_attributes_at">
        <doc xml:whitespace="preserve">Get the attributes of the value stored at (row, col) in @model, which
is an ORed value of #GdaValueAttribute flags. As a special case, if
if a row was added to @model.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the attributes as an ORed value of #GdaValueAttribute</doc>
          <type name="ValueAttribute" c:type="GdaValueAttribute"/>
        </return-value>
        <parameters>
          <parameter name="col" transfer-ownership="none">
            <doc xml:whitespace="preserve">a valid column number</doc>
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:whitespace="preserve">a valid row number, or -1</doc>
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_iter" c:identifier="gda_data_model_create_iter">
        <doc xml:whitespace="preserve">Creates a new iterator object #GdaDataModelIter object which can be used to iterate through
rows in @model.
Depending on the data model's implementation, a new #GdaDataModelIter object may be created,
or a reference to an already existing #GdaDataModelIter may be returned.
If a new #GdaDataModelIter is created, then the row it represents is undefined.
For models which can be accessed 
randomly, any row can be set using gda_data_model_iter_move_to_row(), 
and for models which are accessible sequentially only then use
gda_data_model_iter_move_next() (and gda_data_model_iter_move_prev() if
supported).</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #GdaDataModelIter object, or %NULL if an error occurred</doc>
          <type name="DataModelIter" c:type="GdaDataModelIter*"/>
        </return-value>
      </method>
      <method name="freeze" c:identifier="gda_data_model_freeze">
        <doc xml:whitespace="preserve">Disables notifications of changes on the given data model. To
re-enable notifications again, you should call the
#gda_data_model_thaw function.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="thaw" c:identifier="gda_data_model_thaw">
        <doc xml:whitespace="preserve">Re-enables notifications of changes on the given data model.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set_value_at"
              c:identifier="gda_data_model_set_value_at"
              throws="1">
        <doc xml:whitespace="preserve">Modifies a value in @model, at (@col, @row).</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if the value in the data model has been updated and no error occurred</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="col" transfer-ownership="none">
            <doc xml:whitespace="preserve">column number.</doc>
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:whitespace="preserve">row number.</doc>
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GValue (not %NULL)</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_values"
              c:identifier="gda_data_model_set_values"
              throws="1">
        <doc xml:whitespace="preserve">In a similar way to gda_data_model_set_value_at(), this method modifies a data model's contents
by setting several values at once.
If any value in @values is actually %NULL, then the value in the corresponding column is left
unchanged.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if the value in the data model has been updated and no error occurred</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <doc xml:whitespace="preserve">row number.</doc>
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:whitespace="preserve">a list of #GValue, one for at most the number of columns of @model</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="GObject.Value"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="append_row"
              c:identifier="gda_data_model_append_row"
              throws="1">
        <doc xml:whitespace="preserve">Appends a row to the data model (the new row will possibly have NULL values for all columns,
or some other values depending on the data model implementation)</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the number of the added row, or -1 if an error occurred</doc>
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="append_values"
              c:identifier="gda_data_model_append_values"
              throws="1">
        <doc xml:whitespace="preserve">Appends a row to the given data model. If any value in @values is actually %NULL, then 
it is considered as a default value.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the number of the added row, or -1 if an error occurred</doc>
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="values" transfer-ownership="none">
            <doc xml:whitespace="preserve">#GList of #GValue* representing the row to add.  The length must match model's column count.  These #GValue are value-copied (the user is still responsible for freeing them).</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="GObject.Value"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="remove_row"
              c:identifier="gda_data_model_remove_row"
              throws="1">
        <doc xml:whitespace="preserve">Removes a row from the data model.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE if successful, %FALSE otherwise.</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <doc xml:whitespace="preserve">the row number to be removed.</doc>
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_row_from_values"
              c:identifier="gda_data_model_get_row_from_values">
        <doc xml:whitespace="preserve">Returns the first row where all the values in @values at the columns identified at</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the requested row number, of -1 if not found</doc>
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="values" transfer-ownership="none">
            <doc xml:whitespace="preserve">a list of #GValue values (no %NULL is allowed)</doc>
            <type name="GLib.SList" c:type="GSList*">
              <type name="Gobject.Value"/>
            </type>
          </parameter>
          <parameter name="cols_index" transfer-ownership="none">
            <doc xml:whitespace="preserve">an array of #gint containing the column number to match each value of @values</doc>
            <array c:type="gint*">
              <type name="int"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="send_hint" c:identifier="gda_data_model_send_hint">
        <doc xml:whitespace="preserve">Sends a hint to the data model. The hint may or may not be handled by the data
model, depending on its implementation</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="hint" transfer-ownership="none">
            <doc xml:whitespace="preserve">a hint to send to the model</doc>
            <type name="DataModelHint" c:type="GdaDataModelHint"/>
          </parameter>
          <parameter name="hint_value" transfer-ownership="none">
            <doc xml:whitespace="preserve">an optional value to specify the hint, or %NULL</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="export_to_string"
              c:identifier="gda_data_model_export_to_string">
        <doc xml:whitespace="preserve">Exports data contained in @model to a string; the format is specified using the @format argument, see the
gda_data_model_export_to_file() documentation for more information about the @options argument (except for the
"OVERWRITE" option).</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new string.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <doc xml:whitespace="preserve">the format in which to export data</doc>
            <type name="DataModelIOFormat" c:type="GdaDataModelIOFormat"/>
          </parameter>
          <parameter name="cols" transfer-ownership="none">
            <doc xml:whitespace="preserve">an array containing which columns of @model will be exported, or %NULL for all columns</doc>
            <array length="3" c:type="gint*">
              <type name="int"/>
            </array>
          </parameter>
          <parameter name="nb_cols" transfer-ownership="none">
            <doc xml:whitespace="preserve">the number of columns in @cols</doc>
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="rows" transfer-ownership="none">
            <doc xml:whitespace="preserve">an array containing which rows of @model will be exported, or %NULL for all rows</doc>
            <array length="5" c:type="gint*">
              <type name="int"/>
            </array>
          </parameter>
          <parameter name="nb_rows" transfer-ownership="none">
            <doc xml:whitespace="preserve">the number of rows in @rows</doc>
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:whitespace="preserve">list of options for the export</doc>
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
        </parameters>
      </method>
      <method name="export_to_file"
              c:identifier="gda_data_model_export_to_file"
              throws="1">
        <doc xml:whitespace="preserve">Exports data contained in @model to the @file file; the format is specified using the @format argument.
Specifically, the parameters in the @options list can be:
&lt;itemizedlist&gt;
&lt;listitem&gt;&lt;para&gt;"SEPARATOR": a string value of which the first character is used as a separator in case of CSV export
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;"QUOTE": a string value of which the first character is used as a quote character in case of CSV export
&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;"FIELD_QUOTE": a boolean value which can be set to FALSE if no quote around the individual fields 
is requeted, in case of CSV export&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;"NAME": a string value used to name the exported data if the export format is XML&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;"OVERWRITE": a boolean value which tells if the file must be over-written if it already exists.
&lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if no error occurred</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <doc xml:whitespace="preserve">the format in which to export data</doc>
            <type name="DataModelIOFormat" c:type="GdaDataModelIOFormat"/>
          </parameter>
          <parameter name="file" transfer-ownership="none">
            <doc xml:whitespace="preserve">the filename to export to</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cols" transfer-ownership="none">
            <doc xml:whitespace="preserve">an array containing which columns of @model will be exported, or %NULL for all columns</doc>
            <array length="4" c:type="gint*">
              <type name="int"/>
            </array>
          </parameter>
          <parameter name="nb_cols" transfer-ownership="none">
            <doc xml:whitespace="preserve">the number of columns in @cols</doc>
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="rows" transfer-ownership="none">
            <doc xml:whitespace="preserve">an array containing which rows of @model will be exported, or %NULL for all rows</doc>
            <array length="6" c:type="gint*">
              <type name="int"/>
            </array>
          </parameter>
          <parameter name="nb_rows" transfer-ownership="none">
            <doc xml:whitespace="preserve">the number of rows in @rows</doc>
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:whitespace="preserve">list of options for the export</doc>
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
        </parameters>
      </method>
      <method name="import_from_model"
              c:identifier="gda_data_model_import_from_model"
              throws="1">
        <doc xml:whitespace="preserve">Copy the contents of the @from data model to the @to data model. The copy stops as soon as an error
orrurs.
The @cols_trans is a hash table for which keys are @to columns numbers and the values are
the corresponding column numbers in the @from data model. To set the values of a column in @to to NULL,
create an entry in the hash table with a negative value.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if no error occurred.</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="from" transfer-ownership="none">
            <doc xml:whitespace="preserve">the source #GdaDataModel</doc>
            <type name="DataModel" c:type="GdaDataModel*"/>
          </parameter>
          <parameter name="overwrite" transfer-ownership="none">
            <doc xml:whitespace="preserve">TRUE if @to is completely overwritten by @from's data, and FALSE if @from's data is appended to @to</doc>
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="cols_trans" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GHashTable for columns translating, or %NULL</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="int"/>
              <type name="int"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="import_from_string"
              c:identifier="gda_data_model_import_from_string"
              throws="1">
        <doc xml:whitespace="preserve">Loads the data from @string into @model.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if no error occurred.</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <doc xml:whitespace="preserve">the string to import data from</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cols_trans" transfer-ownership="none">
            <doc xml:whitespace="preserve">a hash table containing which columns of @model will be imported, or %NULL for all columns, see gda_data_model_import_from_model()</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="int"/>
              <type name="int"/>
            </type>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:whitespace="preserve">list of options for the export</doc>
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
        </parameters>
      </method>
      <method name="import_from_file"
              c:identifier="gda_data_model_import_from_file"
              throws="1">
        <doc xml:whitespace="preserve">Imports data contained in the @file file into @model; the format is detected.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if no error occurred</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file" transfer-ownership="none">
            <doc xml:whitespace="preserve">the filename to import from</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cols_trans" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GHashTable for columns translating, or %NULL, see gda_data_model_import_from_model()</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="int"/>
              <type name="int"/>
            </type>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:whitespace="preserve">list of options for the export</doc>
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dump_as_string"
              c:identifier="gda_data_model_dump_as_string">
        <doc xml:whitespace="preserve">Dumps a textual representation of the @model into a new string
The following environment variables can affect the resulting output:
&lt;itemizedlist&gt;
&lt;listitem&gt;&lt;para&gt;GDA_DATA_MODEL_DUMP_ROW_NUMBERS: if set, the first column of the output will contain row numbers&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;GDA_DATA_MODEL_DUMP_TITLE: if set, also dump the data model's title&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;GDA_DATA_MODEL_DUMP_NULL_AS_EMPTY: if set, replace the 'NULL' string with an empty string for NULL values &lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new string.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="array_copy_model"
              c:identifier="gda_data_model_array_copy_model"
              throws="1">
        <doc xml:whitespace="preserve">Makes a copy of @src into a new #GdaDataModelArray object</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new data model, or %NULL if an error occurred</doc>
          <type name="DataModelArray" c:type="GdaDataModelArray*"/>
        </return-value>
      </method>
      <method name="row_inserted" c:identifier="gda_data_model_row_inserted">
        <doc xml:whitespace="preserve">Emits the 'row_inserted' and 'changed' signals on @model. 
This method should only be used by #GdaDataModel implementations to 
signal that a row has been inserted.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <doc xml:whitespace="preserve">row number.</doc>
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="row_updated" c:identifier="gda_data_model_row_updated">
        <doc xml:whitespace="preserve">Emits the 'row_updated' and 'changed' signals on @model.
This method should only be used by #GdaDataModel implementations to 
signal that a row has been updated.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <doc xml:whitespace="preserve">row number.</doc>
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="row_removed" c:identifier="gda_data_model_row_removed">
        <doc xml:whitespace="preserve">Emits the 'row_removed' and 'changed' signal on @model.
This method should only be used by #GdaDataModel implementations to 
signal that a row has been removed</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <doc xml:whitespace="preserve">row number.</doc>
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset" c:identifier="gda_data_model_reset">
        <doc xml:whitespace="preserve">Emits the 'reset' and 'changed' signal on @model.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="iter_move_to_row_default"
              c:identifier="gda_data_model_iter_move_to_row_default">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="iter" transfer-ownership="none">
            <type name="DataModelIter" c:type="GdaDataModelIter*"/>
          </parameter>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="iter_move_next_default"
              c:identifier="gda_data_model_iter_move_next_default">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="iter" transfer-ownership="none">
            <type name="DataModelIter" c:type="GdaDataModelIter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="iter_move_prev_default"
              c:identifier="gda_data_model_iter_move_prev_default">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="iter" transfer-ownership="none">
            <type name="DataModelIter" c:type="GdaDataModelIter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_data_from_xml_node"
              c:identifier="gda_data_model_add_data_from_xml_node"
              throws="1">
        <doc xml:whitespace="preserve">Adds the data from an XML node to the given data model (see the DTD for that node
in the $prefix/share/libgda/dtd/libgda-array.dtd file).</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE if successful, %FALSE otherwise.</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="node" transfer-ownership="none">
            <doc xml:whitespace="preserve">an XML node representing a &amp;lt;gda_array_data&amp;gt; XML node.</doc>
            <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="reset">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="row-inserted">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="row-removed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="row-updated">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </interface>
    <bitfield name="DataModelAccessFlags" c:type="GdaDataModelAccessFlags">
      <member name="random"
              value="1"
              c:identifier="GDA_DATA_MODEL_ACCESS_RANDOM"/>
      <member name="cursor_forward"
              value="2"
              c:identifier="GDA_DATA_MODEL_ACCESS_CURSOR_FORWARD"/>
      <member name="cursor_backward"
              value="4"
              c:identifier="GDA_DATA_MODEL_ACCESS_CURSOR_BACKWARD"/>
      <member name="cursor"
              value="6"
              c:identifier="GDA_DATA_MODEL_ACCESS_CURSOR"/>
      <member name="insert"
              value="8"
              c:identifier="GDA_DATA_MODEL_ACCESS_INSERT"/>
      <member name="update"
              value="16"
              c:identifier="GDA_DATA_MODEL_ACCESS_UPDATE"/>
      <member name="delete"
              value="32"
              c:identifier="GDA_DATA_MODEL_ACCESS_DELETE"/>
      <member name="write"
              value="56"
              c:identifier="GDA_DATA_MODEL_ACCESS_WRITE"/>
    </bitfield>
    <class name="DataModelArray"
           c:type="GdaDataModelArray"
           parent="GObject.Object"
           glib:type-name="GdaDataModelArray"
           glib:get-type="gda_data_model_array_get_type"
           glib:type-struct="DataModelArrayClass">
      <implements name="DataModel"/>
      <constructor name="new_with_g_types"
                   c:identifier="gda_data_model_array_new_with_g_types"
                   introspectable="0">
        <doc xml:whitespace="preserve">Creates a new #GdaDataModel object with the column types as
specified.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a pointer to the newly created #GdaDataModel.</doc>
          <type name="DataModelArray" c:type="GdaDataModel*"/>
        </return-value>
        <parameters>
          <parameter name="cols" transfer-ownership="none">
            <doc xml:whitespace="preserve">number of columns for rows in this data model.</doc>
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new" c:identifier="gda_data_model_array_new">
        <doc xml:whitespace="preserve">Creates a new #GdaDataModel object without initializing the column
types. Using gda_data_model_array_new_with_g_types() is usually better.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a pointer to the newly created #GdaDataModel.</doc>
          <type name="DataModelArray" c:type="GdaDataModel*"/>
        </return-value>
        <parameters>
          <parameter name="cols" transfer-ownership="none">
            <doc xml:whitespace="preserve">number of columns for rows in this data model.</doc>
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_row"
              c:identifier="gda_data_model_array_get_row"
              throws="1">
        <doc xml:whitespace="preserve">Get a pointer to a row in @model</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GdaRow, or %NULL if an error occurred</doc>
          <type name="Row" c:type="GdaRow*"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <doc xml:whitespace="preserve">row number (starting from 0)</doc>
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_n_columns"
              c:identifier="gda_data_model_array_set_n_columns">
        <doc xml:whitespace="preserve">Sets the number of columns for rows inserted in this model. 
Also clears @model's contents.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cols" transfer-ownership="none">
            <doc xml:whitespace="preserve">number of columns for rows this data model should use.</doc>
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear" c:identifier="gda_data_model_array_clear">
        <doc xml:whitespace="preserve">Frees all the rows in @model.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <property name="n-columns" writable="1" transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </property>
      <property name="read-only" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="DataModelArrayPrivate" c:type="GdaDataModelArrayPrivate*"/>
      </field>
    </class>
    <record name="DataModelArrayClass"
            c:type="GdaDataModelArrayClass"
            glib:is-gtype-struct-for="DataModelArray">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DataModelArrayPrivate" c:type="GdaDataModelArrayPrivate">
    </record>
    <class name="DataModelBdb"
           c:type="GdaDataModelBdb"
           parent="GObject.Object"
           glib:type-name="GdaDataModelBdb"
           glib:get-type="gda_data_model_bdb_get_type"
           glib:type-struct="DataModelBdbClass">
      <implements name="DataModel"/>
      <constructor name="new" c:identifier="gda_data_model_bdb_new">
        <doc xml:whitespace="preserve">Creates a new #GdaDataModel object to access the contents of the Berkeley DB file @file,
for the database @db_name if not %NULL</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #GdaDataModel</doc>
          <type name="DataModelBdb" c:type="GdaDataModel*"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:whitespace="preserve">name of the file containing the database</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="db_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">the name of the database within @filename, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="create_key_columns">
        <return-value transfer-ownership="full">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </virtual-method>
      <virtual-method name="create_data_columns">
        <return-value transfer-ownership="full">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </virtual-method>
      <virtual-method name="get_key_part">
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="part" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_data_part">
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="part" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="update_key_part" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="part" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="update_data_part" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="part" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_errors" c:identifier="gda_data_model_bdb_get_errors">
        <doc xml:whitespace="preserve">Get the list of errors which have occurred while using @model</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a read-only list of #GError pointers, or %NULL if no error has occurred</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="GObject.Error"/>
          </type>
        </return-value>
      </method>
      <method name="clean_errors"
              c:identifier="gda_data_model_bdb_clean_errors">
        <doc xml:whitespace="preserve">Reset the list of errors which have occurred while using @model</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <property name="db-name"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="filename"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="DataModelBdbPrivate" c:type="GdaDataModelBdbPrivate*"/>
      </field>
    </class>
    <record name="DataModelBdbClass"
            c:type="GdaDataModelBdbClass"
            glib:is-gtype-struct-for="DataModelBdb">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="create_key_columns">
        <callback name="create_key_columns" c:type="create_key_columns">
          <return-value transfer-ownership="full">
            <type name="GLib.SList" c:type="GSList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModelBdb" c:type="GdaDataModelBdb*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_data_columns">
        <callback name="create_data_columns" c:type="create_data_columns">
          <return-value transfer-ownership="full">
            <type name="GLib.SList" c:type="GSList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModelBdb" c:type="GdaDataModelBdb*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_key_part">
        <callback name="get_key_part" c:type="get_key_part">
          <return-value transfer-ownership="full">
            <type name="GObject.Value" c:type="GValue*"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModelBdb" c:type="GdaDataModelBdb*"/>
            </parameter>
            <parameter name="data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
            <parameter name="length" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="part" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_data_part">
        <callback name="get_data_part" c:type="get_data_part">
          <return-value transfer-ownership="full">
            <type name="GObject.Value" c:type="GValue*"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModelBdb" c:type="GdaDataModelBdb*"/>
            </parameter>
            <parameter name="data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
            <parameter name="length" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="part" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="update_key_part">
        <callback name="update_key_part" c:type="update_key_part" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModelBdb" c:type="GdaDataModelBdb*"/>
            </parameter>
            <parameter name="data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
            <parameter name="length" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="part" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="update_data_part">
        <callback name="update_data_part" c:type="update_data_part" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModelBdb" c:type="GdaDataModelBdb*"/>
            </parameter>
            <parameter name="data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
            <parameter name="length" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="part" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DataModelBdbPrivate" c:type="GdaDataModelBdbPrivate">
    </record>
    <class name="DataModelDir"
           c:type="GdaDataModelDir"
           parent="GObject.Object"
           glib:type-name="GdaDataModelDir"
           glib:get-type="gda_data_model_dir_get_type"
           glib:type-struct="DataModelDirClass">
      <implements name="DataModel"/>
      <constructor name="new" c:identifier="gda_data_model_dir_new">
        <return-value transfer-ownership="full">
          <type name="DataModelDir" c:type="GdaDataModel*"/>
        </return-value>
        <parameters>
          <parameter name="basedir" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_errors" c:identifier="gda_data_model_dir_get_errors">
        <return-value transfer-ownership="none">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <method name="clean_errors"
              c:identifier="gda_data_model_dir_clean_errors">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <property name="basedir"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="DataModelDirPrivate" c:type="GdaDataModelDirPrivate*"/>
      </field>
    </class>
    <record name="DataModelDirClass"
            c:type="GdaDataModelDirClass"
            glib:is-gtype-struct-for="DataModelDir">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DataModelDirPrivate" c:type="GdaDataModelDirPrivate">
    </record>
    <class name="DataModelDsnList"
           c:type="GdaDataModelDsnList"
           parent="GObject.Object"
           glib:type-name="GdaDataModelDsnList"
           glib:get-type="gda_data_model_dsn_list_get_type"
           glib:type-struct="DataModelDsnListClass">
      <implements name="DataModel"/>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="DataModelDsnListPrivate"
              c:type="GdaDataModelDsnListPrivate*"/>
      </field>
    </class>
    <record name="DataModelDsnListClass"
            c:type="GdaDataModelDsnListClass"
            glib:is-gtype-struct-for="DataModelDsnList">
      <field name="object_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DataModelDsnListPrivate" c:type="GdaDataModelDsnListPrivate">
    </record>
    <enumeration name="DataModelError"
                 c:type="GdaDataModelError"
                 glib:error-quark="gda_data_model_error_quark">
      <member name="row_out_of_range_error"
              value="0"
              c:identifier="GDA_DATA_MODEL_ROW_OUT_OF_RANGE_ERROR"/>
      <member name="column_out_of_range_error"
              value="1"
              c:identifier="GDA_DATA_MODEL_COLUMN_OUT_OF_RANGE_ERROR"/>
      <member name="values_list_error"
              value="2"
              c:identifier="GDA_DATA_MODEL_VALUES_LIST_ERROR"/>
      <member name="value_type_error"
              value="3"
              c:identifier="GDA_DATA_MODEL_VALUE_TYPE_ERROR"/>
      <member name="row_not_found_error"
              value="4"
              c:identifier="GDA_DATA_MODEL_ROW_NOT_FOUND_ERROR"/>
      <member name="access_error"
              value="5"
              c:identifier="GDA_DATA_MODEL_ACCESS_ERROR"/>
      <member name="feature_non_supported_error"
              value="6"
              c:identifier="GDA_DATA_MODEL_FEATURE_NON_SUPPORTED_ERROR"/>
      <member name="file_exist_error"
              value="7"
              c:identifier="GDA_DATA_MODEL_FILE_EXIST_ERROR"/>
      <member name="xml_format_error"
              value="8"
              c:identifier="GDA_DATA_MODEL_XML_FORMAT_ERROR"/>
    </enumeration>
    <enumeration name="DataModelHint" c:type="GdaDataModelHint">
      <member name="start_batch_update"
              value="0"
              c:identifier="GDA_DATA_MODEL_HINT_START_BATCH_UPDATE"/>
      <member name="end_batch_update"
              value="1"
              c:identifier="GDA_DATA_MODEL_HINT_END_BATCH_UPDATE"/>
      <member name="refresh"
              value="2"
              c:identifier="GDA_DATA_MODEL_HINT_REFRESH"/>
    </enumeration>
    <enumeration name="DataModelIOFormat" c:type="GdaDataModelIOFormat">
      <member name="data_array_xml"
              value="0"
              c:identifier="GDA_DATA_MODEL_IO_DATA_ARRAY_XML"/>
      <member name="text_separated"
              value="1"
              c:identifier="GDA_DATA_MODEL_IO_TEXT_SEPARATED"/>
    </enumeration>
    <record name="DataModelIface"
            c:type="GdaDataModelIface"
            glib:is-gtype-struct-for="DataModel">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="i_get_n_rows">
        <callback name="i_get_n_rows" c:type="i_get_n_rows">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_get_n_columns">
        <callback name="i_get_n_columns" c:type="i_get_n_columns">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_describe_column">
        <callback name="i_describe_column" c:type="i_describe_column">
          <return-value transfer-ownership="full">
            <type name="Column" c:type="GdaColumn*"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
            <parameter name="col" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_get_access_flags">
        <callback name="i_get_access_flags" c:type="i_get_access_flags">
          <return-value transfer-ownership="full">
            <type name="DataModelAccessFlags"
                  c:type="GdaDataModelAccessFlags"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_get_value_at">
        <callback name="i_get_value_at" c:type="i_get_value_at" throws="1">
          <return-value transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
            <parameter name="col" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_get_attributes_at">
        <callback name="i_get_attributes_at" c:type="i_get_attributes_at">
          <return-value transfer-ownership="full">
            <type name="ValueAttribute" c:type="GdaValueAttribute"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
            <parameter name="col" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_create_iter">
        <callback name="i_create_iter" c:type="i_create_iter">
          <return-value transfer-ownership="full">
            <type name="DataModelIter" c:type="GdaDataModelIter*"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_iter_at_row">
        <callback name="i_iter_at_row" c:type="i_iter_at_row">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
            <parameter name="iter" transfer-ownership="none">
              <type name="DataModelIter" c:type="GdaDataModelIter*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_iter_next">
        <callback name="i_iter_next" c:type="i_iter_next">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
            <parameter name="iter" transfer-ownership="none">
              <type name="DataModelIter" c:type="GdaDataModelIter*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_iter_prev">
        <callback name="i_iter_prev" c:type="i_iter_prev">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
            <parameter name="iter" transfer-ownership="none">
              <type name="DataModelIter" c:type="GdaDataModelIter*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_set_value_at">
        <callback name="i_set_value_at" c:type="i_set_value_at" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
            <parameter name="col" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_iter_set_value">
        <callback name="i_iter_set_value" c:type="i_iter_set_value" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
            <parameter name="iter" transfer-ownership="none">
              <type name="DataModelIter" c:type="GdaDataModelIter*"/>
            </parameter>
            <parameter name="col" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_set_values">
        <callback name="i_set_values" c:type="i_set_values" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="values" transfer-ownership="none">
              <type name="GLib.List" c:type="GList*">
                <type name="any" c:type="gpointer"/>
              </type>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_append_values">
        <callback name="i_append_values" c:type="i_append_values" throws="1">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
            <parameter name="values" transfer-ownership="none">
              <type name="GLib.List" c:type="GList*">
                <type name="any" c:type="gpointer"/>
              </type>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_append_row">
        <callback name="i_append_row" c:type="i_append_row" throws="1">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_remove_row">
        <callback name="i_remove_row" c:type="i_remove_row" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_find_row">
        <callback name="i_find_row" c:type="i_find_row">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
            <parameter name="values" transfer-ownership="none">
              <type name="GLib.SList" c:type="GSList*">
                <type name="any" c:type="gpointer"/>
              </type>
            </parameter>
            <parameter name="cols_index"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_set_notify">
        <callback name="i_set_notify" c:type="i_set_notify">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
            <parameter name="do_notify_changes" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_get_notify">
        <callback name="i_get_notify" c:type="i_get_notify">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_send_hint">
        <callback name="i_send_hint" c:type="i_send_hint">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
            <parameter name="hint" transfer-ownership="none">
              <type name="DataModelHint" c:type="GdaDataModelHint"/>
            </parameter>
            <parameter name="hint_value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="row_inserted">
        <callback name="row_inserted" c:type="row_inserted">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="row_updated">
        <callback name="row_updated" c:type="row_updated">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="row_removed">
        <callback name="row_removed" c:type="row_removed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="changed">
        <callback name="changed" c:type="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reset">
        <callback name="reset" c:type="reset">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataModel" c:type="GdaDataModel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="DataModelImport"
           c:type="GdaDataModelImport"
           parent="GObject.Object"
           glib:type-name="GdaDataModelImport"
           glib:get-type="gda_data_model_import_get_type"
           glib:type-struct="DataModelImportClass">
      <implements name="DataModel"/>
      <constructor name="new_file"
                   c:identifier="gda_data_model_import_new_file">
        <return-value transfer-ownership="full">
          <type name="DataModelImport" c:type="GdaDataModel*"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="random_access" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_mem" c:identifier="gda_data_model_import_new_mem">
        <return-value transfer-ownership="full">
          <type name="DataModelImport" c:type="GdaDataModel*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="random_access" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_xml_node"
                   c:identifier="gda_data_model_import_new_xml_node">
        <return-value transfer-ownership="full">
          <type name="DataModelImport" c:type="GdaDataModel*"/>
        </return-value>
        <parameters>
          <parameter name="node" transfer-ownership="none">
            <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_errors"
              c:identifier="gda_data_model_import_get_errors">
        <return-value transfer-ownership="full">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <method name="clean_errors"
              c:identifier="gda_data_model_import_clean_errors">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <property name="data-string"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="filename"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="options"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Set" c:type="GdaSet"/>
      </property>
      <property name="random-access"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="xml-node"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="DataModelImportPrivate"
              c:type="GdaDataModelImportPrivate*"/>
      </field>
    </class>
    <record name="DataModelImportClass"
            c:type="GdaDataModelImportClass"
            glib:is-gtype-struct-for="DataModelImport">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DataModelImportPrivate" c:type="GdaDataModelImportPrivate">
    </record>
    <class name="DataModelIter"
           c:type="GdaDataModelIter"
           parent="Set"
           glib:type-name="GdaDataModelIter"
           glib:get-type="gda_data_model_iter_get_type"
           glib:type-struct="DataModelIterClass">
      <method name="get_value_at"
              c:identifier="gda_data_model_iter_get_value_at">
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="col" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_for_field"
              c:identifier="gda_data_model_iter_get_value_for_field">
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="field_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value_at"
              c:identifier="gda_data_model_iter_set_value_at"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="col" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="move_to_row"
              c:identifier="gda_data_model_iter_move_to_row">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="move_next" c:identifier="gda_data_model_iter_move_next">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="move_prev" c:identifier="gda_data_model_iter_move_prev">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_row" c:identifier="gda_data_model_iter_get_row">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="invalidate_contents"
              c:identifier="gda_data_model_iter_invalidate_contents">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="is_valid" c:identifier="gda_data_model_iter_is_valid">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_holder_for_field"
              c:identifier="gda_data_model_iter_get_holder_for_field">
        <return-value transfer-ownership="full">
          <type name="Holder" c:type="GdaHolder*"/>
        </return-value>
        <parameters>
          <parameter name="col" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="current-row" writable="1" transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <property name="data-model"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="DataModel" c:type="GdaDataModel"/>
      </property>
      <property name="forced-model" writable="1" transfer-ownership="none">
        <type name="DataModel" c:type="GdaDataModel"/>
      </property>
      <property name="update-model" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="object">
        <type name="Set" c:type="GdaSet"/>
      </field>
      <field name="priv">
        <type name="DataModelIterPrivate" c:type="GdaDataModelIterPrivate*"/>
      </field>
      <glib:signal name="end-of-data">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="row-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DataModelIterClass"
            c:type="GdaDataModelIterClass"
            glib:is-gtype-struct-for="DataModelIter">
      <field name="parent_class">
        <type name="SetClass" c:type="GdaSetClass"/>
      </field>
      <field name="row_changed">
        <callback name="row_changed" c:type="row_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="iter" transfer-ownership="none">
              <type name="DataModelIter" c:type="GdaDataModelIter*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="end_of_data">
        <callback name="end_of_data" c:type="end_of_data">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="iter" transfer-ownership="none">
              <type name="DataModelIter" c:type="GdaDataModelIter*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="DataModelIterError"
                 c:type="GdaDataModelIterError"
                 glib:error-quark="gda_data_model_iter_error_quark">
      <member name="data_model_iter_column_out_of_range_error"
              value="0"
              c:identifier="GDA_DATA_MODEL_ITER_COLUMN_OUT_OF_RANGE_ERROR"/>
    </enumeration>
    <record name="DataModelIterPrivate" c:type="GdaDataModelIterPrivate">
    </record>
    <class name="DataProxy"
           c:type="GdaDataProxy"
           parent="GObject.Object"
           glib:type-name="GdaDataProxy"
           glib:get-type="gda_data_proxy_get_type"
           glib:type-struct="DataProxyClass">
      <implements name="DataModel"/>
      <constructor name="new" c:identifier="gda_data_proxy_new">
        <return-value transfer-ownership="full">
          <type name="DataProxy" c:type="GObject*"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <type name="DataModel" c:type="GdaDataModel*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_proxied_model"
              c:identifier="gda_data_proxy_get_proxied_model">
        <return-value transfer-ownership="full">
          <type name="DataModel" c:type="GdaDataModel*"/>
        </return-value>
      </method>
      <method name="get_proxied_model_n_cols"
              c:identifier="gda_data_proxy_get_proxied_model_n_cols">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_proxied_model_n_rows"
              c:identifier="gda_data_proxy_get_proxied_model_n_rows">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="is_read_only" c:identifier="gda_data_proxy_is_read_only">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_values" c:identifier="gda_data_proxy_get_values">
        <return-value transfer-ownership="full">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="proxy_row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="cols_index"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="n_cols" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_attributes"
              c:identifier="gda_data_proxy_get_value_attributes">
        <return-value transfer-ownership="full">
          <type name="ValueAttribute" c:type="GdaValueAttribute"/>
        </return-value>
        <parameters>
          <parameter name="proxy_row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="alter_value_attributes"
              c:identifier="gda_data_proxy_alter_value_attributes">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="proxy_row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="alter_flags" transfer-ownership="none">
            <type name="ValueAttribute" c:type="GdaValueAttribute"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_proxied_model_row"
              c:identifier="gda_data_proxy_get_proxied_model_row">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="proxy_row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete" c:identifier="gda_data_proxy_delete">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="proxy_row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="undelete" c:identifier="gda_data_proxy_undelete">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="proxy_row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="row_is_deleted"
              c:identifier="gda_data_proxy_row_is_deleted">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="proxy_row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="row_is_inserted"
              c:identifier="gda_data_proxy_row_is_inserted">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="proxy_row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="row_has_changed"
              c:identifier="gda_data_proxy_row_has_changed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="proxy_row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_changed" c:identifier="gda_data_proxy_has_changed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_n_new_rows"
              c:identifier="gda_data_proxy_get_n_new_rows">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_n_modified_rows"
              c:identifier="gda_data_proxy_get_n_modified_rows">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="apply_row_changes"
              c:identifier="gda_data_proxy_apply_row_changes"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="proxy_row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="cancel_row_changes"
              c:identifier="gda_data_proxy_cancel_row_changes">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="proxy_row" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="apply_all_changes"
              c:identifier="gda_data_proxy_apply_all_changes"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="cancel_all_changes"
              c:identifier="gda_data_proxy_cancel_all_changes">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_sample_size"
              c:identifier="gda_data_proxy_set_sample_size">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="sample_size" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sample_size"
              c:identifier="gda_data_proxy_get_sample_size">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="set_sample_start"
              c:identifier="gda_data_proxy_set_sample_start">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="sample_start" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sample_start"
              c:identifier="gda_data_proxy_get_sample_start">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_sample_end"
              c:identifier="gda_data_proxy_get_sample_end">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="set_filter_expr"
              c:identifier="gda_data_proxy_set_filter_expr"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="filter_expr" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_filter_expr"
              c:identifier="gda_data_proxy_get_filter_expr">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_ordering_column"
              c:identifier="gda_data_proxy_set_ordering_column"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="col" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_filtered_n_rows"
              c:identifier="gda_data_proxy_get_filtered_n_rows">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <property name="defer-sync" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="model"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="DataModel" c:type="GdaDataModel"/>
      </property>
      <property name="prepend-null-entry"
                writable="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="sample-size"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="DataProxyPrivate" c:type="GdaDataProxyPrivate*"/>
      </field>
      <glib:signal name="filter-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="row-changes-applied">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="row-delete-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="sample-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="sample-size-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="validate-row-changes">
        <return-value transfer-ownership="full">
          <type name="Error" c:type="GdaError"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DataProxyClass"
            c:type="GdaDataProxyClass"
            glib:is-gtype-struct-for="DataProxy">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="row_delete_changed">
        <callback name="row_delete_changed" c:type="row_delete_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="proxy" transfer-ownership="none">
              <type name="DataProxy" c:type="GdaDataProxy*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="to_be_deleted" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="sample_size_changed">
        <callback name="sample_size_changed" c:type="sample_size_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="proxy" transfer-ownership="none">
              <type name="DataProxy" c:type="GdaDataProxy*"/>
            </parameter>
            <parameter name="sample_size" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="sample_changed">
        <callback name="sample_changed" c:type="sample_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="proxy" transfer-ownership="none">
              <type name="DataProxy" c:type="GdaDataProxy*"/>
            </parameter>
            <parameter name="sample_start" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="sample_end" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="validate_row_changes">
        <callback name="validate_row_changes" c:type="validate_row_changes">
          <return-value transfer-ownership="full">
            <type name="GLib.Error" c:type="GError*"/>
          </return-value>
          <parameters>
            <parameter name="proxy" transfer-ownership="none">
              <type name="DataProxy" c:type="GdaDataProxy*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="proxied_row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="row_changes_applied">
        <callback name="row_changes_applied" c:type="row_changes_applied">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="proxy" transfer-ownership="none">
              <type name="DataProxy" c:type="GdaDataProxy*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="proxied_row" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="filter_changed">
        <callback name="filter_changed" c:type="filter_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="proxy" transfer-ownership="none">
              <type name="DataProxy" c:type="GdaDataProxy*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="DataProxyError"
                 c:type="GdaDataProxyError"
                 glib:error-quark="gda_data_proxy_error_quark">
      <member name="commit_error"
              value="0"
              c:identifier="GDA_DATA_PROXY_COMMIT_ERROR"/>
      <member name="commit_cancelled"
              value="1"
              c:identifier="GDA_DATA_PROXY_COMMIT_CANCELLED"/>
      <member name="read_only_value"
              value="2"
              c:identifier="GDA_DATA_PROXY_READ_ONLY_VALUE"/>
      <member name="read_only_row"
              value="3"
              c:identifier="GDA_DATA_PROXY_READ_ONLY_ROW"/>
      <member name="filter_error"
              value="4"
              c:identifier="GDA_DATA_PROXY_FILTER_ERROR"/>
    </enumeration>
    <record name="DataProxyPrivate" c:type="GdaDataProxyPrivate">
    </record>
    <class name="DataSelect"
           c:type="GdaDataSelect"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GdaDataSelect"
           glib:get-type="gda_data_select_get_type"
           glib:type-struct="DataSelectClass">
      <implements name="DataModel"/>
      <virtual-method name="fetch_nb_rows">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="fetch_random" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="prow" transfer-ownership="none">
            <type name="Row" c:type="GdaRow**"/>
          </parameter>
          <parameter name="rownum" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="store_all" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="fetch_next" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="prow" transfer-ownership="none">
            <type name="Row" c:type="GdaRow**"/>
          </parameter>
          <parameter name="rownum" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="fetch_prev" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="prow" transfer-ownership="none">
            <type name="Row" c:type="GdaRow**"/>
          </parameter>
          <parameter name="rownum" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="fetch_at" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="prow" transfer-ownership="none">
            <type name="Row" c:type="GdaRow**"/>
          </parameter>
          <parameter name="rownum" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="set_row_selection_condition"
              c:identifier="gda_data_select_set_row_selection_condition"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="expr" transfer-ownership="none">
            <type name="SqlExpr" c:type="GdaSqlExpr*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_row_selection_condition_sql"
              c:identifier="gda_data_select_set_row_selection_condition_sql"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="sql_where" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="compute_row_selection_condition"
              c:identifier="gda_data_select_compute_row_selection_condition"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_modification_statement"
              c:identifier="gda_data_select_set_modification_statement"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="mod_stmt" transfer-ownership="none">
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_modification_statement_sql"
              c:identifier="gda_data_select_set_modification_statement_sql"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="sql" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="compute_modification_statements"
              c:identifier="gda_data_select_compute_modification_statements"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="compute_columns_attributes"
              c:identifier="gda_data_select_compute_columns_attributes"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_connection"
              c:identifier="gda_data_select_get_connection">
        <return-value transfer-ownership="full">
          <type name="Connection" c:type="GdaConnection*"/>
        </return-value>
      </method>
      <method name="rerun" c:identifier="gda_data_select_rerun" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <property name="auto-reset" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="connection"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Connection" c:type="GdaConnection"/>
      </property>
      <property name="delete-stmt" writable="1" transfer-ownership="none">
        <type name="Statement" c:type="GdaStatement"/>
      </property>
      <property name="exec-params"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Set" c:type="GdaSet"/>
      </property>
      <property name="insert-stmt" writable="1" transfer-ownership="none">
        <type name="Statement" c:type="GdaStatement"/>
      </property>
      <property name="model-usage"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </property>
      <property name="prepared-stmt" writable="1" transfer-ownership="none">
        <type name="PStmt" c:type="GdaPStmt"/>
      </property>
      <property name="select-stmt" transfer-ownership="none">
        <type name="Statement" c:type="GdaStatement"/>
      </property>
      <property name="store-all-rows" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="update-stmt" writable="1" transfer-ownership="none">
        <type name="Statement" c:type="GdaStatement"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="DataSelectPrivate" c:type="GdaDataSelectPrivate*"/>
      </field>
      <field name="prep_stmt">
        <type name="PStmt" c:type="GdaPStmt*"/>
      </field>
      <field name="nb_stored_rows">
        <type name="int" c:type="gint"/>
      </field>
      <field name="advertized_nrows">
        <type name="int" c:type="gint"/>
      </field>
      <field name="_gda_reserved1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved3">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved4">
        <type name="any" c:type="gpointer"/>
      </field>
    </class>
    <record name="DataSelectClass"
            c:type="GdaDataSelectClass"
            glib:is-gtype-struct-for="DataSelect">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="fetch_nb_rows">
        <callback name="fetch_nb_rows" c:type="fetch_nb_rows">
          <return-value transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataSelect" c:type="GdaDataSelect*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="fetch_random">
        <callback name="fetch_random" c:type="fetch_random" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataSelect" c:type="GdaDataSelect*"/>
            </parameter>
            <parameter name="prow" transfer-ownership="none">
              <type name="Row" c:type="GdaRow**"/>
            </parameter>
            <parameter name="rownum" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="store_all">
        <callback name="store_all" c:type="store_all" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataSelect" c:type="GdaDataSelect*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="fetch_next">
        <callback name="fetch_next" c:type="fetch_next" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataSelect" c:type="GdaDataSelect*"/>
            </parameter>
            <parameter name="prow" transfer-ownership="none">
              <type name="Row" c:type="GdaRow**"/>
            </parameter>
            <parameter name="rownum" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="fetch_prev">
        <callback name="fetch_prev" c:type="fetch_prev" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataSelect" c:type="GdaDataSelect*"/>
            </parameter>
            <parameter name="prow" transfer-ownership="none">
              <type name="Row" c:type="GdaRow**"/>
            </parameter>
            <parameter name="rownum" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="fetch_at">
        <callback name="fetch_at" c:type="fetch_at" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="DataSelect" c:type="GdaDataSelect*"/>
            </parameter>
            <parameter name="prow" transfer-ownership="none">
              <type name="Row" c:type="GdaRow**"/>
            </parameter>
            <parameter name="rownum" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="DataSelectError"
                 c:type="GdaDataSelectError"
                 glib:error-quark="gda_data_select_error_quark">
      <member name="modification_statement_error"
              value="0"
              c:identifier="GDA_DATA_SELECT_MODIFICATION_STATEMENT_ERROR"/>
      <member name="missing_modification_statement_error"
              value="1"
              c:identifier="GDA_DATA_SELECT_MISSING_MODIFICATION_STATEMENT_ERROR"/>
      <member name="connection_error"
              value="2"
              c:identifier="GDA_DATA_SELECT_CONNECTION_ERROR"/>
      <member name="access_error"
              value="3"
              c:identifier="GDA_DATA_SELECT_ACCESS_ERROR"/>
      <member name="sql_error"
              value="4"
              c:identifier="GDA_DATA_SELECT_SQL_ERROR"/>
      <member name="safety_locked_error"
              value="5"
              c:identifier="GDA_DATA_SELECT_SAFETY_LOCKED_ERROR"/>
    </enumeration>
    <record name="DataSelectPrivate" c:type="GdaDataSelectPrivate">
    </record>
    <record name="Diff" c:type="GdaDiff">
      <field name="type" writable="1">
        <type name="DiffType" c:type="GdaDiffType"/>
      </field>
      <field name="old_row" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="new_row" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="values" writable="1">
        <type name="GLib.HashTable" c:type="GHashTable*"/>
      </field>
    </record>
    <enumeration name="DiffType" c:type="GdaDiffType">
      <member name="add_row" value="0" c:identifier="GDA_DIFF_ADD_ROW"/>
      <member name="remove_row" value="1" c:identifier="GDA_DIFF_REMOVE_ROW"/>
      <member name="modify_row" value="2" c:identifier="GDA_DIFF_MODIFY_ROW"/>
    </enumeration>
    <record name="DsnInfo" c:type="GdaDsnInfo">
      <field name="name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="provider" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="description" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="cnc_string" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="auth_string" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="is_system" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved3" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved4" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <constant name="EXTRA_AUTO_INCREMENT" value="AUTO_INCREMENT">
      <type name="utf8"/>
    </constant>
    <bitfield name="EasyCreateTableFlag" c:type="GdaEasyCreateTableFlag">
      <member name="nothing_flag"
              value="1"
              c:identifier="GDA_EASY_CREATE_TABLE_NOTHING_FLAG"/>
      <member name="pkey_flag"
              value="2"
              c:identifier="GDA_EASY_CREATE_TABLE_PKEY_FLAG"/>
      <member name="not_null_flag"
              value="4"
              c:identifier="GDA_EASY_CREATE_TABLE_NOT_NULL_FLAG"/>
      <member name="unique_flag"
              value="8"
              c:identifier="GDA_EASY_CREATE_TABLE_UNIQUE_FLAG"/>
      <member name="autoinc_flag"
              value="16"
              c:identifier="GDA_EASY_CREATE_TABLE_AUTOINC_FLAG"/>
      <member name="fkey_flag"
              value="32"
              c:identifier="GDA_EASY_CREATE_TABLE_FKEY_FLAG"/>
      <member name="pkey_autoinc_flag"
              value="18"
              c:identifier="GDA_EASY_CREATE_TABLE_PKEY_AUTOINC_FLAG"/>
    </bitfield>
    <enumeration name="EasyError"
                 c:type="GdaEasyError"
                 glib:error-quark="gda_easy_error_quark">
      <member name="object_name_error"
              value="0"
              c:identifier="GDA_EASY_OBJECT_NAME_ERROR"/>
      <member name="incorrect_value_error"
              value="1"
              c:identifier="GDA_EASY_INCORRECT_VALUE_ERROR"/>
      <member name="operation_error"
              value="2"
              c:identifier="GDA_EASY_OPERATION_ERROR"/>
    </enumeration>
    <record name="GeometricPoint"
            c:type="GdaGeometricPoint"
            glib:type-name="GdaGeometricPoint"
            glib:get-type="gda_geometricpoint_get_type">
      <field name="x" writable="1">
        <type name="double" c:type="gdouble"/>
      </field>
      <field name="y" writable="1">
        <type name="double" c:type="gdouble"/>
      </field>
    </record>
    <class name="HandlerBin"
           c:type="GdaHandlerBin"
           parent="GObject.Object"
           glib:type-name="GdaHandlerBin"
           glib:get-type="gda_handler_bin_get_type"
           glib:type-struct="HandlerBinClass">
      <implements name="DataHandler"/>
      <constructor name="new" c:identifier="gda_handler_bin_new">
        <return-value transfer-ownership="full">
          <type name="HandlerBin" c:type="GdaDataHandler*"/>
        </return-value>
      </constructor>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="HandlerBinPriv" c:type="GdaHandlerBinPriv*"/>
      </field>
    </class>
    <record name="HandlerBinClass"
            c:type="GdaHandlerBinClass"
            glib:is-gtype-struct-for="HandlerBin">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="HandlerBinPriv" c:type="GdaHandlerBinPriv">
    </record>
    <class name="HandlerBoolean"
           c:type="GdaHandlerBoolean"
           parent="GObject.Object"
           glib:type-name="GdaHandlerBoolean"
           glib:get-type="gda_handler_boolean_get_type"
           glib:type-struct="HandlerBooleanClass">
      <implements name="DataHandler"/>
      <constructor name="new" c:identifier="gda_handler_boolean_new">
        <return-value transfer-ownership="full">
          <type name="HandlerBoolean" c:type="GdaDataHandler*"/>
        </return-value>
      </constructor>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="HandlerBooleanPriv" c:type="GdaHandlerBooleanPriv*"/>
      </field>
    </class>
    <record name="HandlerBooleanClass"
            c:type="GdaHandlerBooleanClass"
            glib:is-gtype-struct-for="HandlerBoolean">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="HandlerBooleanPriv" c:type="GdaHandlerBooleanPriv">
    </record>
    <class name="HandlerNumerical"
           c:type="GdaHandlerNumerical"
           parent="GObject.Object"
           glib:type-name="GdaHandlerNumerical"
           glib:get-type="gda_handler_numerical_get_type"
           glib:type-struct="HandlerNumericalClass">
      <implements name="DataHandler"/>
      <constructor name="new" c:identifier="gda_handler_numerical_new">
        <return-value transfer-ownership="full">
          <type name="HandlerNumerical" c:type="GdaDataHandler*"/>
        </return-value>
      </constructor>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="HandlerNumericalPriv" c:type="GdaHandlerNumericalPriv*"/>
      </field>
    </class>
    <record name="HandlerNumericalClass"
            c:type="GdaHandlerNumericalClass"
            glib:is-gtype-struct-for="HandlerNumerical">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="HandlerNumericalPriv" c:type="GdaHandlerNumericalPriv">
    </record>
    <class name="HandlerString"
           c:type="GdaHandlerString"
           parent="GObject.Object"
           glib:type-name="GdaHandlerString"
           glib:get-type="gda_handler_string_get_type"
           glib:type-struct="HandlerStringClass">
      <implements name="DataHandler"/>
      <constructor name="new" c:identifier="gda_handler_string_new">
        <return-value transfer-ownership="full">
          <type name="HandlerString" c:type="GdaDataHandler*"/>
        </return-value>
      </constructor>
      <constructor name="new_with_provider"
                   c:identifier="gda_handler_string_new_with_provider">
        <return-value transfer-ownership="full">
          <type name="HandlerString" c:type="GdaDataHandler*"/>
        </return-value>
        <parameters>
          <parameter name="prov" transfer-ownership="none">
            <type name="ServerProvider" c:type="GdaServerProvider*"/>
          </parameter>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="HandlerStringPriv" c:type="GdaHandlerStringPriv*"/>
      </field>
    </class>
    <record name="HandlerStringClass"
            c:type="GdaHandlerStringClass"
            glib:is-gtype-struct-for="HandlerString">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="HandlerStringPriv" c:type="GdaHandlerStringPriv">
    </record>
    <class name="HandlerTime"
           c:type="GdaHandlerTime"
           parent="GObject.Object"
           glib:type-name="GdaHandlerTime"
           glib:get-type="gda_handler_time_get_type"
           glib:type-struct="HandlerTimeClass">
      <implements name="DataHandler"/>
      <constructor name="new" c:identifier="gda_handler_time_new">
        <return-value transfer-ownership="full">
          <type name="HandlerTime" c:type="GdaDataHandler*"/>
        </return-value>
      </constructor>
      <constructor name="new_no_locale"
                   c:identifier="gda_handler_time_new_no_locale">
        <return-value transfer-ownership="full">
          <type name="HandlerTime" c:type="GdaDataHandler*"/>
        </return-value>
      </constructor>
      <method name="set_sql_spec" c:identifier="gda_handler_time_set_sql_spec">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="first" transfer-ownership="none">
            <type name="GLib.DateDMY" c:type="GDateDMY"/>
          </parameter>
          <parameter name="sec" transfer-ownership="none">
            <type name="GLib.DateDMY" c:type="GDateDMY"/>
          </parameter>
          <parameter name="third" transfer-ownership="none">
            <type name="GLib.DateDMY" c:type="GDateDMY"/>
          </parameter>
          <parameter name="separator" transfer-ownership="none">
            <type name="int8" c:type="gchar"/>
          </parameter>
          <parameter name="twodigits_years" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_no_locale_str_from_value"
              c:identifier="gda_handler_time_get_no_locale_str_from_value">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_format" c:identifier="gda_handler_time_get_format">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="HandlerTimePriv" c:type="GdaHandlerTimePriv*"/>
      </field>
    </class>
    <record name="HandlerTimeClass"
            c:type="GdaHandlerTimeClass"
            glib:is-gtype-struct-for="HandlerTime">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="HandlerTimePriv" c:type="GdaHandlerTimePriv">
    </record>
    <class name="HandlerType"
           c:type="GdaHandlerType"
           parent="GObject.Object"
           glib:type-name="GdaHandlerType"
           glib:get-type="gda_handler_type_get_type"
           glib:type-struct="HandlerTypeClass">
      <implements name="DataHandler"/>
      <constructor name="new" c:identifier="gda_handler_type_new">
        <return-value transfer-ownership="full">
          <type name="HandlerType" c:type="GdaDataHandler*"/>
        </return-value>
      </constructor>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="HandlerTypePriv" c:type="GdaHandlerTypePriv*"/>
      </field>
    </class>
    <record name="HandlerTypeClass"
            c:type="GdaHandlerTypeClass"
            glib:is-gtype-struct-for="HandlerType">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="HandlerTypePriv" c:type="GdaHandlerTypePriv">
    </record>
    <class name="Holder"
           c:type="GdaHolder"
           parent="GObject.Object"
           glib:type-name="GdaHolder"
           glib:get-type="gda_holder_get_type"
           glib:type-struct="HolderClass">
      <constructor name="new" c:identifier="gda_holder_new">
        <return-value transfer-ownership="full">
          <type name="Holder" c:type="GdaHolder*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_inline"
                   c:identifier="gda_holder_new_inline"
                   introspectable="0">
        <return-value transfer-ownership="full">
          <type name="Holder" c:type="GdaHolder*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="att_changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="att_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="att_value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="copy" c:identifier="gda_holder_copy">
        <return-value transfer-ownership="full">
          <type name="Holder" c:type="GdaHolder*"/>
        </return-value>
      </method>
      <method name="get_g_type" c:identifier="gda_holder_get_g_type">
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
      </method>
      <method name="get_id" c:identifier="gda_holder_get_id">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_value" c:identifier="gda_holder_get_value">
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
      </method>
      <method name="get_value_str" c:identifier="gda_holder_get_value_str">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <type name="DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value" c:identifier="gda_holder_set_value" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_value"
              c:identifier="gda_holder_take_value"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_static_value"
              c:identifier="gda_holder_take_static_value"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="value_changed"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value_str"
              c:identifier="gda_holder_set_value_str"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <type name="DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_default_value"
              c:identifier="gda_holder_get_default_value">
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
      </method>
      <method name="set_default_value"
              c:identifier="gda_holder_set_default_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value_to_default"
              c:identifier="gda_holder_set_value_to_default">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="value_is_default"
              c:identifier="gda_holder_value_is_default">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="force_invalid" c:identifier="gda_holder_force_invalid">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="is_valid" c:identifier="gda_holder_is_valid">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_not_null" c:identifier="gda_holder_set_not_null">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="not_null" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_not_null" c:identifier="gda_holder_get_not_null">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_source_model"
              c:identifier="gda_holder_set_source_model"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <type name="DataModel" c:type="GdaDataModel*"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_source_model"
              c:identifier="gda_holder_get_source_model">
        <return-value transfer-ownership="full">
          <type name="DataModel" c:type="GdaDataModel*"/>
        </return-value>
        <parameters>
          <parameter name="col"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_bind" c:identifier="gda_holder_set_bind" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="bind_to" transfer-ownership="none">
            <type name="Holder" c:type="GdaHolder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_bind" c:identifier="gda_holder_get_bind">
        <return-value transfer-ownership="full">
          <type name="Holder" c:type="GdaHolder*"/>
        </return-value>
      </method>
      <method name="get_attribute" c:identifier="gda_holder_get_attribute">
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute" c:identifier="gda_holder_set_attribute">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="destroy" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <property name="description" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="full-bind" writable="1" transfer-ownership="none">
        <type name="Holder" c:type="GdaHolder"/>
      </property>
      <property name="g-type"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </property>
      <property name="id" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="name" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="not-null" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="simple-bind" writable="1" transfer-ownership="none">
        <type name="Holder" c:type="GdaHolder"/>
      </property>
      <property name="source-column" writable="1" transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <property name="source-model" writable="1" transfer-ownership="none">
        <type name="DataModel" c:type="GdaDataModel"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="HolderPrivate" c:type="GdaHolderPrivate*"/>
      </field>
      <glib:signal name="attribute-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="source-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="validate-change">
        <return-value transfer-ownership="full">
          <type name="Error" c:type="GdaError"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="HolderClass"
            c:type="GdaHolderClass"
            glib:is-gtype-struct-for="Holder">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="changed">
        <callback name="changed" c:type="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="holder" transfer-ownership="none">
              <type name="Holder" c:type="GdaHolder*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="source_changed">
        <callback name="source_changed" c:type="source_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="holder" transfer-ownership="none">
              <type name="Holder" c:type="GdaHolder*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="validate_change">
        <callback name="validate_change" c:type="validate_change">
          <return-value transfer-ownership="full">
            <type name="GLib.Error" c:type="GError*"/>
          </return-value>
          <parameters>
            <parameter name="holder" transfer-ownership="none">
              <type name="Holder" c:type="GdaHolder*"/>
            </parameter>
            <parameter name="new_value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="att_changed">
        <callback name="att_changed" c:type="att_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="holder" transfer-ownership="none">
              <type name="Holder" c:type="GdaHolder*"/>
            </parameter>
            <parameter name="att_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="att_value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="HolderError"
                 c:type="GdaHolderError"
                 glib:error-quark="gda_holder_error_quark">
      <member name="string_conversion_error"
              value="0"
              c:identifier="GDA_HOLDER_STRING_CONVERSION_ERROR"/>
      <member name="value_type_error"
              value="1"
              c:identifier="GDA_HOLDER_VALUE_TYPE_ERROR"/>
      <member name="value_null_error"
              value="2"
              c:identifier="GDA_HOLDER_VALUE_NULL_ERROR"/>
    </enumeration>
    <record name="HolderPrivate" c:type="GdaHolderPrivate">
    </record>
    <interface name="Lockable"
               c:type="GdaLockable"
               glib:type-name="GdaLockable"
               glib:get-type="gda_lockable_get_type"
               glib:type-struct="LockableIface">
      <virtual-method name="i_lock">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <virtual-method name="i_trylock">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="i_unlock">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <method name="lock" c:identifier="gda_lockable_lock">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="trylock" c:identifier="gda_lockable_trylock">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="unlock" c:identifier="gda_lockable_unlock">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </interface>
    <record name="LockableIface"
            c:type="GdaLockableIface"
            glib:is-gtype-struct-for="Lockable">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="i_lock">
        <callback name="i_lock" c:type="i_lock">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="lock" transfer-ownership="none">
              <type name="Lockable" c:type="GdaLockable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_trylock">
        <callback name="i_trylock" c:type="i_trylock">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="lock" transfer-ownership="none">
              <type name="Lockable" c:type="GdaLockable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="i_unlock">
        <callback name="i_unlock" c:type="i_unlock">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="lock" transfer-ownership="none">
              <type name="Lockable" c:type="GdaLockable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="MetaContext" c:type="GdaMetaContext">
      <field name="table_name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="size" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="column_names" writable="1">
        <type name="utf8" c:type="gchar**"/>
      </field>
      <field name="column_values" writable="1">
        <type name="GObject.Value" c:type="GValue**"/>
      </field>
    </record>
    <record name="MetaDbObject" c:type="GdaMetaDbObject">
      <doc xml:whitespace="preserve">Struture to hold information about each database object (tables, views, ...),
its contents must not be modified.
one must use gda_sql_identifier_quote() to know if is it is necessary to surround by double quotes
before using in an SQL statement</doc>
      <union name="extra" c:type="extra">
        <field name="meta_table" writable="1">
          <type name="MetaTable" c:type="GdaMetaTable"/>
        </field>
        <field name="meta_view" writable="1">
          <type name="MetaView" c:type="GdaMetaView"/>
        </field>
      </union>
      <field name="obj_type" writable="1">
        <type name="MetaDbObjectType" c:type="GdaMetaDbObjectType"/>
      </field>
      <field name="outdated" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="obj_catalog" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="obj_schema" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="obj_name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="obj_short_name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="obj_full_name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="obj_owner" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="depend_list" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved3" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved4" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <enumeration name="MetaDbObjectType" c:type="GdaMetaDbObjectType">
      <member name="unknown" value="0" c:identifier="GDA_META_DB_UNKNOWN"/>
      <member name="table" value="1" c:identifier="GDA_META_DB_TABLE"/>
      <member name="view" value="2" c:identifier="GDA_META_DB_VIEW"/>
    </enumeration>
    <bitfield name="MetaGraphInfo" c:type="GdaMetaGraphInfo">
      <member name="meta_graph_columns"
              value="1"
              c:identifier="GDA_META_GRAPH_COLUMNS"/>
    </bitfield>
    <enumeration name="MetaSortType" c:type="GdaMetaSortType">
      <member name="alhapetical"
              value="0"
              c:identifier="GDA_META_SORT_ALHAPETICAL"/>
      <member name="dependencies"
              value="1"
              c:identifier="GDA_META_SORT_DEPENDENCIES"/>
    </enumeration>
    <class name="MetaStore"
           c:type="GdaMetaStore"
           parent="GObject.Object"
           glib:type-name="GdaMetaStore"
           glib:get-type="gda_meta_store_get_type"
           glib:type-struct="MetaStoreClass">
      <constructor name="new_with_file"
                   c:identifier="gda_meta_store_new_with_file">
        <return-value transfer-ownership="full">
          <type name="MetaStore" c:type="GdaMetaStore*"/>
        </return-value>
        <parameters>
          <parameter name="file_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new" c:identifier="gda_meta_store_new">
        <return-value transfer-ownership="full">
          <type name="MetaStore" c:type="GdaMetaStore*"/>
        </return-value>
        <parameters>
          <parameter name="cnc_string" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="sql_identifier_quote"
                c:identifier="gda_meta_store_sql_identifier_quote">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_version" c:identifier="gda_meta_store_get_version">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_internal_connection"
              c:identifier="gda_meta_store_get_internal_connection">
        <return-value transfer-ownership="full">
          <type name="Connection" c:type="GdaConnection*"/>
        </return-value>
      </method>
      <method name="extract"
              c:identifier="gda_meta_store_extract"
              introspectable="0">
        <return-value transfer-ownership="full">
          <type name="DataModel" c:type="GdaDataModel*"/>
        </return-value>
        <parameters>
          <parameter name="select_sql" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="modify"
              c:identifier="gda_meta_store_modify"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="table_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="new_data" transfer-ownership="none">
            <type name="DataModel" c:type="GdaDataModel*"/>
          </parameter>
          <parameter name="condition" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="modify_with_context"
              c:identifier="gda_meta_store_modify_with_context"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <type name="MetaContext" c:type="GdaMetaContext*"/>
          </parameter>
          <parameter name="new_data" transfer-ownership="none">
            <type name="DataModel" c:type="GdaDataModel*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_modify_data_model"
              c:identifier="gda_meta_store_create_modify_data_model">
        <return-value transfer-ownership="full">
          <type name="DataModel" c:type="GdaDataModel*"/>
        </return-value>
        <parameters>
          <parameter name="table_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_identifiers_style"
              c:identifier="gda_meta_store_set_identifiers_style">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="style" transfer-ownership="none">
            <type name="SqlIdentifierStyle" c:type="GdaSqlIdentifierStyle"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reserved_keywords_func"
              c:identifier="gda_meta_store_set_reserved_keywords_func">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="func" transfer-ownership="none" scope="call">
            <type name="SqlReservedKeywordsFunc"
                  c:type="GdaSqlReservedKeywordsFunc"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_value"
              c:identifier="gda_meta_store_get_attribute_value"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="att_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="att_value" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_value"
              c:identifier="gda_meta_store_set_attribute_value"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="att_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="att_value" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="schema_add_custom_object"
              c:identifier="gda_meta_store_schema_add_custom_object"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="xml_description" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="schema_remove_custom_object"
              c:identifier="gda_meta_store_schema_remove_custom_object"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="obj_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="schema_get_all_tables"
              c:identifier="gda_meta_store_schema_get_all_tables">
        <doc xml:whitespace="preserve">Get an ordered list of the tables @store knows about. The tables are ordered in a way that tables dependencies
list.
but the strings present in the list must not be modified.</doc>
        <return-value transfer-ownership="container">
          <doc xml:whitespace="preserve">a new list of tables names (as gchar*), the list must be freed when no longer needed,</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="utf8"/>
          </type>
        </return-value>
      </method>
      <method name="schema_get_depend_tables"
              c:identifier="gda_meta_store_schema_get_depend_tables">
        <return-value transfer-ownership="full">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="table_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="schema_get_structure"
              c:identifier="gda_meta_store_schema_get_structure"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="MetaStruct" c:type="GdaMetaStruct*"/>
        </return-value>
      </method>
      <property name="catalog"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="cnc"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Connection" c:type="GdaConnection"/>
      </property>
      <property name="cnc-string"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="schema"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="MetaStorePrivate" c:type="GdaMetaStorePrivate*"/>
      </field>
      <glib:signal name="meta-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="SList" c:type="GdaSList"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="meta-reset">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="suggest-update">
        <return-value transfer-ownership="full">
          <type name="Error" c:type="GdaError"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="MetaContext" c:type="GdaMetaContext"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="MetaStoreChange" c:type="GdaMetaStoreChange">
      <field name="c_type" writable="1">
        <type name="MetaStoreChangeType" c:type="GdaMetaStoreChangeType"/>
      </field>
      <field name="table_name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="keys" writable="1">
        <type name="GLib.HashTable" c:type="GHashTable*"/>
      </field>
    </record>
    <enumeration name="MetaStoreChangeType" c:type="GdaMetaStoreChangeType">
      <member name="add" value="0" c:identifier="GDA_META_STORE_ADD"/>
      <member name="remove" value="1" c:identifier="GDA_META_STORE_REMOVE"/>
      <member name="modify" value="2" c:identifier="GDA_META_STORE_MODIFY"/>
    </enumeration>
    <record name="MetaStoreClass"
            c:type="GdaMetaStoreClass"
            glib:is-gtype-struct-for="MetaStore">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="cpriv">
        <type name="MetaStoreClassPrivate" c:type="GdaMetaStoreClassPrivate*"/>
      </field>
      <field name="meta_reset">
        <callback name="meta_reset" c:type="meta_reset">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="store" transfer-ownership="none">
              <type name="MetaStore" c:type="GdaMetaStore*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="suggest_update">
        <callback name="suggest_update" c:type="suggest_update">
          <return-value transfer-ownership="full">
            <type name="GLib.Error" c:type="GError*"/>
          </return-value>
          <parameters>
            <parameter name="store" transfer-ownership="none">
              <type name="MetaStore" c:type="GdaMetaStore*"/>
            </parameter>
            <parameter name="suggest" transfer-ownership="none">
              <type name="MetaContext" c:type="GdaMetaContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="meta_changed">
        <callback name="meta_changed" c:type="meta_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="store" transfer-ownership="none">
              <type name="MetaStore" c:type="GdaMetaStore*"/>
            </parameter>
            <parameter name="changes" transfer-ownership="none">
              <type name="GLib.SList" c:type="GSList*">
                <type name="any" c:type="gpointer"/>
              </type>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="MetaStoreClassPrivate" c:type="GdaMetaStoreClassPrivate">
    </record>
    <enumeration name="MetaStoreError"
                 c:type="GdaMetaStoreError"
                 glib:error-quark="gda_meta_store_error_quark">
      <member name="incorrect_schema_error"
              value="0"
              c:identifier="GDA_META_STORE_INCORRECT_SCHEMA_ERROR"/>
      <member name="unsupported_provider_error"
              value="1"
              c:identifier="GDA_META_STORE_UNSUPPORTED_PROVIDER_ERROR"/>
      <member name="internal_error"
              value="2"
              c:identifier="GDA_META_STORE_INTERNAL_ERROR"/>
      <member name="meta_context_error"
              value="3"
              c:identifier="GDA_META_STORE_META_CONTEXT_ERROR"/>
      <member name="modify_contents_error"
              value="4"
              c:identifier="GDA_META_STORE_MODIFY_CONTENTS_ERROR"/>
      <member name="extract_sql_error"
              value="5"
              c:identifier="GDA_META_STORE_EXTRACT_SQL_ERROR"/>
      <member name="attribute_not_found_error"
              value="6"
              c:identifier="GDA_META_STORE_ATTRIBUTE_NOT_FOUND_ERROR"/>
      <member name="attribute_error"
              value="7"
              c:identifier="GDA_META_STORE_ATTRIBUTE_ERROR"/>
      <member name="schema_object_not_found_error"
              value="8"
              c:identifier="GDA_META_STORE_SCHEMA_OBJECT_NOT_FOUND_ERROR"/>
      <member name="schema_object_conflict_error"
              value="9"
              c:identifier="GDA_META_STORE_SCHEMA_OBJECT_CONFLICT_ERROR"/>
      <member name="schema_object_descr_error"
              value="10"
              c:identifier="GDA_META_STORE_SCHEMA_OBJECT_DESCR_ERROR"/>
      <member name="transaction_already_started_error"
              value="11"
              c:identifier="GDA_META_STORE_TRANSACTION_ALREADY_STARTED_ERROR"/>
    </enumeration>
    <record name="MetaStorePrivate" c:type="GdaMetaStorePrivate">
    </record>
    <class name="MetaStruct"
           c:type="GdaMetaStruct"
           parent="GObject.Object"
           glib:type-name="GdaMetaStruct"
           glib:get-type="gda_meta_struct_get_type"
           glib:type-struct="MetaStructClass">
      <constructor name="new" c:identifier="gda_meta_struct_new">
        <return-value transfer-ownership="full">
          <type name="MetaStruct" c:type="GdaMetaStruct*"/>
        </return-value>
        <parameters>
          <parameter name="store" transfer-ownership="none">
            <type name="MetaStore" c:type="GdaMetaStore*"/>
          </parameter>
          <parameter name="features" transfer-ownership="none">
            <type name="MetaStructFeature" c:type="GdaMetaStructFeature"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="complement"
              c:identifier="gda_meta_struct_complement"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="MetaDbObject" c:type="GdaMetaDbObject*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="MetaDbObjectType" c:type="GdaMetaDbObjectType"/>
          </parameter>
          <parameter name="catalog" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="schema" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="complement_schema"
              c:identifier="gda_meta_struct_complement_schema"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="catalog" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="schema" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="complement_default"
              c:identifier="gda_meta_struct_complement_default"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="complement_all"
              c:identifier="gda_meta_struct_complement_all"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="complement_depend"
              c:identifier="gda_meta_struct_complement_depend"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="dbo" transfer-ownership="none">
            <type name="MetaDbObject" c:type="GdaMetaDbObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sort_db_objects"
              c:identifier="gda_meta_struct_sort_db_objects"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="sort_type" transfer-ownership="none">
            <type name="MetaSortType" c:type="GdaMetaSortType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_all_db_objects"
              c:identifier="gda_meta_struct_get_all_db_objects">
        <return-value transfer-ownership="full">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <method name="get_db_object"
              c:identifier="gda_meta_struct_get_db_object">
        <return-value transfer-ownership="full">
          <type name="MetaDbObject" c:type="GdaMetaDbObject*"/>
        </return-value>
        <parameters>
          <parameter name="catalog" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="schema" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_table_column"
              c:identifier="gda_meta_struct_get_table_column">
        <return-value transfer-ownership="full">
          <type name="MetaTableColumn" c:type="GdaMetaTableColumn*"/>
        </return-value>
        <parameters>
          <parameter name="table" transfer-ownership="none">
            <type name="MetaTable" c:type="GdaMetaTable*"/>
          </parameter>
          <parameter name="col_name" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dump_as_graph"
              c:identifier="gda_meta_struct_dump_as_graph"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <type name="MetaGraphInfo" c:type="GdaMetaGraphInfo"/>
          </parameter>
        </parameters>
      </method>
      <property name="features"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </property>
      <property name="meta-store"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="MetaStore" c:type="GdaMetaStore"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="MetaStructPrivate" c:type="GdaMetaStructPrivate*"/>
      </field>
    </class>
    <record name="MetaStructClass"
            c:type="GdaMetaStructClass"
            glib:is-gtype-struct-for="MetaStruct">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="MetaStructError"
                 c:type="GdaMetaStructError"
                 glib:error-quark="gda_meta_struct_error_quark">
      <member name="unknown_object_error"
              value="0"
              c:identifier="GDA_META_STRUCT_UNKNOWN_OBJECT_ERROR"/>
      <member name="duplicate_object_error"
              value="1"
              c:identifier="GDA_META_STRUCT_DUPLICATE_OBJECT_ERROR"/>
      <member name="incoherence_error"
              value="2"
              c:identifier="GDA_META_STRUCT_INCOHERENCE_ERROR"/>
    </enumeration>
    <bitfield name="MetaStructFeature" c:type="GdaMetaStructFeature">
      <member name="none"
              value="0"
              c:identifier="GDA_META_STRUCT_FEATURE_NONE"/>
      <member name="foreign_keys"
              value="1"
              c:identifier="GDA_META_STRUCT_FEATURE_FOREIGN_KEYS"/>
      <member name="view_dependencies"
              value="2"
              c:identifier="GDA_META_STRUCT_FEATURE_VIEW_DEPENDENCIES"/>
      <member name="all" value="3" c:identifier="GDA_META_STRUCT_FEATURE_ALL"/>
    </bitfield>
    <record name="MetaStructPrivate" c:type="GdaMetaStructPrivate">
    </record>
    <record name="MetaTable" c:type="GdaMetaTable">
      <doc xml:whitespace="preserve">This structure specifies a #GdaMetaDbObject to represent a table's specific attributes,
its contents must not be modified.</doc>
      <field name="columns" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="pk_cols_array" writable="1">
        <type name="any" c:type="gint*"/>
      </field>
      <field name="pk_cols_nb" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="reverse_fk_list" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="fk_list" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved3" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved4" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <record name="MetaTableColumn" c:type="GdaMetaTableColumn">
      <doc xml:whitespace="preserve">This structure represents a table of view's column, its contents must not be modified.</doc>
      <field name="column_name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="column_type" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="gtype" writable="1">
        <type name="GType" c:type="GType"/>
      </field>
      <field name="pkey" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="nullok" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="default_value" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved3" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved4" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <method name="get_attribute"
              c:identifier="gda_meta_table_column_get_attribute">
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute"
              c:identifier="gda_meta_table_column_set_attribute">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="destroy" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="foreach_attribute"
              c:identifier="gda_meta_table_column_foreach_attribute">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="AttributesManagerFunc"
                  c:type="GdaAttributesManagerFunc"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="MetaTableForeignKey" c:type="GdaMetaTableForeignKey">
      <doc xml:whitespace="preserve">This structure represents a foreign key constraint, its contents must not be modified.</doc>
      <field name="meta_table" writable="1">
        <type name="MetaDbObject" c:type="GdaMetaDbObject*"/>
      </field>
      <field name="depend_on" writable="1">
        <type name="MetaDbObject" c:type="GdaMetaDbObject*"/>
      </field>
      <field name="cols_nb" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="fk_cols_array" writable="1">
        <type name="any" c:type="gint*"/>
      </field>
      <field name="fk_names_array" writable="1">
        <type name="utf8" c:type="gchar**"/>
      </field>
      <field name="ref_pk_cols_array" writable="1">
        <type name="any" c:type="gint*"/>
      </field>
      <field name="ref_pk_names_array" writable="1">
        <type name="utf8" c:type="gchar**"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved3" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved4" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <record name="MetaView" c:type="GdaMetaView">
      <doc xml:whitespace="preserve">This structure specifies a #GdaMetaDbObject to represent a view's specific attributes,
its contents must not be modified.</doc>
      <field name="table" writable="1">
        <type name="MetaTable" c:type="GdaMetaTable"/>
      </field>
      <field name="view_def" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="is_updatable" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved3" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved4" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <record name="Mutex" c:type="GdaMutex">
      <constructor name="new" c:identifier="gda_mutex_new">
        <return-value transfer-ownership="full">
          <type name="Mutex" c:type="GdaMutex*"/>
        </return-value>
      </constructor>
      <method name="lock" c:identifier="gda_mutex_lock">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="trylock" c:identifier="gda_mutex_trylock">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="unlock" c:identifier="gda_mutex_unlock">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="free" c:identifier="gda_mutex_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </record>
    <record name="Numeric"
            c:type="GdaNumeric"
            glib:type-name="GdaNumeric"
            glib:get-type="gda_numeric_get_type">
      <field name="number" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="precision" writable="1">
        <type name="long" c:type="glong"/>
      </field>
      <field name="width" writable="1">
        <type name="long" c:type="glong"/>
      </field>
      <field name="reserved" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <class name="PStmt"
           c:type="GdaPStmt"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GdaPStmt"
           glib:get-type="gda_pstmt_get_type"
           glib:type-struct="PStmtClass">
      <method name="set_gda_statement"
              c:identifier="gda_pstmt_set_gda_statement">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stmt" transfer-ownership="none">
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy_contents" c:identifier="gda_pstmt_copy_contents">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="dest" transfer-ownership="none">
            <type name="PStmt" c:type="GdaPStmt*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_gda_statement"
              c:identifier="gda_pstmt_get_gda_statement">
        <return-value transfer-ownership="full">
          <type name="Statement" c:type="GdaStatement*"/>
        </return-value>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="PStmtPrivate" c:type="GdaPStmtPrivate*"/>
      </field>
      <field name="sql">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="param_ids">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="ncols">
        <type name="int" c:type="gint"/>
      </field>
      <field name="types">
        <type name="any" c:type="GType*"/>
      </field>
      <field name="tmpl_columns">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="_gda_reserved1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2">
        <type name="any" c:type="gpointer"/>
      </field>
    </class>
    <record name="PStmtClass"
            c:type="GdaPStmtClass"
            glib:is-gtype-struct-for="PStmt">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="PStmtPrivate" c:type="GdaPStmtPrivate">
    </record>
    <record name="ProviderInfo" c:type="GdaProviderInfo">
      <field name="id" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="location" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="description" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="dsn_params" writable="1">
        <type name="Set" c:type="GdaSet*"/>
      </field>
      <field name="auth_params" writable="1">
        <type name="Set" c:type="GdaSet*"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved3" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved4" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <record name="QuarkList"
            c:type="GdaQuarkList"
            glib:type-name="GdaQuarkList"
            glib:get-type="gda_quark_list_get_type">
      <constructor name="new" c:identifier="gda_quark_list_new">
        <return-value transfer-ownership="full">
          <type name="QuarkList" c:type="GdaQuarkList*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_string"
                   c:identifier="gda_quark_list_new_from_string">
        <return-value transfer-ownership="full">
          <type name="QuarkList" c:type="GdaQuarkList*"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy" c:identifier="gda_quark_list_copy">
        <return-value transfer-ownership="full">
          <type name="QuarkList" c:type="GdaQuarkList*"/>
        </return-value>
      </method>
      <method name="free" c:identifier="gda_quark_list_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="add_from_string"
              c:identifier="gda_quark_list_add_from_string">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cleanup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="find" c:identifier="gda_quark_list_find">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="gda_quark_list_remove">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear" c:identifier="gda_quark_list_clear">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="foreach" c:identifier="gda_quark_list_foreach">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="GLib.HFunc" c:type="GHFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <class name="RepetitiveStatement"
           c:type="GdaRepetitiveStatement"
           parent="GObject.Object"
           glib:type-name="GdaRepetitiveStatement"
           glib:get-type="gda_repetitive_statement_get_type"
           glib:type-struct="RepetitiveStatementClass">
      <constructor name="new" c:identifier="gda_repetitive_statement_new">
        <return-value transfer-ownership="full">
          <type name="RepetitiveStatement" c:type="GdaRepetitiveStatement*"/>
        </return-value>
        <parameters>
          <parameter name="stmt" transfer-ownership="none">
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_template_set"
              c:identifier="gda_repetitive_statement_get_template_set"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="set" transfer-ownership="none">
            <type name="Set" c:type="GdaSet**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_all_sets"
              c:identifier="gda_repetitive_statement_get_all_sets">
        <return-value transfer-ownership="full">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <method name="append_set"
              c:identifier="gda_repetitive_statement_append_set">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="values" transfer-ownership="none">
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
          <parameter name="make_copy" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="statement"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Statement" c:type="GdaStatement"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="RepetitiveStatementClass"
            c:type="GdaRepetitiveStatementClass"
            glib:is-gtype-struct-for="RepetitiveStatement">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Row"
           c:type="GdaRow"
           parent="GObject.Object"
           glib:type-name="GdaRow"
           glib:get-type="gda_row_get_type"
           glib:type-struct="RowClass">
      <constructor name="new" c:identifier="gda_row_new">
        <return-value transfer-ownership="full">
          <type name="Row" c:type="GdaRow*"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_length" c:identifier="gda_row_get_length">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_value" c:identifier="gda_row_get_value">
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="num" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="invalidate_value" c:identifier="gda_row_invalidate_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="value_is_valid" c:identifier="gda_row_value_is_valid">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <property name="nb-values"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="RowPrivate" c:type="GdaRowPrivate*"/>
      </field>
    </class>
    <record name="RowClass"
            c:type="GdaRowClass"
            glib:is-gtype-struct-for="Row">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="RowPrivate" c:type="GdaRowPrivate">
    </record>
    <constant name="SQLSTATE_GENERAL_ERROR" value="HY000">
      <type name="utf8"/>
    </constant>
    <constant name="SQLSTATE_NO_ERROR" value="00000">
      <type name="utf8"/>
    </constant>
    <class name="ServerOperation"
           c:type="GdaServerOperation"
           parent="GObject.Object"
           glib:type-name="GdaServerOperation"
           glib:get-type="gda_server_operation_get_type"
           glib:type-struct="ServerOperationClass">
      <constructor name="new" c:identifier="gda_server_operation_new">
        <return-value transfer-ownership="full">
          <type name="ServerOperation" c:type="GdaServerOperation*"/>
        </return-value>
        <parameters>
          <parameter name="op_type" transfer-ownership="none">
            <type name="ServerOperationType" c:type="GdaServerOperationType"/>
          </parameter>
          <parameter name="xml_file" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="op_type_to_string"
                c:identifier="gda_server_operation_op_type_to_string">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="ServerOperationType" c:type="GdaServerOperationType"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="seq_item_added">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="seq_path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="item_index" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="seq_item_remove">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="seq_path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="item_index" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_op_type"
              c:identifier="gda_server_operation_get_op_type">
        <return-value transfer-ownership="full">
          <type name="ServerOperationType" c:type="GdaServerOperationType"/>
        </return-value>
      </method>
      <method name="get_node_info"
              c:identifier="gda_server_operation_get_node_info"
              introspectable="0">
        <return-value transfer-ownership="full">
          <type name="ServerOperationNode" c:type="GdaServerOperationNode*"/>
        </return-value>
        <parameters>
          <parameter name="path_format" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_at"
              c:identifier="gda_server_operation_get_value_at"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="path_format" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="get_sql_identifier_at"
              c:identifier="gda_server_operation_get_sql_identifier_at"
              introspectable="0">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="prov" transfer-ownership="none">
            <type name="ServerProvider" c:type="GdaServerProvider*"/>
          </parameter>
          <parameter name="path_format" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="set_value_at"
              c:identifier="gda_server_operation_set_value_at"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
          <parameter name="path_format" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="save_data_to_xml"
              c:identifier="gda_server_operation_save_data_to_xml"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
        </return-value>
      </method>
      <method name="load_data_from_xml"
              c:identifier="gda_server_operation_load_data_from_xml"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="node" transfer-ownership="none">
            <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_root_nodes"
              c:identifier="gda_server_operation_get_root_nodes">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="get_node_type"
              c:identifier="gda_server_operation_get_node_type">
        <return-value transfer-ownership="full">
          <type name="ServerOperationNodeType"
                c:type="GdaServerOperationNodeType"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="status" transfer-ownership="none">
            <type name="ServerOperationNodeStatus"
                  c:type="GdaServerOperationNodeStatus*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_node_parent"
              c:identifier="gda_server_operation_get_node_parent">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_node_path_portion"
              c:identifier="gda_server_operation_get_node_path_portion">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sequence_name"
              c:identifier="gda_server_operation_get_sequence_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sequence_size"
              c:identifier="gda_server_operation_get_sequence_size">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sequence_max_size"
              c:identifier="gda_server_operation_get_sequence_max_size">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sequence_min_size"
              c:identifier="gda_server_operation_get_sequence_min_size">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sequence_item_names"
              c:identifier="gda_server_operation_get_sequence_item_names">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_item_to_sequence"
              c:identifier="gda_server_operation_add_item_to_sequence">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="del_item_from_sequence"
              c:identifier="gda_server_operation_del_item_from_sequence">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="item_path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_valid"
              c:identifier="gda_server_operation_is_valid"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="xml_file" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="connection"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Connection" c:type="GdaConnection"/>
      </property>
      <property name="op-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <property name="provider"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="ServerProvider" c:type="GdaServerProvider"/>
      </property>
      <property name="spec-filename"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ServerOperationPrivate"
              c:type="GdaServerOperationPrivate*"/>
      </field>
      <glib:signal name="sequence-item-added">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="sequence-item-remove">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ServerOperationClass"
            c:type="GdaServerOperationClass"
            glib:is-gtype-struct-for="ServerOperation">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="seq_item_added">
        <callback name="seq_item_added" c:type="seq_item_added">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="op" transfer-ownership="none">
              <type name="ServerOperation" c:type="GdaServerOperation*"/>
            </parameter>
            <parameter name="seq_path" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="item_index" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="seq_item_remove">
        <callback name="seq_item_remove" c:type="seq_item_remove">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="op" transfer-ownership="none">
              <type name="ServerOperation" c:type="GdaServerOperation*"/>
            </parameter>
            <parameter name="seq_path" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="item_index" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ServerOperationNode" c:type="_GdaServerOperationNode">
      <field name="type" writable="1">
        <type name="ServerOperationNodeType"
              c:type="GdaServerOperationNodeType"/>
      </field>
      <field name="status" writable="1">
        <type name="ServerOperationNodeStatus"
              c:type="GdaServerOperationNodeStatus"/>
      </field>
      <field name="plist" writable="1">
        <type name="Set" c:type="GdaSet*"/>
      </field>
      <field name="model" writable="1">
        <type name="DataModel" c:type="GdaDataModel*"/>
      </field>
      <field name="column" writable="1">
        <type name="Column" c:type="GdaColumn*"/>
      </field>
      <field name="param" writable="1">
        <type name="Holder" c:type="GdaHolder*"/>
      </field>
      <field name="priv" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <enumeration name="ServerOperationNodeStatus"
                 c:type="GdaServerOperationNodeStatus">
      <member name="optional"
              value="0"
              c:identifier="GDA_SERVER_OPERATION_STATUS_OPTIONAL"/>
      <member name="required"
              value="1"
              c:identifier="GDA_SERVER_OPERATION_STATUS_REQUIRED"/>
      <member name="unknown"
              value="2"
              c:identifier="GDA_SERVER_OPERATION_STATUS_UNKNOWN"/>
    </enumeration>
    <enumeration name="ServerOperationNodeType"
                 c:type="GdaServerOperationNodeType">
      <member name="paramlist"
              value="0"
              c:identifier="GDA_SERVER_OPERATION_NODE_PARAMLIST"/>
      <member name="data_model"
              value="1"
              c:identifier="GDA_SERVER_OPERATION_NODE_DATA_MODEL"/>
      <member name="param"
              value="2"
              c:identifier="GDA_SERVER_OPERATION_NODE_PARAM"/>
      <member name="sequence"
              value="3"
              c:identifier="GDA_SERVER_OPERATION_NODE_SEQUENCE"/>
      <member name="sequence_item"
              value="4"
              c:identifier="GDA_SERVER_OPERATION_NODE_SEQUENCE_ITEM"/>
      <member name="data_model_column"
              value="5"
              c:identifier="GDA_SERVER_OPERATION_NODE_DATA_MODEL_COLUMN"/>
      <member name="unknown"
              value="6"
              c:identifier="GDA_SERVER_OPERATION_NODE_UNKNOWN"/>
    </enumeration>
    <record name="ServerOperationPrivate" c:type="GdaServerOperationPrivate">
    </record>
    <enumeration name="ServerOperationType" c:type="GdaServerOperationType">
      <member name="create_db"
              value="0"
              c:identifier="GDA_SERVER_OPERATION_CREATE_DB"/>
      <member name="drop_db"
              value="1"
              c:identifier="GDA_SERVER_OPERATION_DROP_DB"/>
      <member name="create_table"
              value="2"
              c:identifier="GDA_SERVER_OPERATION_CREATE_TABLE"/>
      <member name="drop_table"
              value="3"
              c:identifier="GDA_SERVER_OPERATION_DROP_TABLE"/>
      <member name="rename_table"
              value="4"
              c:identifier="GDA_SERVER_OPERATION_RENAME_TABLE"/>
      <member name="add_column"
              value="5"
              c:identifier="GDA_SERVER_OPERATION_ADD_COLUMN"/>
      <member name="drop_column"
              value="6"
              c:identifier="GDA_SERVER_OPERATION_DROP_COLUMN"/>
      <member name="create_index"
              value="7"
              c:identifier="GDA_SERVER_OPERATION_CREATE_INDEX"/>
      <member name="drop_index"
              value="8"
              c:identifier="GDA_SERVER_OPERATION_DROP_INDEX"/>
      <member name="create_view"
              value="9"
              c:identifier="GDA_SERVER_OPERATION_CREATE_VIEW"/>
      <member name="drop_view"
              value="10"
              c:identifier="GDA_SERVER_OPERATION_DROP_VIEW"/>
      <member name="comment_table"
              value="11"
              c:identifier="GDA_SERVER_OPERATION_COMMENT_TABLE"/>
      <member name="comment_column"
              value="12"
              c:identifier="GDA_SERVER_OPERATION_COMMENT_COLUMN"/>
      <member name="last" value="13" c:identifier="GDA_SERVER_OPERATION_LAST"/>
    </enumeration>
    <class name="ServerProvider"
           c:type="GdaServerProvider"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GdaServerProvider"
           glib:get-type="gda_server_provider_get_type"
           glib:type-struct="ServerProviderClass">
      <function name="get_schema_nb_columns"
                c:identifier="gda_server_provider_get_schema_nb_columns">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="schema" transfer-ownership="none">
            <type name="ConnectionSchema" c:type="GdaConnectionSchema"/>
          </parameter>
        </parameters>
      </function>
      <function name="init_schema_model"
                c:identifier="gda_server_provider_init_schema_model">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <type name="DataModel" c:type="GdaDataModel*"/>
          </parameter>
          <parameter name="schema" transfer-ownership="none">
            <type name="ConnectionSchema" c:type="GdaConnectionSchema"/>
          </parameter>
        </parameters>
      </function>
      <function name="test_schema_model"
                c:identifier="gda_server_provider_test_schema_model"
                throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <type name="DataModel" c:type="GdaDataModel*"/>
          </parameter>
          <parameter name="schema" transfer-ownership="none">
            <type name="ConnectionSchema" c:type="GdaConnectionSchema"/>
          </parameter>
        </parameters>
      </function>
      <function name="load_file_contents"
                c:identifier="gda_server_provider_load_file_contents">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="inst_dir" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="data_dir" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="get_name" invoker="get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_version" invoker="get_version">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_server_version" invoker="get_server_version">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="supports_feature" invoker="supports_feature">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="feature" transfer-ownership="none">
            <type name="ConnectionFeature" c:type="GdaConnectionFeature"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_data_handler">
        <return-value transfer-ownership="full">
          <type name="DataHandler" c:type="GdaDataHandler*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="g_type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="dbms_type" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_def_dbms_type">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="g_type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="escape_string" invoker="escape_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="str" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unescape_string" invoker="unescape_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="str" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="open_connection">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="params" transfer-ownership="none">
            <type name="QuarkList" c:type="GdaQuarkList*"/>
          </parameter>
          <parameter name="auth" transfer-ownership="none">
            <type name="QuarkList" c:type="GdaQuarkList*"/>
          </parameter>
          <parameter name="task_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint" c:type="guint*"/>
          </parameter>
          <parameter name="async_cb" transfer-ownership="none">
            <type name="ServerProviderAsyncCallback"
                  c:type="GdaServerProviderAsyncCallback"/>
          </parameter>
          <parameter name="cb_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_connection">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_database">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="supports_operation" invoker="supports_operation">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="ServerOperationType" c:type="GdaServerOperationType"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_operation"
                      invoker="create_operation"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="ServerOperation" c:type="GdaServerOperation*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="ServerOperationType" c:type="GdaServerOperationType"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="render_operation"
                      invoker="render_operation"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="op" transfer-ownership="none">
            <type name="ServerOperation" c:type="GdaServerOperation*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="perform_operation" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="op" transfer-ownership="none">
            <type name="ServerOperation" c:type="GdaServerOperation*"/>
          </parameter>
          <parameter name="task_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint" c:type="guint*"/>
          </parameter>
          <parameter name="async_cb" transfer-ownership="none">
            <type name="ServerProviderAsyncCallback"
                  c:type="GdaServerProviderAsyncCallback"/>
          </parameter>
          <parameter name="cb_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="begin_transaction" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="level" transfer-ownership="none">
            <type name="TransactionIsolation"
                  c:type="GdaTransactionIsolation"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="commit_transaction" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="rollback_transaction" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="add_savepoint" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="rollback_savepoint" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="delete_savepoint" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_parser" invoker="create_parser">
        <return-value transfer-ownership="full">
          <type name="SqlParser" c:type="GdaSqlParser*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="statement_to_sql" throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="stmt" transfer-ownership="none">
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
          <parameter name="params" transfer-ownership="none">
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="StatementSqlFlag" c:type="GdaStatementSqlFlag"/>
          </parameter>
          <parameter name="params_used" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList**">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="statement_prepare" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="stmt" transfer-ownership="none">
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="statement_execute" throws="1">
        <return-value transfer-ownership="full">
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="stmt" transfer-ownership="none">
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
          <parameter name="params" transfer-ownership="none">
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
          <parameter name="model_usage" transfer-ownership="none">
            <type name="StatementModelUsage" c:type="GdaStatementModelUsage"/>
          </parameter>
          <parameter name="col_types"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="GType" c:type="GType*"/>
          </parameter>
          <parameter name="last_inserted_row" transfer-ownership="none">
            <type name="Set" c:type="GdaSet**"/>
          </parameter>
          <parameter name="task_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint" c:type="guint*"/>
          </parameter>
          <parameter name="exec_cb" transfer-ownership="none">
            <type name="ServerProviderExecCallback"
                  c:type="GdaServerProviderExecCallback"/>
          </parameter>
          <parameter name="cb_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_busy" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="cancel" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="task_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_connection">
        <return-value transfer-ownership="full">
          <type name="Connection" c:type="GdaConnection*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="identifier_quote">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="for_meta_store" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="force_quotes" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="handle_async" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_name" c:identifier="gda_server_provider_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_version"
              c:identifier="gda_server_provider_get_version">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_server_version"
              c:identifier="gda_server_provider_get_server_version">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
        </parameters>
      </method>
      <method name="supports_feature"
              c:identifier="gda_server_provider_supports_feature">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="feature" transfer-ownership="none">
            <type name="ConnectionFeature" c:type="GdaConnectionFeature"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_data_handler_g_type"
              c:identifier="gda_server_provider_get_data_handler_g_type">
        <return-value transfer-ownership="full">
          <type name="DataHandler" c:type="GdaDataHandler*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="for_type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_data_handler_dbms"
              c:identifier="gda_server_provider_get_data_handler_dbms">
        <return-value transfer-ownership="full">
          <type name="DataHandler" c:type="GdaDataHandler*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="for_type" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="string_to_value"
              c:identifier="gda_server_provider_string_to_value">
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="preferred_type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="dbms_type" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="value_to_sql_string"
              c:identifier="gda_server_provider_value_to_sql_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="from" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_default_dbms_type"
              c:identifier="gda_server_provider_get_default_dbms_type">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="escape_string"
              c:identifier="gda_server_provider_escape_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="str" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unescape_string"
              c:identifier="gda_server_provider_unescape_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="str" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="supports_operation"
              c:identifier="gda_server_provider_supports_operation">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="ServerOperationType" c:type="GdaServerOperationType"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_operation"
              c:identifier="gda_server_provider_create_operation"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="ServerOperation" c:type="GdaServerOperation*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="ServerOperationType" c:type="GdaServerOperationType"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
        </parameters>
      </method>
      <method name="render_operation"
              c:identifier="gda_server_provider_render_operation"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="op" transfer-ownership="none">
            <type name="ServerOperation" c:type="GdaServerOperation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="perform_operation"
              c:identifier="gda_server_provider_perform_operation"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="op" transfer-ownership="none">
            <type name="ServerOperation" c:type="GdaServerOperation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_parser"
              c:identifier="gda_server_provider_create_parser">
        <return-value transfer-ownership="full">
          <type name="SqlParser" c:type="GdaSqlParser*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
        </parameters>
      </method>
      <method name="internal_get_parser"
              c:identifier="gda_server_provider_internal_get_parser">
        <return-value transfer-ownership="full">
          <type name="SqlParser" c:type="GdaSqlParser*"/>
        </return-value>
      </method>
      <method name="perform_operation_default"
              c:identifier="gda_server_provider_perform_operation_default"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="op" transfer-ownership="none">
            <type name="ServerOperation" c:type="GdaServerOperation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_data_handler_default"
              c:identifier="gda_server_provider_get_data_handler_default">
        <return-value transfer-ownership="full">
          <type name="DataHandler" c:type="GdaDataHandler*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="dbms_type" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="handler_find"
              c:identifier="gda_server_provider_handler_find">
        <return-value transfer-ownership="full">
          <type name="DataHandler" c:type="GdaDataHandler*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="g_type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="dbms_type" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="handler_declare"
              c:identifier="gda_server_provider_handler_declare">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <type name="DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="g_type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="dbms_type" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_file" c:identifier="gda_server_provider_find_file">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="inst_dir" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ServerProviderPrivate" c:type="GdaServerProviderPrivate*"/>
      </field>
    </class>
    <callback name="ServerProviderAsyncCallback"
              c:type="GdaServerProviderAsyncCallback">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="provider" transfer-ownership="none">
          <type name="ServerProvider" c:type="GdaServerProvider*"/>
        </parameter>
        <parameter name="cnc" transfer-ownership="none">
          <type name="Connection" c:type="GdaConnection*"/>
        </parameter>
        <parameter name="task_id" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="result_status" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error" c:type="GError*"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="ServerProviderClass"
            c:type="GdaServerProviderClass"
            glib:is-gtype-struct-for="ServerProvider">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="limiting_thread">
        <type name="GLib.Thread" c:type="GThread*"/>
      </field>
      <field name="get_name">
        <callback name="get_name" c:type="get_name">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_version">
        <callback name="get_version" c:type="get_version">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_server_version">
        <callback name="get_server_version" c:type="get_server_version">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="supports_feature">
        <callback name="supports_feature" c:type="supports_feature">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="feature" transfer-ownership="none">
              <type name="ConnectionFeature" c:type="GdaConnectionFeature"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_data_handler">
        <callback name="get_data_handler" c:type="get_data_handler">
          <return-value transfer-ownership="full">
            <type name="DataHandler" c:type="GdaDataHandler*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="g_type" transfer-ownership="none">
              <type name="GType" c:type="GType"/>
            </parameter>
            <parameter name="dbms_type" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_def_dbms_type">
        <callback name="get_def_dbms_type" c:type="get_def_dbms_type">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="g_type" transfer-ownership="none">
              <type name="GType" c:type="GType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="escape_string">
        <callback name="escape_string" c:type="escape_string">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="str" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unescape_string">
        <callback name="unescape_string" c:type="unescape_string">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="str" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="open_connection">
        <callback name="open_connection" c:type="open_connection">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="params" transfer-ownership="none">
              <type name="QuarkList" c:type="GdaQuarkList*"/>
            </parameter>
            <parameter name="auth" transfer-ownership="none">
              <type name="QuarkList" c:type="GdaQuarkList*"/>
            </parameter>
            <parameter name="task_id"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <type name="uint" c:type="guint*"/>
            </parameter>
            <parameter name="async_cb" transfer-ownership="none">
              <type name="ServerProviderAsyncCallback"
                    c:type="GdaServerProviderAsyncCallback"/>
            </parameter>
            <parameter name="cb_data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_connection">
        <callback name="close_connection" c:type="close_connection">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_database">
        <callback name="get_database" c:type="get_database">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="supports_operation">
        <callback name="supports_operation" c:type="supports_operation">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="ServerOperationType"
                    c:type="GdaServerOperationType"/>
            </parameter>
            <parameter name="options" transfer-ownership="none">
              <type name="Set" c:type="GdaSet*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_operation">
        <callback name="create_operation" c:type="create_operation" throws="1">
          <return-value transfer-ownership="full">
            <type name="ServerOperation" c:type="GdaServerOperation*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="ServerOperationType"
                    c:type="GdaServerOperationType"/>
            </parameter>
            <parameter name="options" transfer-ownership="none">
              <type name="Set" c:type="GdaSet*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="render_operation">
        <callback name="render_operation" c:type="render_operation" throws="1">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="op" transfer-ownership="none">
              <type name="ServerOperation" c:type="GdaServerOperation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="perform_operation">
        <callback name="perform_operation"
                  c:type="perform_operation"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="op" transfer-ownership="none">
              <type name="ServerOperation" c:type="GdaServerOperation*"/>
            </parameter>
            <parameter name="task_id"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <type name="uint" c:type="guint*"/>
            </parameter>
            <parameter name="async_cb" transfer-ownership="none">
              <type name="ServerProviderAsyncCallback"
                    c:type="GdaServerProviderAsyncCallback"/>
            </parameter>
            <parameter name="cb_data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="begin_transaction">
        <callback name="begin_transaction"
                  c:type="begin_transaction"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="level" transfer-ownership="none">
              <type name="TransactionIsolation"
                    c:type="GdaTransactionIsolation"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="commit_transaction">
        <callback name="commit_transaction"
                  c:type="commit_transaction"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="rollback_transaction">
        <callback name="rollback_transaction"
                  c:type="rollback_transaction"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="add_savepoint">
        <callback name="add_savepoint" c:type="add_savepoint" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="rollback_savepoint">
        <callback name="rollback_savepoint"
                  c:type="rollback_savepoint"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="delete_savepoint">
        <callback name="delete_savepoint" c:type="delete_savepoint" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_parser">
        <callback name="create_parser" c:type="create_parser">
          <return-value transfer-ownership="full">
            <type name="SqlParser" c:type="GdaSqlParser*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="statement_to_sql">
        <callback name="statement_to_sql" c:type="statement_to_sql" throws="1">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="stmt" transfer-ownership="none">
              <type name="Statement" c:type="GdaStatement*"/>
            </parameter>
            <parameter name="params" transfer-ownership="none">
              <type name="Set" c:type="GdaSet*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="StatementSqlFlag" c:type="GdaStatementSqlFlag"/>
            </parameter>
            <parameter name="params_used" transfer-ownership="none">
              <type name="GLib.SList" c:type="GSList**">
                <type name="any" c:type="gpointer"/>
              </type>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="statement_prepare">
        <callback name="statement_prepare"
                  c:type="statement_prepare"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="stmt" transfer-ownership="none">
              <type name="Statement" c:type="GdaStatement*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="statement_execute">
        <callback name="statement_execute"
                  c:type="statement_execute"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="GObject.Object" c:type="GObject*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="stmt" transfer-ownership="none">
              <type name="Statement" c:type="GdaStatement*"/>
            </parameter>
            <parameter name="params" transfer-ownership="none">
              <type name="Set" c:type="GdaSet*"/>
            </parameter>
            <parameter name="model_usage" transfer-ownership="none">
              <type name="StatementModelUsage"
                    c:type="GdaStatementModelUsage"/>
            </parameter>
            <parameter name="col_types"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <type name="GType" c:type="GType*"/>
            </parameter>
            <parameter name="last_inserted_row" transfer-ownership="none">
              <type name="Set" c:type="GdaSet**"/>
            </parameter>
            <parameter name="task_id"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <type name="uint" c:type="guint*"/>
            </parameter>
            <parameter name="exec_cb" transfer-ownership="none">
              <type name="ServerProviderExecCallback"
                    c:type="GdaServerProviderExecCallback"/>
            </parameter>
            <parameter name="cb_data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_busy">
        <callback name="is_busy" c:type="is_busy" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="cancel">
        <callback name="cancel" c:type="cancel" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="task_id" transfer-ownership="none">
              <type name="uint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_connection">
        <callback name="create_connection" c:type="create_connection">
          <return-value transfer-ownership="full">
            <type name="Connection" c:type="GdaConnection*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="meta_funcs">
        <type name="ServerProviderMeta" c:type="GdaServerProviderMeta"/>
      </field>
      <field name="xa_funcs">
        <type name="ServerProviderXa" c:type="GdaServerProviderXa*"/>
      </field>
      <field name="identifier_quote">
        <callback name="identifier_quote" c:type="identifier_quote">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="id" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="for_meta_store" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
            <parameter name="force_quotes" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="handle_async">
        <callback name="handle_async" c:type="handle_async" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ServerProvider" c:type="GdaServerProvider*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved5">
        <callback name="gda_reserved5" c:type="_gda_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved6">
        <callback name="gda_reserved6" c:type="_gda_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ServerProviderError"
                 c:type="GdaServerProviderError"
                 glib:error-quark="gda_server_provider_error_quark">
      <member name="method_non_implemented_error"
              value="0"
              c:identifier="GDA_SERVER_PROVIDER_METHOD_NON_IMPLEMENTED_ERROR"/>
      <member name="prepare_stmt_error"
              value="1"
              c:identifier="GDA_SERVER_PROVIDER_PREPARE_STMT_ERROR"/>
      <member name="empty_stmt_error"
              value="2"
              c:identifier="GDA_SERVER_PROVIDER_EMPTY_STMT_ERROR"/>
      <member name="missing_param_error"
              value="3"
              c:identifier="GDA_SERVER_PROVIDER_MISSING_PARAM_ERROR"/>
      <member name="statement_exec_error"
              value="4"
              c:identifier="GDA_SERVER_PROVIDER_STATEMENT_EXEC_ERROR"/>
      <member name="operation_error"
              value="5"
              c:identifier="GDA_SERVER_PROVIDER_OPERATION_ERROR"/>
      <member name="internal_error"
              value="6"
              c:identifier="GDA_SERVER_PROVIDER_INTERNAL_ERROR"/>
      <member name="busy_error"
              value="7"
              c:identifier="GDA_SERVER_PROVIDER_BUSY_ERROR"/>
      <member name="non_supported_error"
              value="8"
              c:identifier="GDA_SERVER_PROVIDER_NON_SUPPORTED_ERROR"/>
      <member name="server_version_error"
              value="9"
              c:identifier="GDA_SERVER_PROVIDER_SERVER_VERSION_ERROR"/>
      <member name="data_error"
              value="10"
              c:identifier="GDA_SERVER_PROVIDER_DATA_ERROR"/>
    </enumeration>
    <callback name="ServerProviderExecCallback"
              c:type="GdaServerProviderExecCallback">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="provider" transfer-ownership="none">
          <type name="ServerProvider" c:type="GdaServerProvider*"/>
        </parameter>
        <parameter name="cnc" transfer-ownership="none">
          <type name="Connection" c:type="GdaConnection*"/>
        </parameter>
        <parameter name="task_id" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="result_obj" transfer-ownership="none">
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error" c:type="GError*"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="ServerProviderHandlerInfo"
            c:type="GdaServerProviderHandlerInfo">
      <field name="cnc" writable="1">
        <type name="Connection" c:type="GdaConnection*"/>
      </field>
      <field name="g_type" writable="1">
        <type name="GType" c:type="GType"/>
      </field>
      <field name="dbms_type" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
    </record>
    <record name="ServerProviderInfo" c:type="GdaServerProviderInfo">
    </record>
    <record name="ServerProviderMeta" c:type="GdaServerProviderMeta">
      <field name="info">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="btypes">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="udt">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="udt">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="udt_cols">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="udt_cols">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="enums">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="enums">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="domains">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="domains">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="constraints_dom">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="constraints_dom">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="el_types">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="el_types">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="collations">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="collations">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="character_sets">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="character_sets">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="schemata">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="schemata">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="tables_views">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="tables_views">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="columns">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="columns">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="view_cols">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="view_cols">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="constraints_tab">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="constraints_tab">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="constraints_ref">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="constraints_ref">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="key_columns">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="key_columns">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="check_columns">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="check_columns">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="triggers">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="triggers">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="routines">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="routines">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="routine_col">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="routine_col">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="routine_par">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="routine_par">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="indexes_tab">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="indexes_tab">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="index_cols">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="index_cols">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved5">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved6">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved7">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved8">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved9">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved10">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved11">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved12">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved13">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved14">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved15">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved16">
        <type name="any" c:type="pointer"/>
      </field>
    </record>
    <record name="ServerProviderPrivate" c:type="GdaServerProviderPrivate">
      <field name="data_handlers" writable="1">
        <type name="GLib.HashTable" c:type="GHashTable*"/>
      </field>
      <field name="parser" writable="1">
        <type name="SqlParser" c:type="GdaSqlParser*"/>
      </field>
    </record>
    <record name="ServerProviderXa" c:type="GdaServerProviderXa">
      <field name="xa_start">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="xa_end">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="xa_prepare">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="xa_commit">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="xa_rollback">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="xa_recover">
        <type name="any" c:type="pointer"/>
      </field>
    </record>
    <class name="Set"
           c:type="GdaSet"
           parent="GObject.Object"
           glib:type-name="GdaSet"
           glib:get-type="gda_set_get_type"
           glib:type-struct="SetClass">
      <constructor name="new" c:identifier="gda_set_new">
        <doc xml:whitespace="preserve">Creates a new #GdaSet object, and populates it with the list given as argument.
The list can then be freed as it is copied. All the value holders in @holders are referenced counted
and modified, so they should not be used anymore afterwards.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #GdaSet object</doc>
          <type name="Set" c:type="GdaSet*"/>
        </return-value>
        <parameters>
          <parameter name="holders" transfer-ownership="none">
            <doc xml:whitespace="preserve">a list of #GdaHolder objects</doc>
            <type name="GLib.SList" c:type="GSList*">
              <type name="Holder"/>
            </type>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_inline"
                   c:identifier="gda_set_new_inline"
                   introspectable="0">
        <doc xml:whitespace="preserve">Creates a new #GdaSet containing holders defined by each triplet in ...
For each triplet (id, Glib type and value), 
the value must be of the correct type (gchar * if type is G_STRING, ...)
Note that this function is a utility function and that only a limited set of types are supported. Trying
to use an unsupported type will result in a warning, and the returned value holder holding a safe default
value.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #GdaSet object</doc>
          <type name="Set" c:type="GdaSet*"/>
        </return-value>
        <parameters>
          <parameter name="nb" transfer-ownership="none">
            <doc xml:whitespace="preserve">the number of value holders which will be contained in the new #GdaSet</doc>
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_spec_string"
                   c:identifier="gda_set_new_from_spec_string"
                   throws="1">
        <doc xml:whitespace="preserve">Creates a new #GdaSet object from the @xml_spec
specifications</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new object, or %NULL if an error occurred</doc>
          <type name="Set" c:type="GdaSet*"/>
        </return-value>
        <parameters>
          <parameter name="xml_spec" transfer-ownership="none">
            <doc xml:whitespace="preserve">a string</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_spec_node"
                   c:identifier="gda_set_new_from_spec_node"
                   throws="1">
        <doc xml:whitespace="preserve">Creates a new #GdaSet object from the @xml_spec
specifications</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new object, or %NULL if an error occurred</doc>
          <type name="Set" c:type="GdaSet*"/>
        </return-value>
        <parameters>
          <parameter name="xml_spec" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #xmlNodePtr for a &amp;lt;holders&amp;gt; tag</doc>
            <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy" c:identifier="gda_set_copy">
        <doc xml:whitespace="preserve">Creates a new #GdaSet object, copy of @set</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #GdaSet object</doc>
          <type name="Set" c:type="GdaSet*"/>
        </return-value>
      </method>
      <method name="set_holder_value"
              c:identifier="gda_set_set_holder_value"
              introspectable="0">
        <doc xml:whitespace="preserve">Set the value of the #GdaHolder which ID is @holder_id to a specified value</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if no error occurred and the value was set correctly</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="error" transfer-ownership="none">
            <doc xml:whitespace="preserve">a place to store errors, or %NULL</doc>
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
          <parameter name="holder_id" transfer-ownership="none">
            <doc xml:whitespace="preserve">the ID of the holder to set the value</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="get_holder_value" c:identifier="gda_set_get_holder_value">
        <doc xml:whitespace="preserve">Get the value of the #GdaHolder which ID is @holder_id</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the requested GValue, or %NULL (see gda_holder_get_value())</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="holder_id" transfer-ownership="none">
            <doc xml:whitespace="preserve">the ID of the holder to set the value</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_holder" c:identifier="gda_set_get_holder">
        <doc xml:whitespace="preserve">Finds a #GdaHolder using its ID</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the requested #GdaHolder or %NULL</doc>
          <type name="Holder" c:type="GdaHolder*"/>
        </return-value>
        <parameters>
          <parameter name="holder_id" transfer-ownership="none">
            <doc xml:whitespace="preserve">the ID of the requested value holder</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_nth_holder"
              c:identifier="gda_set_get_nth_holder"
              version="4.2">
        <doc xml:whitespace="preserve">Finds a #GdaHolder using its position</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the requested #GdaHolder or %NULL</doc>
          <type name="Holder" c:type="GdaHolder*"/>
        </return-value>
        <parameters>
          <parameter name="pos" transfer-ownership="none">
            <doc xml:whitespace="preserve">the position of the requested #GdaHolder, starting at %0</doc>
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_holder" c:identifier="gda_set_add_holder">
        <doc xml:whitespace="preserve">Adds @holder to the list of holders managed within @set.
will not be added to the set (even if @holder's type or value is not the same as the
one already in @set).
with the same ID)</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if @holder has been added to @set (and FALSE if it has not been added because there is another #GdaHolder</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="holder" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaHolder object</doc>
            <type name="Holder" c:type="GdaHolder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_holder" c:identifier="gda_set_remove_holder">
        <doc xml:whitespace="preserve">Removes a #GdaHolder from the list of holders managed by @set</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="holder" transfer-ownership="none">
            <doc xml:whitespace="preserve">the #GdaHolder to remove from @set</doc>
            <type name="Holder" c:type="GdaHolder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="merge_with_set" c:identifier="gda_set_merge_with_set">
        <doc xml:whitespace="preserve">Add to @set all the holders of @set_to_merge.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="set_to_merge" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaSet object</doc>
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_valid" c:identifier="gda_set_is_valid" throws="1">
        <doc xml:whitespace="preserve">This method tells if all @set's #GdaHolder objects are valid, and if
they represent a valid combination of values, as defined by rules
error, then the returned value is TRUE, otherwise the return value is FALSE as soon as a signal handler
returns an error.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if the set is valid</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_node" c:identifier="gda_set_get_node">
        <doc xml:whitespace="preserve">Finds a #GdaSetNode holding information for @holder, don't modify the returned structure</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the requested #GdaSetNode or %NULL</doc>
          <type name="SetNode" c:type="GdaSetNode*"/>
        </return-value>
        <parameters>
          <parameter name="holder" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaHolder object</doc>
            <type name="Holder" c:type="GdaHolder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_source_for_model"
              c:identifier="gda_set_get_source_for_model">
        <doc xml:whitespace="preserve">Finds the #GdaSetSource structure used in @set for which @model is a
the data model (the returned structure should not be modified).</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the requested #GdaSetSource pointer or %NULL.</doc>
          <type name="SetSource" c:type="GdaSetSource*"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaDataModel object</doc>
            <type name="DataModel" c:type="GdaDataModel*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_source" c:identifier="gda_set_get_source">
        <doc xml:whitespace="preserve">Finds a #GdaSetSource which contains the #GdaDataModel restricting the possible values of</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the requested #GdaSetSource or %NULL</doc>
          <type name="SetSource" c:type="GdaSetSource*"/>
        </return-value>
        <parameters>
          <parameter name="holder" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaHolder object</doc>
            <type name="Holder" c:type="GdaHolder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_group" c:identifier="gda_set_get_group">
        <doc xml:whitespace="preserve">Finds a #GdaSetGroup which lists a  #GdaSetNode containing @holder,
don't modify the returned structure.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the requested #GdaSetGroup or %NULL</doc>
          <type name="SetGroup" c:type="GdaSetGroup*"/>
        </return-value>
        <parameters>
          <parameter name="holder" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaHolder object</doc>
            <type name="Holder" c:type="GdaHolder*"/>
          </parameter>
        </parameters>
      </method>
      <property name="description" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="holders"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </property>
      <property name="id" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="name" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SetPrivate" c:type="GdaSetPrivate*"/>
      </field>
      <field name="holders">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="nodes_list">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="sources_list">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="groups_list">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <glib:signal name="holder-attr-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Holder" c:type="GdaHolder"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p1" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="holder-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Holder" c:type="GdaHolder"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="public-data-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="validate-holder-change">
        <return-value transfer-ownership="full">
          <type name="Error" c:type="GdaError"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Holder" c:type="GdaHolder"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="validate-set">
        <return-value transfer-ownership="full">
          <type name="Error" c:type="GdaError"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="SetClass"
            c:type="GdaSetClass"
            glib:is-gtype-struct-for="Set">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="validate_holder_change">
        <callback name="validate_holder_change"
                  c:type="validate_holder_change">
          <return-value transfer-ownership="full">
            <type name="GLib.Error" c:type="GError*"/>
          </return-value>
          <parameters>
            <parameter name="set" transfer-ownership="none">
              <type name="Set" c:type="GdaSet*"/>
            </parameter>
            <parameter name="holder" transfer-ownership="none">
              <type name="Holder" c:type="GdaHolder*"/>
            </parameter>
            <parameter name="new_value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="validate_set">
        <callback name="validate_set" c:type="validate_set">
          <return-value transfer-ownership="full">
            <type name="GLib.Error" c:type="GError*"/>
          </return-value>
          <parameters>
            <parameter name="set" transfer-ownership="none">
              <type name="Set" c:type="GdaSet*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="holder_changed">
        <callback name="holder_changed" c:type="holder_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="set" transfer-ownership="none">
              <type name="Set" c:type="GdaSet*"/>
            </parameter>
            <parameter name="holder" transfer-ownership="none">
              <type name="Holder" c:type="GdaHolder*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="holder_attr_changed">
        <callback name="holder_attr_changed" c:type="holder_attr_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="set" transfer-ownership="none">
              <type name="Set" c:type="GdaSet*"/>
            </parameter>
            <parameter name="holder" transfer-ownership="none">
              <type name="Holder" c:type="GdaHolder*"/>
            </parameter>
            <parameter name="attr_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="attr_value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="public_data_changed">
        <callback name="public_data_changed" c:type="public_data_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="set" transfer-ownership="none">
              <type name="Set" c:type="GdaSet*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="SetError"
                 c:type="GdaSetError"
                 glib:error-quark="gda_set_error_quark">
      <member name="xml_spec_error"
              value="0"
              c:identifier="GDA_SET_XML_SPEC_ERROR"/>
      <member name="holder_not_found_error"
              value="1"
              c:identifier="GDA_SET_HOLDER_NOT_FOUND_ERROR"/>
      <member name="invalid_error"
              value="2"
              c:identifier="GDA_SET_INVALID_ERROR"/>
    </enumeration>
    <record name="SetGroup" c:type="GdaSetGroup">
      <field name="nodes" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="nodes_source" writable="1">
        <type name="SetSource" c:type="GdaSetSource*"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <record name="SetNode" c:type="GdaSetNode">
      <field name="holder" writable="1">
        <type name="Holder" c:type="GdaHolder*"/>
      </field>
      <field name="source_model" writable="1">
        <type name="DataModel" c:type="GdaDataModel*"/>
      </field>
      <field name="source_column" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <record name="SetPrivate" c:type="GdaSetPrivate">
    </record>
    <record name="SetSource" c:type="GdaSetSource">
      <field name="data_model" writable="1">
        <type name="DataModel" c:type="GdaDataModel*"/>
      </field>
      <field name="nodes" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved3" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved4" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <record name="SqlAnyPart" c:type="GdaSqlAnyPart">
      <field name="type" writable="1">
        <type name="SqlAnyPartType" c:type="GdaSqlAnyPartType"/>
      </field>
      <field name="parent" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart*"/>
      </field>
      <method name="foreach"
              c:identifier="gda_sql_any_part_foreach"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="SqlForeachFunc" c:type="GdaSqlForeachFunc"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="check_structure"
              c:identifier="gda_sql_any_part_check_structure"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
    </record>
    <enumeration name="SqlAnyPartType" c:type="GdaSqlAnyPartType">
      <member name="stmt_select"
              value="0"
              c:identifier="GDA_SQL_ANY_STMT_SELECT"/>
      <member name="stmt_insert"
              value="1"
              c:identifier="GDA_SQL_ANY_STMT_INSERT"/>
      <member name="stmt_update"
              value="2"
              c:identifier="GDA_SQL_ANY_STMT_UPDATE"/>
      <member name="stmt_delete"
              value="3"
              c:identifier="GDA_SQL_ANY_STMT_DELETE"/>
      <member name="stmt_compound"
              value="4"
              c:identifier="GDA_SQL_ANY_STMT_COMPOUND"/>
      <member name="stmt_begin"
              value="5"
              c:identifier="GDA_SQL_ANY_STMT_BEGIN"/>
      <member name="stmt_rollback"
              value="6"
              c:identifier="GDA_SQL_ANY_STMT_ROLLBACK"/>
      <member name="stmt_commit"
              value="7"
              c:identifier="GDA_SQL_ANY_STMT_COMMIT"/>
      <member name="stmt_savepoint"
              value="8"
              c:identifier="GDA_SQL_ANY_STMT_SAVEPOINT"/>
      <member name="stmt_rollback_savepoint"
              value="9"
              c:identifier="GDA_SQL_ANY_STMT_ROLLBACK_SAVEPOINT"/>
      <member name="stmt_delete_savepoint"
              value="10"
              c:identifier="GDA_SQL_ANY_STMT_DELETE_SAVEPOINT"/>
      <member name="stmt_unknown"
              value="11"
              c:identifier="GDA_SQL_ANY_STMT_UNKNOWN"/>
      <member name="expr" value="500" c:identifier="GDA_SQL_ANY_EXPR"/>
      <member name="sql_field"
              value="501"
              c:identifier="GDA_SQL_ANY_SQL_FIELD"/>
      <member name="sql_table"
              value="502"
              c:identifier="GDA_SQL_ANY_SQL_TABLE"/>
      <member name="sql_function"
              value="503"
              c:identifier="GDA_SQL_ANY_SQL_FUNCTION"/>
      <member name="sql_operation"
              value="504"
              c:identifier="GDA_SQL_ANY_SQL_OPERATION"/>
      <member name="sql_case" value="505" c:identifier="GDA_SQL_ANY_SQL_CASE"/>
      <member name="sql_select_field"
              value="506"
              c:identifier="GDA_SQL_ANY_SQL_SELECT_FIELD"/>
      <member name="sql_select_target"
              value="507"
              c:identifier="GDA_SQL_ANY_SQL_SELECT_TARGET"/>
      <member name="sql_select_join"
              value="508"
              c:identifier="GDA_SQL_ANY_SQL_SELECT_JOIN"/>
      <member name="sql_select_from"
              value="509"
              c:identifier="GDA_SQL_ANY_SQL_SELECT_FROM"/>
      <member name="sql_select_order"
              value="510"
              c:identifier="GDA_SQL_ANY_SQL_SELECT_ORDER"/>
    </enumeration>
    <class name="SqlBuilder"
           c:type="GdaSqlBuilder"
           parent="GObject.Object"
           glib:type-name="GdaSqlBuilder"
           glib:get-type="gda_sql_builder_get_type"
           glib:type-struct="SqlBuilderClass">
      <constructor name="new" c:identifier="gda_sql_builder_new">
        <return-value transfer-ownership="full">
          <type name="SqlBuilder" c:type="GdaSqlBuilder*"/>
        </return-value>
        <parameters>
          <parameter name="stmt_type" transfer-ownership="none">
            <type name="SqlStatementType" c:type="GdaSqlStatementType"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_statement"
              c:identifier="gda_sql_builder_get_statement"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="Statement" c:type="GdaStatement*"/>
        </return-value>
      </method>
      <method name="get_sql_statement"
              c:identifier="gda_sql_builder_get_sql_statement">
        <return-value transfer-ownership="full">
          <type name="SqlStatement" c:type="GdaSqlStatement*"/>
        </return-value>
      </method>
      <method name="add_id" c:identifier="gda_sql_builder_add_id">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_expr"
              c:identifier="gda_sql_builder_add_expr"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <type name="DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="add_expr_value"
              c:identifier="gda_sql_builder_add_expr_value">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <type name="DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_param" c:identifier="gda_sql_builder_add_param">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="param_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="nullok" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_cond" c:identifier="gda_sql_builder_add_cond">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="op" transfer-ownership="none">
            <type name="SqlOperatorType" c:type="GdaSqlOperatorType"/>
          </parameter>
          <parameter name="op1" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="op2" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="op3" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_cond_v" c:identifier="gda_sql_builder_add_cond_v">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="op" transfer-ownership="none">
            <type name="SqlOperatorType" c:type="GdaSqlOperatorType"/>
          </parameter>
          <parameter name="op_ids"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <type name="uint" c:type="guint*"/>
          </parameter>
          <parameter name="op_ids_size" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_function"
              c:identifier="gda_sql_builder_add_function"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="func_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="add_function_v"
              c:identifier="gda_sql_builder_add_function_v">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="func_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="args"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <type name="uint" c:type="guint*"/>
          </parameter>
          <parameter name="args_size" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_sub_select"
              c:identifier="gda_sql_builder_add_sub_select">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="sqlst" transfer-ownership="none">
            <type name="SqlStatement" c:type="GdaSqlStatement*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_case"
              c:identifier="gda_sql_builder_add_case"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="test_expr" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="else_expr" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="add_case_v" c:identifier="gda_sql_builder_add_case_v">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="test_expr" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="else_expr" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="when_array"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <type name="uint" c:type="guint*"/>
          </parameter>
          <parameter name="then_array"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <type name="uint" c:type="guint*"/>
          </parameter>
          <parameter name="args_size" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_field"
              c:identifier="gda_sql_builder_add_field"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="field_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="add_field_value"
              c:identifier="gda_sql_builder_add_field_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="field_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_table" c:identifier="gda_sql_builder_set_table">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="table_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_where" c:identifier="gda_sql_builder_set_where">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cond_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_field_id" c:identifier="gda_sql_builder_add_field_id">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="field_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="value_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_add_field"
              c:identifier="gda_sql_builder_select_add_field">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="field_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="table_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="alias" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_add_target"
              c:identifier="gda_sql_builder_select_add_target">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="table_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="alias" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_add_target_id"
              c:identifier="gda_sql_builder_select_add_target_id">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="table_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="alias" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_join_targets"
              c:identifier="gda_sql_builder_select_join_targets">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="left_target_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="right_target_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="join_type" transfer-ownership="none">
            <type name="SqlSelectJoinType" c:type="GdaSqlSelectJoinType"/>
          </parameter>
          <parameter name="join_expr" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="join_add_field"
              c:identifier="gda_sql_builder_join_add_field">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="join_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="field_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_order_by"
              c:identifier="gda_sql_builder_select_order_by">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="expr_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="asc" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="collation_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_set_distinct"
              c:identifier="gda_sql_builder_select_set_distinct">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="distinct" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="expr_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_set_limit"
              c:identifier="gda_sql_builder_select_set_limit">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="limit_count_expr_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="limit_offest_expr_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_set_having"
              c:identifier="gda_sql_builder_select_set_having">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cond_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_group_by"
              c:identifier="gda_sql_builder_select_group_by">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="expr_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="compound_set_type"
              c:identifier="gda_sql_builder_compound_set_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="compound_type" transfer-ownership="none">
            <type name="SqlStatementCompoundType"
                  c:type="GdaSqlStatementCompoundType"/>
          </parameter>
        </parameters>
      </method>
      <method name="compound_add_sub_select"
              c:identifier="gda_sql_builder_compound_add_sub_select">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="sqlst" transfer-ownership="none">
            <type name="SqlStatement" c:type="GdaSqlStatement*"/>
          </parameter>
        </parameters>
      </method>
      <method name="export_expression"
              c:identifier="gda_sql_builder_export_expression">
        <return-value transfer-ownership="full">
          <type name="SqlExpr" c:type="GdaSqlExpr*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="import_expression"
              c:identifier="gda_sql_builder_import_expression">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="expr" transfer-ownership="none">
            <type name="SqlExpr" c:type="GdaSqlExpr*"/>
          </parameter>
        </parameters>
      </method>
      <property name="stmt-type"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="SqlStatementType" c:type="GdaSqlStatementType"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SqlBuilderPrivate" c:type="GdaSqlBuilderPrivate*"/>
      </field>
    </class>
    <record name="SqlBuilderClass"
            c:type="GdaSqlBuilderClass"
            glib:is-gtype-struct-for="SqlBuilder">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="SqlBuilderError"
                 c:type="GdaSqlBuilderError"
                 glib:error-quark="gda_sql_builder_error_quark">
      <member name="wrong_type_error"
              value="0"
              c:identifier="GDA_SQL_BUILDER_WRONG_TYPE_ERROR"/>
      <member name="misuse_error"
              value="1"
              c:identifier="GDA_SQL_BUILDER_MISUSE_ERROR"/>
    </enumeration>
    <record name="SqlBuilderPrivate" c:type="GdaSqlBuilderPrivate">
    </record>
    <record name="SqlCase" c:type="GdaSqlCase">
      <field name="any" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart"/>
      </field>
      <field name="base_expr" writable="1">
        <type name="SqlExpr" c:type="GdaSqlExpr*"/>
      </field>
      <field name="when_expr_list" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="then_expr_list" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="else_expr" writable="1">
        <type name="SqlExpr" c:type="GdaSqlExpr*"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <constructor name="new" c:identifier="gda_sql_case_new">
        <return-value transfer-ownership="full">
          <type name="SqlCase" c:type="GdaSqlCase*"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="SqlAnyPart" c:type="GdaSqlAnyPart*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="gda_sql_case_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="copy" c:identifier="gda_sql_case_copy">
        <return-value transfer-ownership="full">
          <type name="SqlCase" c:type="GdaSqlCase*"/>
        </return-value>
      </method>
      <method name="serialize" c:identifier="gda_sql_case_serialize">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
    </record>
    <enumeration name="SqlError"
                 c:type="GdaSqlError"
                 glib:error-quark="gda_sql_error_quark">
      <member name="structure_contents_error"
              value="0"
              c:identifier="GDA_SQL_STRUCTURE_CONTENTS_ERROR"/>
      <member name="malformed_identifier_error"
              value="1"
              c:identifier="GDA_SQL_MALFORMED_IDENTIFIER_ERROR"/>
      <member name="missing_identifier_error"
              value="2"
              c:identifier="GDA_SQL_MISSING_IDENTIFIER_ERROR"/>
      <member name="validation_error"
              value="3"
              c:identifier="GDA_SQL_VALIDATION_ERROR"/>
    </enumeration>
    <record name="SqlExpr"
            c:type="GdaSqlExpr"
            glib:type-name="GdaSqlExpr"
            glib:get-type="gda_sql_expr_get_type">
      <field name="any" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart"/>
      </field>
      <field name="value" writable="1">
        <type name="GObject.Value" c:type="GValue*"/>
      </field>
      <field name="param_spec" writable="1">
        <type name="SqlParamSpec" c:type="GdaSqlParamSpec*"/>
      </field>
      <field name="func" writable="1">
        <type name="SqlFunction" c:type="GdaSqlFunction*"/>
      </field>
      <field name="cond" writable="1">
        <type name="SqlOperation" c:type="GdaSqlOperation*"/>
      </field>
      <field name="select" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart*"/>
      </field>
      <field name="case_s" writable="1">
        <type name="SqlCase" c:type="GdaSqlCase*"/>
      </field>
      <field name="cast_as" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="value_is_ident" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <constructor name="new" c:identifier="gda_sql_expr_new">
        <return-value transfer-ownership="full">
          <type name="SqlExpr" c:type="GdaSqlExpr*"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="SqlAnyPart" c:type="GdaSqlAnyPart*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="gda_sql_expr_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="copy" c:identifier="gda_sql_expr_copy">
        <return-value transfer-ownership="full">
          <type name="SqlExpr" c:type="GdaSqlExpr*"/>
        </return-value>
      </method>
      <method name="serialize" c:identifier="gda_sql_expr_serialize">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="take_select" c:identifier="gda_sql_expr_take_select">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stmt" transfer-ownership="none">
            <type name="SqlStatement" c:type="GdaSqlStatement*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="SqlField" c:type="GdaSqlField">
      <field name="any" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart"/>
      </field>
      <field name="field_name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="validity_meta_table_column" writable="1">
        <type name="MetaTableColumn" c:type="GdaMetaTableColumn*"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <constructor name="new" c:identifier="gda_sql_field_new">
        <return-value transfer-ownership="full">
          <type name="SqlField" c:type="GdaSqlField*"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="SqlAnyPart" c:type="GdaSqlAnyPart*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="gda_sql_field_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="copy" c:identifier="gda_sql_field_copy">
        <return-value transfer-ownership="full">
          <type name="SqlField" c:type="GdaSqlField*"/>
        </return-value>
      </method>
      <method name="serialize" c:identifier="gda_sql_field_serialize">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="take_name" c:identifier="gda_sql_field_take_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <callback name="SqlForeachFunc" c:type="GdaSqlForeachFunc" throws="1">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter transfer-ownership="none">
          <type name="SqlAnyPart" c:type="GdaSqlAnyPart*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="SqlFunction" c:type="GdaSqlFunction">
      <field name="any" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart"/>
      </field>
      <field name="function_name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="args_list" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <constructor name="new" c:identifier="gda_sql_function_new">
        <return-value transfer-ownership="full">
          <type name="SqlFunction" c:type="GdaSqlFunction*"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="SqlAnyPart" c:type="GdaSqlAnyPart*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="gda_sql_function_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="copy" c:identifier="gda_sql_function_copy">
        <return-value transfer-ownership="full">
          <type name="SqlFunction" c:type="GdaSqlFunction*"/>
        </return-value>
      </method>
      <method name="serialize" c:identifier="gda_sql_function_serialize">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="check_clean" c:identifier="gda_sql_function_check_clean">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="take_name" c:identifier="gda_sql_function_take_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_args_list"
              c:identifier="gda_sql_function_take_args_list">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="args" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
    </record>
    <bitfield name="SqlIdentifierStyle" c:type="GdaSqlIdentifierStyle">
      <member name="lower_case"
              value="1"
              c:identifier="GDA_SQL_IDENTIFIERS_LOWER_CASE"/>
      <member name="upper_case"
              value="2"
              c:identifier="GDA_SQL_IDENTIFIERS_UPPER_CASE"/>
    </bitfield>
    <record name="SqlOperation" c:type="GdaSqlOperation">
      <field name="any" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart"/>
      </field>
      <field name="operator_type" writable="1">
        <type name="SqlOperatorType" c:type="GdaSqlOperatorType"/>
      </field>
      <field name="operands" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <constructor name="new" c:identifier="gda_sql_operation_new">
        <return-value transfer-ownership="full">
          <type name="SqlOperation" c:type="GdaSqlOperation*"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="SqlAnyPart" c:type="GdaSqlAnyPart*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="gda_sql_operation_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="copy" c:identifier="gda_sql_operation_copy">
        <return-value transfer-ownership="full">
          <type name="SqlOperation" c:type="GdaSqlOperation*"/>
        </return-value>
      </method>
      <method name="serialize" c:identifier="gda_sql_operation_serialize">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
    </record>
    <enumeration name="SqlOperatorType" c:type="GdaSqlOperatorType">
      <member name="and" value="0" c:identifier="GDA_SQL_OPERATOR_TYPE_AND"/>
      <member name="or" value="1" c:identifier="GDA_SQL_OPERATOR_TYPE_OR"/>
      <member name="eq" value="2" c:identifier="GDA_SQL_OPERATOR_TYPE_EQ"/>
      <member name="is" value="3" c:identifier="GDA_SQL_OPERATOR_TYPE_IS"/>
      <member name="like" value="4" c:identifier="GDA_SQL_OPERATOR_TYPE_LIKE"/>
      <member name="between"
              value="5"
              c:identifier="GDA_SQL_OPERATOR_TYPE_BETWEEN"/>
      <member name="gt" value="6" c:identifier="GDA_SQL_OPERATOR_TYPE_GT"/>
      <member name="lt" value="7" c:identifier="GDA_SQL_OPERATOR_TYPE_LT"/>
      <member name="geq" value="8" c:identifier="GDA_SQL_OPERATOR_TYPE_GEQ"/>
      <member name="leq" value="9" c:identifier="GDA_SQL_OPERATOR_TYPE_LEQ"/>
      <member name="diff"
              value="10"
              c:identifier="GDA_SQL_OPERATOR_TYPE_DIFF"/>
      <member name="regexp"
              value="11"
              c:identifier="GDA_SQL_OPERATOR_TYPE_REGEXP"/>
      <member name="regexp_ci"
              value="12"
              c:identifier="GDA_SQL_OPERATOR_TYPE_REGEXP_CI"/>
      <member name="not_regexp"
              value="13"
              c:identifier="GDA_SQL_OPERATOR_TYPE_NOT_REGEXP"/>
      <member name="not_regexp_ci"
              value="14"
              c:identifier="GDA_SQL_OPERATOR_TYPE_NOT_REGEXP_CI"/>
      <member name="similar"
              value="15"
              c:identifier="GDA_SQL_OPERATOR_TYPE_SIMILAR"/>
      <member name="isnull"
              value="16"
              c:identifier="GDA_SQL_OPERATOR_TYPE_ISNULL"/>
      <member name="isnotnull"
              value="17"
              c:identifier="GDA_SQL_OPERATOR_TYPE_ISNOTNULL"/>
      <member name="not" value="18" c:identifier="GDA_SQL_OPERATOR_TYPE_NOT"/>
      <member name="in" value="19" c:identifier="GDA_SQL_OPERATOR_TYPE_IN"/>
      <member name="notin"
              value="20"
              c:identifier="GDA_SQL_OPERATOR_TYPE_NOTIN"/>
      <member name="concat"
              value="21"
              c:identifier="GDA_SQL_OPERATOR_TYPE_CONCAT"/>
      <member name="plus"
              value="22"
              c:identifier="GDA_SQL_OPERATOR_TYPE_PLUS"/>
      <member name="minus"
              value="23"
              c:identifier="GDA_SQL_OPERATOR_TYPE_MINUS"/>
      <member name="star"
              value="24"
              c:identifier="GDA_SQL_OPERATOR_TYPE_STAR"/>
      <member name="div" value="25" c:identifier="GDA_SQL_OPERATOR_TYPE_DIV"/>
      <member name="rem" value="26" c:identifier="GDA_SQL_OPERATOR_TYPE_REM"/>
      <member name="bitand"
              value="27"
              c:identifier="GDA_SQL_OPERATOR_TYPE_BITAND"/>
      <member name="bitor"
              value="28"
              c:identifier="GDA_SQL_OPERATOR_TYPE_BITOR"/>
      <member name="bitnot"
              value="29"
              c:identifier="GDA_SQL_OPERATOR_TYPE_BITNOT"/>
    </enumeration>
    <record name="SqlParamSpec" c:type="GdaSqlParamSpec">
      <field name="name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="descr" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="is_param" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="nullok" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="g_type" writable="1">
        <type name="GType" c:type="GType"/>
      </field>
      <field name="validity_meta_dict" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <constructor name="new" c:identifier="gda_sql_param_spec_new">
        <return-value transfer-ownership="full">
          <type name="SqlParamSpec" c:type="GdaSqlParamSpec*"/>
        </return-value>
        <parameters>
          <parameter name="simple_spec" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy" c:identifier="gda_sql_param_spec_copy">
        <return-value transfer-ownership="full">
          <type name="SqlParamSpec" c:type="GdaSqlParamSpec*"/>
        </return-value>
      </method>
      <method name="take_name" c:identifier="gda_sql_param_spec_take_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_type" c:identifier="gda_sql_param_spec_take_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_descr" c:identifier="gda_sql_param_spec_take_descr">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_nullok" c:identifier="gda_sql_param_spec_take_nullok">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="gda_sql_param_spec_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="serialize" c:identifier="gda_sql_param_spec_serialize">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
    </record>
    <class name="SqlParser"
           c:type="GdaSqlParser"
           parent="GObject.Object"
           glib:type-name="GdaSqlParser"
           glib:get-type="gda_sql_parser_get_type"
           glib:type-struct="SqlParserIface">
      <implements name="Lockable"/>
      <constructor name="new" c:identifier="gda_sql_parser_new">
        <doc xml:whitespace="preserve">Creates a new #GdaSqlParser object</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">the new object</doc>
          <type name="SqlParser" c:type="GdaSqlParser*"/>
        </return-value>
      </constructor>
      <method name="parse_string"
              c:identifier="gda_sql_parser_parse_string"
              throws="1">
        <doc xml:whitespace="preserve">contains more than one statement, then the remaining part of the string is not parsed at all, and @remain (if
not %NULL) will point at the first non parsed character.
To include variables in the @sql string, see the
&lt;link linkend="GdaSqlParser.description"&gt;GdaSqlParser's object description&lt;/link&gt;.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #GdaStatement object, or %NULL if an error occurred</doc>
          <type name="Statement" c:type="GdaStatement*"/>
        </return-value>
        <parameters>
          <parameter name="sql" transfer-ownership="none">
            <doc xml:whitespace="preserve">the SQL string to parse</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="remain"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <doc xml:whitespace="preserve">location to store a pointer to remaining part of @sql in case @sql has multiple statement, or %NULL</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_string_as_batch"
              c:identifier="gda_sql_parser_parse_string_as_batch"
              throws="1">
        <doc xml:whitespace="preserve">Parse @sql and creates a #GdaBatch object which contains all the #GdaStatement objects created while parsing (one object
per SQL statement). Empty statements (composed of spaces only) do not appear in the resulting object.
at some point, then the parsing stops and @remain may contain a non %NULL pointer, @error may be set, and %NULL
is returned.
if @sql is %NULL, then the returned #GdaBatch object will contain no statement.
To include variables in the @sql string, see the
&lt;link linkend="GdaSqlParser.description"&gt;GdaSqlParser's object description&lt;/link&gt;.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #GdaBatch object, or %NULL if an error occurred</doc>
          <type name="Batch" c:type="GdaBatch*"/>
        </return-value>
        <parameters>
          <parameter name="sql" transfer-ownership="none">
            <doc xml:whitespace="preserve">the SQL string to parse</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="remain"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <doc xml:whitespace="preserve">location to store a pointer to remaining part of @sql in case an error occurred while parsing @sql, or %NULL</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_file_as_batch"
              c:identifier="gda_sql_parser_parse_file_as_batch"
              throws="1">
        <doc xml:whitespace="preserve">Parse @filename's contents and creates a #GdaBatch object which contains all the
#GdaStatement objects created while parsing (one object per SQL statement).
at some point, then the parsing stops, @error may be set and %NULL is returned
if @sql is %NULL, then the returned #GdaBatch object will contain no statement.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #GdaBatch object, or %NULL if an error occurred</doc>
          <type name="Batch" c:type="GdaBatch*"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:whitespace="preserve">name of the file to parse</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_syntax_error"
              c:identifier="gda_sql_parser_set_syntax_error">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set_overflow_error"
              c:identifier="gda_sql_parser_set_overflow_error">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <property name="column-error" transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <property name="debug"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="line-error" transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <property name="mode" writable="1" transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <property name="tokenizer-flavour"
                writable="1"
                transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SqlParserPrivate" c:type="GdaSqlParserPrivate*"/>
      </field>
    </class>
    <record name="SqlParserClass"
            c:type="GdaSqlParserClass"
            glib:is-gtype-struct-for="SqlParser">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="delim_alloc">
        <callback name="delim_alloc" c:type="delim_alloc">
          <return-value transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </return-value>
          <parameters>
            <parameter transfer-ownership="none">
              <type name="any" c:type="any*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="delim_free">
        <callback name="delim_free" c:type="delim_free">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter transfer-ownership="none">
              <type name="any" c:type="void*"/>
            </parameter>
            <parameter transfer-ownership="none">
              <type name="any" c:type="any*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="delim_trace">
        <callback name="delim_trace" c:type="delim_trace">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter transfer-ownership="none">
              <type name="any" c:type="void*"/>
            </parameter>
            <parameter transfer-ownership="full">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="delim_parse">
        <callback name="delim_parse" c:type="delim_parse">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter transfer-ownership="none">
              <type name="any" c:type="void*"/>
            </parameter>
            <parameter transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
            <parameter transfer-ownership="none">
              <type name="SqlParserIface" c:type="GdaSqlParserIface*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="delim_tokens_trans">
        <type name="any" c:type="gint*"/>
      </field>
      <field name="parser_alloc">
        <callback name="parser_alloc" c:type="parser_alloc">
          <return-value transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </return-value>
          <parameters>
            <parameter transfer-ownership="none">
              <type name="any" c:type="any*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="parser_free">
        <callback name="parser_free" c:type="parser_free">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter transfer-ownership="none">
              <type name="any" c:type="void*"/>
            </parameter>
            <parameter transfer-ownership="none">
              <type name="any" c:type="any*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="parser_trace">
        <callback name="parser_trace" c:type="parser_trace">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter transfer-ownership="none">
              <type name="any" c:type="void*"/>
            </parameter>
            <parameter transfer-ownership="full">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="parser_parse">
        <callback name="parser_parse" c:type="parser_parse">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter transfer-ownership="none">
              <type name="any" c:type="void*"/>
            </parameter>
            <parameter transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
            <parameter transfer-ownership="none">
              <type name="SqlParserIface" c:type="GdaSqlParserIface*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="parser_tokens_trans">
        <type name="any" c:type="gint*"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="SqlParserError"
                 c:type="GdaSqlParserError"
                 glib:error-quark="gda_sql_parser_error_quark">
      <member name="syntax_error"
              value="0"
              c:identifier="GDA_SQL_PARSER_SYNTAX_ERROR"/>
      <member name="overflow_error"
              value="1"
              c:identifier="GDA_SQL_PARSER_OVERFLOW_ERROR"/>
      <member name="empty_sql_error"
              value="2"
              c:identifier="GDA_SQL_PARSER_EMPTY_SQL_ERROR"/>
    </enumeration>
    <enumeration name="SqlParserFlavour" c:type="GdaSqlParserFlavour">
      <member name="standard"
              value="0"
              c:identifier="GDA_SQL_PARSER_FLAVOUR_STANDARD"/>
      <member name="sqlite"
              value="1"
              c:identifier="GDA_SQL_PARSER_FLAVOUR_SQLITE"/>
      <member name="mysql"
              value="2"
              c:identifier="GDA_SQL_PARSER_FLAVOUR_MYSQL"/>
      <member name="oracle"
              value="3"
              c:identifier="GDA_SQL_PARSER_FLAVOUR_ORACLE"/>
      <member name="postgresql"
              value="4"
              c:identifier="GDA_SQL_PARSER_FLAVOUR_POSTGRESQL"/>
    </enumeration>
    <record name="SqlParserIface"
            c:type="_GdaSqlParserIface"
            glib:is-gtype-struct-for="SqlParser">
      <field name="parser">
        <type name="SqlParser" c:type="GdaSqlParser*"/>
      </field>
      <field name="parsed_statement">
        <type name="SqlStatement" c:type="GdaSqlStatement*"/>
      </field>
      <field name="_gda_reserved1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <enumeration name="SqlParserMode" c:type="GdaSqlParserMode">
      <member name="parse" value="0" c:identifier="GDA_SQL_PARSER_MODE_PARSE"/>
      <member name="delimit"
              value="1"
              c:identifier="GDA_SQL_PARSER_MODE_DELIMIT"/>
    </enumeration>
    <record name="SqlParserPrivate" c:type="GdaSqlParserPrivate">
    </record>
    <record name="SqlRenderingContext" c:type="GdaSqlRenderingContext">
      <field name="flags" writable="1">
        <type name="StatementSqlFlag" c:type="GdaStatementSqlFlag"/>
      </field>
      <field name="params" writable="1">
        <type name="Set" c:type="GdaSet*"/>
      </field>
      <field name="params_used" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="provider" writable="1">
        <type name="ServerProvider" c:type="GdaServerProvider*"/>
      </field>
      <field name="cnc" writable="1">
        <type name="Connection" c:type="GdaConnection*"/>
      </field>
      <field name="render_value" writable="1">
        <type name="SqlRenderingValue" c:type="GdaSqlRenderingValue"/>
      </field>
      <field name="render_param_spec" writable="1">
        <type name="SqlRenderingPSpecFunc" c:type="GdaSqlRenderingPSpecFunc"/>
      </field>
      <field name="render_expr" writable="1">
        <type name="SqlRenderingExpr" c:type="GdaSqlRenderingExpr"/>
      </field>
      <field name="render_unknown" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_begin" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_rollback" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_commit" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_savepoint" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_rollback_savepoint" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_delete_savepoint" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_select" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_insert" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_delete" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_update" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_compound" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_field" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_table" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_function" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_operation" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_case" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_select_field" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_select_target" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_select_join" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_select_from" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="render_select_order" writable="1">
        <type name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc"/>
      </field>
      <field name="gda_reserved1">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved2">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved3">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved4">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved5">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved6">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved7">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="gda_reserved8">
        <type name="any" c:type="pointer"/>
      </field>
    </record>
    <callback name="SqlRenderingExpr" c:type="GdaSqlRenderingExpr" throws="1">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="expr" transfer-ownership="none">
          <type name="SqlExpr" c:type="GdaSqlExpr*"/>
        </parameter>
        <parameter name="context" transfer-ownership="none">
          <type name="SqlRenderingContext" c:type="GdaSqlRenderingContext*"/>
        </parameter>
        <parameter name="is_default"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="boolean" c:type="gboolean*"/>
        </parameter>
        <parameter name="is_null"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="boolean" c:type="gboolean*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="SqlRenderingFunc" c:type="GdaSqlRenderingFunc" throws="1">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="node" transfer-ownership="none">
          <type name="SqlAnyPart" c:type="GdaSqlAnyPart*"/>
        </parameter>
        <parameter name="context" transfer-ownership="none">
          <type name="SqlRenderingContext" c:type="GdaSqlRenderingContext*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="SqlRenderingPSpecFunc"
              c:type="GdaSqlRenderingPSpecFunc"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="pspec" transfer-ownership="none">
          <type name="SqlParamSpec" c:type="GdaSqlParamSpec*"/>
        </parameter>
        <parameter name="expr" transfer-ownership="none">
          <type name="SqlExpr" c:type="GdaSqlExpr*"/>
        </parameter>
        <parameter name="context" transfer-ownership="none">
          <type name="SqlRenderingContext" c:type="GdaSqlRenderingContext*"/>
        </parameter>
        <parameter name="is_default"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="boolean" c:type="gboolean*"/>
        </parameter>
        <parameter name="is_null"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="boolean" c:type="gboolean*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="SqlRenderingValue"
              c:type="GdaSqlRenderingValue"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="context" transfer-ownership="none">
          <type name="SqlRenderingContext" c:type="GdaSqlRenderingContext*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="SqlReservedKeywordsFunc"
              c:type="GdaSqlReservedKeywordsFunc">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="word" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </callback>
    <record name="SqlSelectField" c:type="GdaSqlSelectField">
      <field name="any" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart"/>
      </field>
      <field name="expr" writable="1">
        <type name="SqlExpr" c:type="GdaSqlExpr*"/>
      </field>
      <field name="field_name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="table_name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="as" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="validity_meta_object" writable="1">
        <type name="MetaDbObject" c:type="GdaMetaDbObject*"/>
      </field>
      <field name="validity_meta_table_column" writable="1">
        <type name="MetaTableColumn" c:type="GdaMetaTableColumn*"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <constructor name="new" c:identifier="gda_sql_select_field_new">
        <return-value transfer-ownership="full">
          <type name="SqlSelectField" c:type="GdaSqlSelectField*"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="SqlAnyPart" c:type="GdaSqlAnyPart*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="gda_sql_select_field_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="copy" c:identifier="gda_sql_select_field_copy">
        <return-value transfer-ownership="full">
          <type name="SqlSelectField" c:type="GdaSqlSelectField*"/>
        </return-value>
      </method>
      <method name="serialize" c:identifier="gda_sql_select_field_serialize">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="take_star_value"
              c:identifier="gda_sql_select_field_take_star_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_expr" c:identifier="gda_sql_select_field_take_expr">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="expr" transfer-ownership="none">
            <type name="SqlExpr" c:type="GdaSqlExpr*"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_alias" c:identifier="gda_sql_select_field_take_alias">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="alias" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="SqlSelectFrom" c:type="GdaSqlSelectFrom">
      <field name="any" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart"/>
      </field>
      <field name="targets" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="joins" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <constructor name="new" c:identifier="gda_sql_select_from_new">
        <return-value transfer-ownership="full">
          <type name="SqlSelectFrom" c:type="GdaSqlSelectFrom*"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="SqlAnyPart" c:type="GdaSqlAnyPart*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="gda_sql_select_from_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="copy" c:identifier="gda_sql_select_from_copy">
        <return-value transfer-ownership="full">
          <type name="SqlSelectFrom" c:type="GdaSqlSelectFrom*"/>
        </return-value>
      </method>
      <method name="serialize" c:identifier="gda_sql_select_from_serialize">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="take_new_target"
              c:identifier="gda_sql_select_from_take_new_target">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="target" transfer-ownership="none">
            <type name="SqlSelectTarget" c:type="GdaSqlSelectTarget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_new_join"
              c:identifier="gda_sql_select_from_take_new_join">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="join" transfer-ownership="none">
            <type name="SqlSelectJoin" c:type="GdaSqlSelectJoin*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="SqlSelectJoin" c:type="GdaSqlSelectJoin">
      <field name="any" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart"/>
      </field>
      <field name="type" writable="1">
        <type name="SqlSelectJoinType" c:type="GdaSqlSelectJoinType"/>
      </field>
      <field name="position" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="expr" writable="1">
        <type name="SqlExpr" c:type="GdaSqlExpr*"/>
      </field>
      <field name="use" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <constructor name="new" c:identifier="gda_sql_select_join_new">
        <return-value transfer-ownership="full">
          <type name="SqlSelectJoin" c:type="GdaSqlSelectJoin*"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="SqlAnyPart" c:type="GdaSqlAnyPart*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="gda_sql_select_join_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="copy" c:identifier="gda_sql_select_join_copy">
        <return-value transfer-ownership="full">
          <type name="SqlSelectJoin" c:type="GdaSqlSelectJoin*"/>
        </return-value>
      </method>
      <method name="serialize" c:identifier="gda_sql_select_join_serialize">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
    </record>
    <enumeration name="SqlSelectJoinType" c:type="GdaSqlSelectJoinType">
      <member name="cross" value="0" c:identifier="GDA_SQL_SELECT_JOIN_CROSS"/>
      <member name="natural"
              value="1"
              c:identifier="GDA_SQL_SELECT_JOIN_NATURAL"/>
      <member name="inner" value="2" c:identifier="GDA_SQL_SELECT_JOIN_INNER"/>
      <member name="left" value="3" c:identifier="GDA_SQL_SELECT_JOIN_LEFT"/>
      <member name="right" value="4" c:identifier="GDA_SQL_SELECT_JOIN_RIGHT"/>
      <member name="full" value="5" c:identifier="GDA_SQL_SELECT_JOIN_FULL"/>
    </enumeration>
    <record name="SqlSelectOrder" c:type="GdaSqlSelectOrder">
      <field name="any" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart"/>
      </field>
      <field name="expr" writable="1">
        <type name="SqlExpr" c:type="GdaSqlExpr*"/>
      </field>
      <field name="asc" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="collation_name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <constructor name="new" c:identifier="gda_sql_select_order_new">
        <return-value transfer-ownership="full">
          <type name="SqlSelectOrder" c:type="GdaSqlSelectOrder*"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="SqlAnyPart" c:type="GdaSqlAnyPart*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="gda_sql_select_order_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="copy" c:identifier="gda_sql_select_order_copy">
        <return-value transfer-ownership="full">
          <type name="SqlSelectOrder" c:type="GdaSqlSelectOrder*"/>
        </return-value>
      </method>
      <method name="serialize" c:identifier="gda_sql_select_order_serialize">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
    </record>
    <record name="SqlSelectTarget" c:type="GdaSqlSelectTarget">
      <field name="any" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart"/>
      </field>
      <field name="expr" writable="1">
        <type name="SqlExpr" c:type="GdaSqlExpr*"/>
      </field>
      <field name="table_name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="as" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="validity_meta_object" writable="1">
        <type name="MetaDbObject" c:type="GdaMetaDbObject*"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <constructor name="new" c:identifier="gda_sql_select_target_new">
        <return-value transfer-ownership="full">
          <type name="SqlSelectTarget" c:type="GdaSqlSelectTarget*"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="SqlAnyPart" c:type="GdaSqlAnyPart*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="gda_sql_select_target_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="copy" c:identifier="gda_sql_select_target_copy">
        <return-value transfer-ownership="full">
          <type name="SqlSelectTarget" c:type="GdaSqlSelectTarget*"/>
        </return-value>
      </method>
      <method name="serialize" c:identifier="gda_sql_select_target_serialize">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="take_table_name"
              c:identifier="gda_sql_select_target_take_table_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_select"
              c:identifier="gda_sql_select_target_take_select">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stmt" transfer-ownership="none">
            <type name="SqlStatement" c:type="GdaSqlStatement*"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_alias"
              c:identifier="gda_sql_select_target_take_alias">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="alias" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="SqlStatement"
            c:type="GdaSqlStatement"
            glib:type-name="GdaSqlStatement"
            glib:get-type="gda_sql_statement_get_type">
      <field name="sql" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="stmt_type" writable="1">
        <type name="SqlStatementType" c:type="GdaSqlStatementType"/>
      </field>
      <field name="contents" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="validity_meta_struct" writable="1">
        <type name="MetaStruct" c:type="GdaMetaStruct*"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <constructor name="new" c:identifier="gda_sql_statement_new">
        <return-value transfer-ownership="full">
          <type name="SqlStatement" c:type="GdaSqlStatement*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="SqlStatementType" c:type="GdaSqlStatementType"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy" c:identifier="gda_sql_statement_copy">
        <return-value transfer-ownership="full">
          <type name="SqlStatement" c:type="GdaSqlStatement*"/>
        </return-value>
      </method>
      <method name="free" c:identifier="gda_sql_statement_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="serialize" c:identifier="gda_sql_statement_serialize">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="check_structure"
              c:identifier="gda_sql_statement_check_structure"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="check_validity"
              c:identifier="gda_sql_statement_check_validity"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
        </parameters>
      </method>
      <method name="check_clean" c:identifier="gda_sql_statement_check_clean">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="normalize"
              c:identifier="gda_sql_statement_normalize"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_take_distinct"
              c:identifier="gda_sql_statement_select_take_distinct">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="distinct" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="distinct_expr" transfer-ownership="none">
            <type name="SqlExpr" c:type="GdaSqlExpr*"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_take_expr_list"
              c:identifier="gda_sql_statement_select_take_expr_list">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="expr_list" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="select_take_from"
              c:identifier="gda_sql_statement_select_take_from">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="from" transfer-ownership="none">
            <type name="SqlSelectFrom" c:type="GdaSqlSelectFrom*"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_take_where_cond"
              c:identifier="gda_sql_statement_select_take_where_cond">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="expr" transfer-ownership="none">
            <type name="SqlExpr" c:type="GdaSqlExpr*"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_take_group_by"
              c:identifier="gda_sql_statement_select_take_group_by">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="group_by" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="select_take_having_cond"
              c:identifier="gda_sql_statement_select_take_having_cond">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="expr" transfer-ownership="none">
            <type name="SqlExpr" c:type="GdaSqlExpr*"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_take_order_by"
              c:identifier="gda_sql_statement_select_take_order_by">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="order_by" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="select_take_limits"
              c:identifier="gda_sql_statement_select_take_limits">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="SqlExpr" c:type="GdaSqlExpr*"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <type name="SqlExpr" c:type="GdaSqlExpr*"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_take_table_name"
              c:identifier="gda_sql_statement_insert_take_table_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_take_on_conflict"
              c:identifier="gda_sql_statement_insert_take_on_conflict">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_take_fields_list"
              c:identifier="gda_sql_statement_insert_take_fields_list">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="insert_take_1_values_list"
              c:identifier="gda_sql_statement_insert_take_1_values_list">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="insert_take_extra_values_list"
              c:identifier="gda_sql_statement_insert_take_extra_values_list">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="insert_take_select"
              c:identifier="gda_sql_statement_insert_take_select">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="select" transfer-ownership="none">
            <type name="SqlStatement" c:type="GdaSqlStatement*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_take_table_name"
              c:identifier="gda_sql_statement_update_take_table_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_take_on_conflict"
              c:identifier="gda_sql_statement_update_take_on_conflict">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_take_condition"
              c:identifier="gda_sql_statement_update_take_condition">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cond" transfer-ownership="none">
            <type name="SqlExpr" c:type="GdaSqlExpr*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_take_set_value"
              c:identifier="gda_sql_statement_update_take_set_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="fname" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="expr" transfer-ownership="none">
            <type name="SqlExpr" c:type="GdaSqlExpr*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_take_table_name"
              c:identifier="gda_sql_statement_delete_take_table_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_take_condition"
              c:identifier="gda_sql_statement_delete_take_condition">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cond" transfer-ownership="none">
            <type name="SqlExpr" c:type="GdaSqlExpr*"/>
          </parameter>
        </parameters>
      </method>
      <method name="compound_set_type"
              c:identifier="gda_sql_statement_compound_set_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="SqlStatementCompoundType"
                  c:type="GdaSqlStatementCompoundType"/>
          </parameter>
        </parameters>
      </method>
      <method name="compound_take_stmt"
              c:identifier="gda_sql_statement_compound_take_stmt">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="s" transfer-ownership="none">
            <type name="SqlStatement" c:type="GdaSqlStatement*"/>
          </parameter>
        </parameters>
      </method>
      <method name="trans_take_mode"
              c:identifier="gda_sql_statement_trans_take_mode">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="trans_set_isol_level"
              c:identifier="gda_sql_statement_trans_set_isol_level">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="level" transfer-ownership="none">
            <type name="TransactionIsolation"
                  c:type="GdaTransactionIsolation"/>
          </parameter>
        </parameters>
      </method>
      <method name="trans_take_name"
              c:identifier="gda_sql_statement_trans_take_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unknown_take_expressions"
              c:identifier="gda_sql_statement_unknown_take_expressions">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="expressions" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="SqlStatementCheckValidityData"
            c:type="GdaSqlStatementCheckValidityData">
      <field name="cnc" writable="1">
        <type name="Connection" c:type="GdaConnection*"/>
      </field>
      <field name="store" writable="1">
        <type name="MetaStore" c:type="GdaMetaStore*"/>
      </field>
      <field name="mstruct" writable="1">
        <type name="MetaStruct" c:type="GdaMetaStruct*"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved3" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved4" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <record name="SqlStatementCompound" c:type="GdaSqlStatementCompound">
      <field name="any" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart"/>
      </field>
      <field name="compound_type" writable="1">
        <type name="SqlStatementCompoundType"
              c:type="GdaSqlStatementCompoundType"/>
      </field>
      <field name="stmt_list" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <enumeration name="SqlStatementCompoundType"
                 c:type="GdaSqlStatementCompoundType">
      <member name="union"
              value="0"
              c:identifier="GDA_SQL_STATEMENT_COMPOUND_UNION"/>
      <member name="union_all"
              value="1"
              c:identifier="GDA_SQL_STATEMENT_COMPOUND_UNION_ALL"/>
      <member name="intersect"
              value="2"
              c:identifier="GDA_SQL_STATEMENT_COMPOUND_INTERSECT"/>
      <member name="intersect_all"
              value="3"
              c:identifier="GDA_SQL_STATEMENT_COMPOUND_INTERSECT_ALL"/>
      <member name="except"
              value="4"
              c:identifier="GDA_SQL_STATEMENT_COMPOUND_EXCEPT"/>
      <member name="except_all"
              value="5"
              c:identifier="GDA_SQL_STATEMENT_COMPOUND_EXCEPT_ALL"/>
    </enumeration>
    <record name="SqlStatementContentsInfo"
            c:type="GdaSqlStatementContentsInfo">
      <field name="type" writable="1">
        <type name="SqlStatementType" c:type="GdaSqlStatementType"/>
      </field>
      <field name="name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="construct">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="free">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="copy">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="serialize">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="check_structure_func" writable="1">
        <type name="SqlForeachFunc" c:type="GdaSqlForeachFunc"/>
      </field>
      <field name="check_validity_func" writable="1">
        <type name="SqlForeachFunc" c:type="GdaSqlForeachFunc"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved3" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved4" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <record name="SqlStatementDelete" c:type="GdaSqlStatementDelete">
      <field name="any" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart"/>
      </field>
      <field name="table" writable="1">
        <type name="SqlTable" c:type="GdaSqlTable*"/>
      </field>
      <field name="cond" writable="1">
        <type name="SqlExpr" c:type="GdaSqlExpr*"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <record name="SqlStatementInsert" c:type="GdaSqlStatementInsert">
      <field name="any" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart"/>
      </field>
      <field name="on_conflict" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="table" writable="1">
        <type name="SqlTable" c:type="GdaSqlTable*"/>
      </field>
      <field name="fields_list" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="values_list" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="select" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart*"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <record name="SqlStatementSelect" c:type="GdaSqlStatementSelect">
      <field name="any" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart"/>
      </field>
      <field name="distinct" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="distinct_expr" writable="1">
        <type name="SqlExpr" c:type="GdaSqlExpr*"/>
      </field>
      <field name="expr_list" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="from" writable="1">
        <type name="SqlSelectFrom" c:type="GdaSqlSelectFrom*"/>
      </field>
      <field name="where_cond" writable="1">
        <type name="SqlExpr" c:type="GdaSqlExpr*"/>
      </field>
      <field name="group_by" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="having_cond" writable="1">
        <type name="SqlExpr" c:type="GdaSqlExpr*"/>
      </field>
      <field name="order_by" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="limit_count" writable="1">
        <type name="SqlExpr" c:type="GdaSqlExpr*"/>
      </field>
      <field name="limit_offset" writable="1">
        <type name="SqlExpr" c:type="GdaSqlExpr*"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <record name="SqlStatementTransaction" c:type="GdaSqlStatementTransaction">
      <field name="any" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart"/>
      </field>
      <field name="isolation_level" writable="1">
        <type name="TransactionIsolation" c:type="GdaTransactionIsolation"/>
      </field>
      <field name="trans_mode" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="trans_name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <enumeration name="SqlStatementType" c:type="GdaSqlStatementType">
      <member name="select" value="0" c:identifier="GDA_SQL_STATEMENT_SELECT"/>
      <member name="insert" value="1" c:identifier="GDA_SQL_STATEMENT_INSERT"/>
      <member name="update" value="2" c:identifier="GDA_SQL_STATEMENT_UPDATE"/>
      <member name="delete" value="3" c:identifier="GDA_SQL_STATEMENT_DELETE"/>
      <member name="compound"
              value="4"
              c:identifier="GDA_SQL_STATEMENT_COMPOUND"/>
      <member name="begin" value="5" c:identifier="GDA_SQL_STATEMENT_BEGIN"/>
      <member name="rollback"
              value="6"
              c:identifier="GDA_SQL_STATEMENT_ROLLBACK"/>
      <member name="commit" value="7" c:identifier="GDA_SQL_STATEMENT_COMMIT"/>
      <member name="savepoint"
              value="8"
              c:identifier="GDA_SQL_STATEMENT_SAVEPOINT"/>
      <member name="rollback_savepoint"
              value="9"
              c:identifier="GDA_SQL_STATEMENT_ROLLBACK_SAVEPOINT"/>
      <member name="delete_savepoint"
              value="10"
              c:identifier="GDA_SQL_STATEMENT_DELETE_SAVEPOINT"/>
      <member name="unknown"
              value="11"
              c:identifier="GDA_SQL_STATEMENT_UNKNOWN"/>
      <member name="none" value="12" c:identifier="GDA_SQL_STATEMENT_NONE"/>
    </enumeration>
    <record name="SqlStatementUnknown" c:type="GdaSqlStatementUnknown">
      <field name="any" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart"/>
      </field>
      <field name="expressions" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <record name="SqlStatementUpdate" c:type="GdaSqlStatementUpdate">
      <field name="any" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart"/>
      </field>
      <field name="on_conflict" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="table" writable="1">
        <type name="SqlTable" c:type="GdaSqlTable*"/>
      </field>
      <field name="fields_list" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="expr_list" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="cond" writable="1">
        <type name="SqlExpr" c:type="GdaSqlExpr*"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <record name="SqlTable" c:type="GdaSqlTable">
      <field name="any" writable="1">
        <type name="SqlAnyPart" c:type="GdaSqlAnyPart"/>
      </field>
      <field name="table_name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="validity_meta_object" writable="1">
        <type name="MetaDbObject" c:type="GdaMetaDbObject*"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <constructor name="new" c:identifier="gda_sql_table_new">
        <return-value transfer-ownership="full">
          <type name="SqlTable" c:type="GdaSqlTable*"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="SqlAnyPart" c:type="GdaSqlAnyPart*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="gda_sql_table_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="copy" c:identifier="gda_sql_table_copy">
        <return-value transfer-ownership="full">
          <type name="SqlTable" c:type="GdaSqlTable*"/>
        </return-value>
      </method>
      <method name="serialize" c:identifier="gda_sql_table_serialize">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="take_name" c:identifier="gda_sql_table_take_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <class name="Statement"
           c:type="GdaStatement"
           parent="GObject.Object"
           glib:type-name="GdaStatement"
           glib:get-type="gda_statement_get_type"
           glib:type-struct="StatementClass">
      <constructor name="new" c:identifier="gda_statement_new">
        <doc xml:whitespace="preserve">Creates a new #GdaStatement object</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">the new object</doc>
          <type name="Statement" c:type="GdaStatement*"/>
        </return-value>
      </constructor>
      <method name="copy" c:identifier="gda_statement_copy">
        <doc xml:whitespace="preserve">Copy constructor</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a the new copy of @orig</doc>
          <type name="Statement" c:type="GdaStatement*"/>
        </return-value>
      </method>
      <method name="serialize" c:identifier="gda_statement_serialize">
        <doc xml:whitespace="preserve">Creates a string representing the contents of @stmt.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a string containing the serialized version of @stmt</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_parameters"
              c:identifier="gda_statement_get_parameters"
              throws="1">
        <doc xml:whitespace="preserve">Get a new #GdaSet object which groups all the execution parameters
which @stmt needs. This new object is returned though @out_params.
Note that if @stmt does not need any parameter, then @out_params is set to %NULL.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if no error occurred.</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="out_params"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <doc xml:whitespace="preserve">a place to store a new #GdaSet object, or %NULL</doc>
            <type name="Set" c:type="GdaSet**"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_sql_extended"
              c:identifier="gda_statement_to_sql_extended"
              throws="1">
        <doc xml:whitespace="preserve">Renders @stmt as an SQL statement, with some control on how it is rendered.
If @cnc is not %NULL, then the rendered SQL will better be suited to be used by @cnc (in particular
it may include some SQL tweaks and/or proprietary extensions specific to the database engine used by @cnc):
in this case the result is similar to calling gda_connection_statement_to_sql().</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new string if no error occurred</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaConnection object, or %NULL</doc>
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="params" transfer-ownership="none">
            <doc xml:whitespace="preserve">parameters contained in a single #GdaSet object</doc>
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:whitespace="preserve">a set of flags to control the rendering</doc>
            <type name="StatementSqlFlag" c:type="GdaStatementSqlFlag"/>
          </parameter>
          <parameter name="params_used"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     allow-none="1">
            <doc xml:whitespace="preserve">a place to store the list of actual #GdaHolder objects in @params used to do the rendering, or %NULL</doc>
            <type name="GLib.SList" c:type="GSList**">
              <type name="Holder"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="get_statement_type"
              c:identifier="gda_statement_get_statement_type">
        <doc xml:whitespace="preserve">Get the type of statement held by @stmt. It returns GDA_SQL_STATEMENT_NONE if</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the statement type</doc>
          <type name="SqlStatementType" c:type="GdaSqlStatementType"/>
        </return-value>
      </method>
      <method name="is_useless" c:identifier="gda_statement_is_useless">
        <doc xml:whitespace="preserve">Tells if @stmt is composed only of spaces (that is it has no real SQL code), and is completely
useless as such.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if executing @stmt does nothing</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="check_structure"
              c:identifier="gda_statement_check_structure"
              throws="1">
        <doc xml:whitespace="preserve">Checks that @stmt's structure is correct.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if @stmt's structure is correct</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="check_validity"
              c:identifier="gda_statement_check_validity"
              throws="1">
        <doc xml:whitespace="preserve">If @cnc is not %NULL then checks that every object (table, field, function) used in @stmt 
actually exists in @cnc's database
If @cnc is %NULL, then cleans anything related to @cnc in @stmt.
See gda_sql_statement_check_validity() for more information.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if every object actually exists in @cnc's database</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">a #GdaConnection object, or %NULL</doc>
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
        </parameters>
      </method>
      <method name="normalize"
              c:identifier="gda_statement_normalize"
              throws="1">
        <doc xml:whitespace="preserve">"Normalizes" some parts of @stmt, see gda_sql_statement_normalize() for more
information.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE if no error occurred</doc>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaConnection object</doc>
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_sql_real"
              c:identifier="gda_statement_to_sql_real"
              throws="1">
        <doc xml:whitespace="preserve">Renders @stmt to its SQL representation, using @context to specify how each part of @stmt must
be rendered. This function is mainly used by database provider's implementations which require
to specialize some aspects of SQL rendering to be adapted to the database,'s own SQL dialect
(for example SQLite rewrites the 'FALSE' and 'TRUE' literals as '0' and 'NOT 0').</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new string, or %NULL if an error occurred</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GdaSqlRenderingContext context</doc>
            <type name="SqlRenderingContext" c:type="GdaSqlRenderingContext*"/>
          </parameter>
        </parameters>
      </method>
      <property name="structure" writable="1" transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="StatementPrivate" c:type="GdaStatementPrivate*"/>
      </field>
      <glib:signal name="checked">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="reset">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="StatementClass"
            c:type="GdaStatementClass"
            glib:is-gtype-struct-for="Statement">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="checked">
        <callback name="checked" c:type="checked">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stmt" transfer-ownership="none">
              <type name="Statement" c:type="GdaStatement*"/>
            </parameter>
            <parameter name="cnc" transfer-ownership="none">
              <type name="Connection" c:type="GdaConnection*"/>
            </parameter>
            <parameter name="checked" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reset">
        <callback name="reset" c:type="reset">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stmt" transfer-ownership="none">
              <type name="Statement" c:type="GdaStatement*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="StatementError"
                 c:type="GdaStatementError"
                 glib:error-quark="gda_statement_error_quark">
      <member name="parse_error"
              value="0"
              c:identifier="GDA_STATEMENT_PARSE_ERROR"/>
      <member name="syntax_error"
              value="1"
              c:identifier="GDA_STATEMENT_SYNTAX_ERROR"/>
      <member name="no_cnc_error"
              value="2"
              c:identifier="GDA_STATEMENT_NO_CNC_ERROR"/>
      <member name="cnc_closed_error"
              value="3"
              c:identifier="GDA_STATEMENT_CNC_CLOSED_ERROR"/>
      <member name="exec_error"
              value="4"
              c:identifier="GDA_STATEMENT_EXEC_ERROR"/>
      <member name="param_type_error"
              value="5"
              c:identifier="GDA_STATEMENT_PARAM_TYPE_ERROR"/>
      <member name="param_error"
              value="6"
              c:identifier="GDA_STATEMENT_PARAM_ERROR"/>
    </enumeration>
    <bitfield name="StatementModelUsage" c:type="GdaStatementModelUsage">
      <member name="random_access"
              value="1"
              c:identifier="GDA_STATEMENT_MODEL_RANDOM_ACCESS"/>
      <member name="cursor_forward"
              value="2"
              c:identifier="GDA_STATEMENT_MODEL_CURSOR_FORWARD"/>
      <member name="cursor_backward"
              value="4"
              c:identifier="GDA_STATEMENT_MODEL_CURSOR_BACKWARD"/>
      <member name="cursor"
              value="6"
              c:identifier="GDA_STATEMENT_MODEL_CURSOR"/>
      <member name="allow_noparam"
              value="8"
              c:identifier="GDA_STATEMENT_MODEL_ALLOW_NOPARAM"/>
    </bitfield>
    <record name="StatementPrivate" c:type="GdaStatementPrivate">
    </record>
    <bitfield name="StatementSqlFlag" c:type="GdaStatementSqlFlag">
      <member name="params_as_values"
              value="0"
              c:identifier="GDA_STATEMENT_SQL_PARAMS_AS_VALUES"/>
      <member name="pretty" value="1" c:identifier="GDA_STATEMENT_SQL_PRETTY"/>
      <member name="params_long"
              value="2"
              c:identifier="GDA_STATEMENT_SQL_PARAMS_LONG"/>
      <member name="params_short"
              value="4"
              c:identifier="GDA_STATEMENT_SQL_PARAMS_SHORT"/>
      <member name="params_as_colon"
              value="8"
              c:identifier="GDA_STATEMENT_SQL_PARAMS_AS_COLON"/>
      <member name="params_as_dollar"
              value="16"
              c:identifier="GDA_STATEMENT_SQL_PARAMS_AS_DOLLAR"/>
      <member name="params_as_qmark"
              value="32"
              c:identifier="GDA_STATEMENT_SQL_PARAMS_AS_QMARK"/>
      <member name="params_as_uqmark"
              value="64"
              c:identifier="GDA_STATEMENT_SQL_PARAMS_AS_UQMARK"/>
    </bitfield>
    <constant name="TIMEZONE_INVALID" value="86400">
      <type name="int"/>
    </constant>
    <constant name="TYPE_NULL" value="0">
      <type name="int"/>
    </constant>
    <class name="ThreadWrapper"
           c:type="GdaThreadWrapper"
           parent="GObject.Object"
           glib:type-name="GdaThreadWrapper"
           glib:get-type="gda_thread_wrapper_get_type"
           glib:type-struct="ThreadWrapperClass">
      <constructor name="new" c:identifier="gda_thread_wrapper_new">
        <return-value transfer-ownership="full">
          <type name="ThreadWrapper" c:type="GdaThreadWrapper*"/>
        </return-value>
      </constructor>
      <method name="execute"
              c:identifier="gda_thread_wrapper_execute"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="func" transfer-ownership="none" scope="call">
            <type name="ThreadWrapperFunc" c:type="GdaThreadWrapperFunc"/>
          </parameter>
          <parameter name="arg" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="arg_destroy_func"
                     transfer-ownership="none"
                     scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="execute_void"
              c:identifier="gda_thread_wrapper_execute_void"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="func" transfer-ownership="none" scope="call">
            <type name="ThreadWrapperVoidFunc"
                  c:type="GdaThreadWrapperVoidFunc"/>
          </parameter>
          <parameter name="arg" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="arg_destroy_func"
                     transfer-ownership="none"
                     scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="cancel" c:identifier="gda_thread_wrapper_cancel">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="iterate" c:identifier="gda_thread_wrapper_iterate">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="may_block" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="fetch_result"
              c:identifier="gda_thread_wrapper_fetch_result"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
        <parameters>
          <parameter name="may_lock" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="exp_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_waiting_size"
              c:identifier="gda_thread_wrapper_get_waiting_size">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="connect_raw" c:identifier="gda_thread_wrapper_connect_raw">
        <return-value transfer-ownership="none">
          <type name="ulong" c:type="gulong"/>
        </return-value>
        <parameters>
          <parameter name="instance" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="sig_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="private" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="5">
            <type name="ThreadWrapperCallback"
                  c:type="GdaThreadWrapperCallback"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="disconnect" c:identifier="gda_thread_wrapper_disconnect">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="ulong" c:type="gulong"/>
          </parameter>
        </parameters>
      </method>
      <method name="steal_signal"
              c:identifier="gda_thread_wrapper_steal_signal">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="ulong" c:type="gulong"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ThreadWrapperPrivate" c:type="GdaThreadWrapperPrivate*"/>
      </field>
    </class>
    <callback name="ThreadWrapperCallback" c:type="GdaThreadWrapperCallback">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="wrapper" transfer-ownership="none">
          <type name="ThreadWrapper" c:type="GdaThreadWrapper*"/>
        </parameter>
        <parameter name="instance" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="signame" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="n_param_values" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="param_values" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="gda_reserved" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="ThreadWrapperClass"
            c:type="GdaThreadWrapperClass"
            glib:is-gtype-struct-for="ThreadWrapper">
      <field name="object_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ThreadWrapperError"
                 c:type="GdaThreadWrapperError"
                 glib:error-quark="gda_thread_wrapper_error_quark">
      <member name="thread_wrapper_unknown_error"
              value="0"
              c:identifier="GDA_THREAD_WRAPPER_UNKNOWN_ERROR"/>
    </enumeration>
    <callback name="ThreadWrapperFunc"
              c:type="GdaThreadWrapperFunc"
              throws="1">
      <return-value transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="arg" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="ThreadWrapperPrivate" c:type="GdaThreadWrapperPrivate">
    </record>
    <callback name="ThreadWrapperVoidFunc"
              c:type="GdaThreadWrapperVoidFunc"
              throws="1">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="arg" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="Time"
            c:type="GdaTime"
            glib:type-name="GdaTime"
            glib:get-type="gda_time_get_type">
      <field name="hour" writable="1">
        <type name="ushort" c:type="gushort"/>
      </field>
      <field name="minute" writable="1">
        <type name="ushort" c:type="gushort"/>
      </field>
      <field name="second" writable="1">
        <type name="ushort" c:type="gushort"/>
      </field>
      <field name="fraction" writable="1">
        <type name="ulong" c:type="gulong"/>
      </field>
      <field name="timezone" writable="1">
        <type name="long" c:type="glong"/>
      </field>
    </record>
    <record name="Timestamp"
            c:type="GdaTimestamp"
            glib:type-name="GdaTimestamp"
            glib:get-type="gda_timestamp_get_type">
      <field name="year" writable="1">
        <type name="short" c:type="gshort"/>
      </field>
      <field name="month" writable="1">
        <type name="ushort" c:type="gushort"/>
      </field>
      <field name="day" writable="1">
        <type name="ushort" c:type="gushort"/>
      </field>
      <field name="hour" writable="1">
        <type name="ushort" c:type="gushort"/>
      </field>
      <field name="minute" writable="1">
        <type name="ushort" c:type="gushort"/>
      </field>
      <field name="second" writable="1">
        <type name="ushort" c:type="gushort"/>
      </field>
      <field name="fraction" writable="1">
        <type name="ulong" c:type="gulong"/>
      </field>
      <field name="timezone" writable="1">
        <type name="long" c:type="glong"/>
      </field>
    </record>
    <enumeration name="TransactionIsolation" c:type="GdaTransactionIsolation">
      <member name="unknown"
              value="0"
              c:identifier="GDA_TRANSACTION_ISOLATION_UNKNOWN"/>
      <member name="read_committed"
              value="1"
              c:identifier="GDA_TRANSACTION_ISOLATION_READ_COMMITTED"/>
      <member name="read_uncommitted"
              value="2"
              c:identifier="GDA_TRANSACTION_ISOLATION_READ_UNCOMMITTED"/>
      <member name="repeatable_read"
              value="3"
              c:identifier="GDA_TRANSACTION_ISOLATION_REPEATABLE_READ"/>
      <member name="serializable"
              value="4"
              c:identifier="GDA_TRANSACTION_ISOLATION_SERIALIZABLE"/>
    </enumeration>
    <class name="TransactionStatus"
           c:type="GdaTransactionStatus"
           parent="GObject.Object"
           glib:type-name="GdaTransactionStatus"
           glib:get-type="gda_transaction_status_get_type"
           glib:type-struct="TransactionStatusClass">
      <constructor name="new" c:identifier="gda_transaction_status_new">
        <return-value transfer-ownership="full">
          <type name="TransactionStatus" c:type="GdaTransactionStatus*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_event_svp"
              c:identifier="gda_transaction_status_add_event_svp">
        <return-value transfer-ownership="full">
          <type name="TransactionStatusEvent"
                c:type="GdaTransactionStatusEvent*"/>
        </return-value>
        <parameters>
          <parameter name="svp_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_event_sql"
              c:identifier="gda_transaction_status_add_event_sql">
        <return-value transfer-ownership="full">
          <type name="TransactionStatusEvent"
                c:type="GdaTransactionStatusEvent*"/>
        </return-value>
        <parameters>
          <parameter name="sql" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="conn_event" transfer-ownership="none">
            <type name="ConnectionEvent" c:type="GdaConnectionEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_event_sub"
              c:identifier="gda_transaction_status_add_event_sub">
        <return-value transfer-ownership="full">
          <type name="TransactionStatusEvent"
                c:type="GdaTransactionStatusEvent*"/>
        </return-value>
        <parameters>
          <parameter name="sub_trans" transfer-ownership="none">
            <type name="TransactionStatus" c:type="GdaTransactionStatus*"/>
          </parameter>
        </parameters>
      </method>
      <method name="free_events"
              c:identifier="gda_transaction_status_free_events">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <type name="TransactionStatusEvent"
                  c:type="GdaTransactionStatusEvent*"/>
          </parameter>
          <parameter name="free_after" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="find" c:identifier="gda_transaction_status_find">
        <return-value transfer-ownership="full">
          <type name="TransactionStatus" c:type="GdaTransactionStatus*"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="destev" transfer-ownership="none">
            <type name="TransactionStatusEvent"
                  c:type="GdaTransactionStatusEvent**"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_current"
              c:identifier="gda_transaction_status_find_current">
        <return-value transfer-ownership="full">
          <type name="TransactionStatus" c:type="GdaTransactionStatus*"/>
        </return-value>
        <parameters>
          <parameter name="destev" transfer-ownership="none">
            <type name="TransactionStatusEvent"
                  c:type="GdaTransactionStatusEvent**"/>
          </parameter>
          <parameter name="unnamed_only" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="name">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="isolation_level">
        <type name="TransactionIsolation" c:type="GdaTransactionIsolation"/>
      </field>
      <field name="state">
        <type name="TransactionStatusState"
              c:type="GdaTransactionStatusState"/>
      </field>
      <field name="events">
        <type name="GLib.List" c:type="GList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="_gda_reserved1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2">
        <type name="any" c:type="gpointer"/>
      </field>
    </class>
    <record name="TransactionStatusClass"
            c:type="GdaTransactionStatusClass"
            glib:is-gtype-struct-for="TransactionStatus">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="TransactionStatusEvent" c:type="GdaTransactionStatusEvent">
      <field name="trans" writable="1">
        <type name="TransactionStatus" c:type="GdaTransactionStatus*"/>
      </field>
      <field name="type" writable="1">
        <type name="TransactionStatusEventType"
              c:type="GdaTransactionStatusEventType"/>
      </field>
      <union name="pl" c:type="pl">
        <field name="svp_name" writable="1">
          <type name="utf8" c:type="gchar*"/>
        </field>
        <field name="sql" writable="1">
          <type name="utf8" c:type="gchar*"/>
        </field>
        <field name="sub_trans" writable="1">
          <type name="TransactionStatus" c:type="GdaTransactionStatus*"/>
        </field>
      </union>
      <field name="conn_event" writable="1">
        <type name="ConnectionEvent" c:type="GdaConnectionEvent*"/>
      </field>
      <field name="_gda_reserved1" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <enumeration name="TransactionStatusEventType"
                 c:type="GdaTransactionStatusEventType">
      <member name="savepoint"
              value="0"
              c:identifier="GDA_TRANSACTION_STATUS_EVENT_SAVEPOINT"/>
      <member name="sql"
              value="1"
              c:identifier="GDA_TRANSACTION_STATUS_EVENT_SQL"/>
      <member name="sub_transaction"
              value="2"
              c:identifier="GDA_TRANSACTION_STATUS_EVENT_SUB_TRANSACTION"/>
    </enumeration>
    <enumeration name="TransactionStatusState"
                 c:type="GdaTransactionStatusState">
      <member name="ok"
              value="0"
              c:identifier="GDA_TRANSACTION_STATUS_STATE_OK"/>
      <member name="failed"
              value="1"
              c:identifier="GDA_TRANSACTION_STATUS_STATE_FAILED"/>
    </enumeration>
    <class name="Tree"
           c:type="GdaTree"
           parent="GObject.Object"
           glib:type-name="GdaTree"
           glib:get-type="gda_tree_get_type"
           glib:type-struct="TreeClass">
      <constructor name="new" c:identifier="gda_tree_new">
        <return-value transfer-ownership="full">
          <type name="Tree" c:type="GdaTree*"/>
        </return-value>
      </constructor>
      <method name="add_manager" c:identifier="gda_tree_add_manager">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="manager" transfer-ownership="none">
            <type name="TreeManager" c:type="GdaTreeManager*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clean" c:identifier="gda_tree_clean">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="update_all" c:identifier="gda_tree_update_all" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="update_part"
              c:identifier="gda_tree_update_part"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="node" transfer-ownership="none">
            <type name="TreeNode" c:type="GdaTreeNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_nodes_in_path"
              c:identifier="gda_tree_get_nodes_in_path">
        <return-value transfer-ownership="full">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="tree_path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="use_names" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_node" c:identifier="gda_tree_get_node">
        <return-value transfer-ownership="full">
          <type name="TreeNode" c:type="GdaTreeNode*"/>
        </return-value>
        <parameters>
          <parameter name="tree_path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="use_names" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_node_path" c:identifier="gda_tree_get_node_path">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="node" transfer-ownership="none">
            <type name="TreeNode" c:type="GdaTreeNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_node_manager" c:identifier="gda_tree_get_node_manager">
        <return-value transfer-ownership="full">
          <type name="TreeManager" c:type="GdaTreeManager*"/>
        </return-value>
        <parameters>
          <parameter name="node" transfer-ownership="none">
            <type name="TreeNode" c:type="GdaTreeNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute" c:identifier="gda_tree_set_attribute">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="destroy" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <property name="is-list" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="TreePrivate" c:type="GdaTreePrivate*"/>
      </field>
      <glib:signal name="node-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="TreeNode" c:type="GdaTreeNode"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="node-deleted">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="node-has-child-toggled">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="TreeNode" c:type="GdaTreeNode"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="node-inserted">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="TreeNode" c:type="GdaTreeNode"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="TreeClass"
            c:type="GdaTreeClass"
            glib:is-gtype-struct-for="Tree">
      <field name="object_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="node_changed">
        <callback name="node_changed" c:type="node_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="tree" transfer-ownership="none">
              <type name="Tree" c:type="GdaTree*"/>
            </parameter>
            <parameter name="node" transfer-ownership="none">
              <type name="TreeNode" c:type="GdaTreeNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="node_inserted">
        <callback name="node_inserted" c:type="node_inserted">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="tree" transfer-ownership="none">
              <type name="Tree" c:type="GdaTree*"/>
            </parameter>
            <parameter name="node" transfer-ownership="none">
              <type name="TreeNode" c:type="GdaTreeNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="node_has_child_toggled">
        <callback name="node_has_child_toggled"
                  c:type="node_has_child_toggled">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="tree" transfer-ownership="none">
              <type name="Tree" c:type="GdaTree*"/>
            </parameter>
            <parameter name="node" transfer-ownership="none">
              <type name="TreeNode" c:type="GdaTreeNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="node_deleted">
        <callback name="node_deleted" c:type="node_deleted">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="tree" transfer-ownership="none">
              <type name="Tree" c:type="GdaTree*"/>
            </parameter>
            <parameter name="node_path" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="TreeError"
                 c:type="GdaTreeError"
                 glib:error-quark="gda_tree_error_quark">
      <member name="tree_unknown_error"
              value="0"
              c:identifier="GDA_TREE_UNKNOWN_ERROR"/>
    </enumeration>
    <class name="TreeManager"
           c:type="GdaTreeManager"
           parent="GObject.Object"
           glib:type-name="GdaTreeManager"
           glib:get-type="gda_tree_manager_get_type"
           glib:type-struct="TreeManagerClass">
      <constructor name="new_with_func"
                   c:identifier="gda_tree_manager_new_with_func">
        <return-value transfer-ownership="full">
          <type name="TreeManager" c:type="GdaTreeManager*"/>
        </return-value>
        <parameters>
          <parameter name="update_func" transfer-ownership="none" scope="call">
            <type name="TreeManagerNodesFunc"
                  c:type="GdaTreeManagerNodesFunc"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_manager" c:identifier="gda_tree_manager_add_manager">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="sub" transfer-ownership="none">
            <type name="TreeManager" c:type="GdaTreeManager*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_managers" c:identifier="gda_tree_manager_get_managers">
        <return-value transfer-ownership="none">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <method name="set_node_create_func"
              c:identifier="gda_tree_manager_set_node_create_func">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="func" transfer-ownership="none" scope="call">
            <type name="TreeManagerNodeFunc" c:type="GdaTreeManagerNodeFunc"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_node_create_func"
              c:identifier="gda_tree_manager_get_node_create_func">
        <return-value transfer-ownership="full">
          <type name="TreeManagerNodeFunc" c:type="GdaTreeManagerNodeFunc"/>
        </return-value>
      </method>
      <method name="add_new_node_attribute"
              c:identifier="gda_tree_manager_add_new_node_attribute">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_node" c:identifier="gda_tree_manager_create_node">
        <return-value transfer-ownership="full">
          <type name="TreeNode" c:type="GdaTreeNode*"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="TreeNode" c:type="GdaTreeNode*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="func"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </property>
      <property name="recursive"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="TreeManagerPrivate" c:type="GdaTreeManagerPrivate*"/>
      </field>
    </class>
    <record name="TreeManagerClass"
            c:type="GdaTreeManagerClass"
            glib:is-gtype-struct-for="TreeManager">
      <field name="object_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="update_children">
        <type name="TreeManagerNodesFunc" c:type="GdaTreeManagerNodesFunc"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="TreeManagerError"
                 c:type="GdaTreeManagerError"
                 glib:error-quark="gda_tree_manager_error_quark">
      <member name="tree_manager_unknown_error"
              value="0"
              c:identifier="GDA_TREE_MANAGER_UNKNOWN_ERROR"/>
    </enumeration>
    <callback name="TreeManagerNodeFunc" c:type="GdaTreeManagerNodeFunc">
      <return-value transfer-ownership="full">
        <type name="TreeNode" c:type="GdaTreeNode*"/>
      </return-value>
      <parameters>
        <parameter name="manager" transfer-ownership="none">
          <type name="TreeManager" c:type="GdaTreeManager*"/>
        </parameter>
        <parameter name="parent" transfer-ownership="none">
          <type name="TreeNode" c:type="GdaTreeNode*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="TreeManagerNodesFunc"
              c:type="GdaTreeManagerNodesFunc"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="manager" transfer-ownership="none">
          <type name="TreeManager" c:type="GdaTreeManager*"/>
        </parameter>
        <parameter name="node" transfer-ownership="none">
          <type name="TreeNode" c:type="GdaTreeNode*"/>
        </parameter>
        <parameter name="children_nodes" transfer-ownership="none">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </parameter>
        <parameter name="out_error"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="boolean" c:type="gboolean*"/>
        </parameter>
      </parameters>
    </callback>
    <record name="TreeManagerPrivate" c:type="GdaTreeManagerPrivate">
    </record>
    <class name="TreeMgrColumns"
           c:type="GdaTreeMgrColumns"
           parent="TreeManager"
           glib:type-name="GdaTreeMgrColumns"
           glib:get-type="gda_tree_mgr_columns_get_type"
           glib:type-struct="TreeMgrColumnsClass">
      <constructor name="new" c:identifier="gda_tree_mgr_columns_new">
        <return-value transfer-ownership="full">
          <type name="TreeMgrColumns" c:type="GdaTreeManager*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="schema" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="table_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="connection"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Connection" c:type="GdaConnection"/>
      </property>
      <property name="schema"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="table-name"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="object">
        <type name="TreeManager" c:type="GdaTreeManager"/>
      </field>
      <field name="priv">
        <type name="TreeMgrColumnsPriv" c:type="GdaTreeMgrColumnsPriv*"/>
      </field>
    </class>
    <record name="TreeMgrColumnsClass"
            c:type="GdaTreeMgrColumnsClass"
            glib:is-gtype-struct-for="TreeMgrColumns">
      <field name="object_class">
        <type name="TreeManagerClass" c:type="GdaTreeManagerClass"/>
      </field>
    </record>
    <record name="TreeMgrColumnsPriv" c:type="GdaTreeMgrColumnsPriv">
    </record>
    <class name="TreeMgrLabel"
           c:type="GdaTreeMgrLabel"
           parent="TreeManager"
           glib:type-name="GdaTreeMgrLabel"
           glib:get-type="gda_tree_mgr_label_get_type"
           glib:type-struct="TreeMgrLabelClass">
      <constructor name="new" c:identifier="gda_tree_mgr_label_new">
        <return-value transfer-ownership="full">
          <type name="TreeMgrLabel" c:type="GdaTreeManager*"/>
        </return-value>
        <parameters>
          <parameter name="label" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="label"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="object">
        <type name="TreeManager" c:type="GdaTreeManager"/>
      </field>
      <field name="priv">
        <type name="TreeMgrLabelPriv" c:type="GdaTreeMgrLabelPriv*"/>
      </field>
    </class>
    <record name="TreeMgrLabelClass"
            c:type="GdaTreeMgrLabelClass"
            glib:is-gtype-struct-for="TreeMgrLabel">
      <field name="object_class">
        <type name="TreeManagerClass" c:type="GdaTreeManagerClass"/>
      </field>
    </record>
    <record name="TreeMgrLabelPriv" c:type="GdaTreeMgrLabelPriv">
    </record>
    <class name="TreeMgrSchemas"
           c:type="GdaTreeMgrSchemas"
           parent="TreeManager"
           glib:type-name="GdaTreeMgrSchemas"
           glib:get-type="gda_tree_mgr_schemas_get_type"
           glib:type-struct="TreeMgrSchemasClass">
      <constructor name="new" c:identifier="gda_tree_mgr_schemas_new">
        <return-value transfer-ownership="full">
          <type name="TreeMgrSchemas" c:type="GdaTreeManager*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="connection"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Connection" c:type="GdaConnection"/>
      </property>
      <field name="object">
        <type name="TreeManager" c:type="GdaTreeManager"/>
      </field>
      <field name="priv">
        <type name="TreeMgrSchemasPriv" c:type="GdaTreeMgrSchemasPriv*"/>
      </field>
    </class>
    <record name="TreeMgrSchemasClass"
            c:type="GdaTreeMgrSchemasClass"
            glib:is-gtype-struct-for="TreeMgrSchemas">
      <field name="object_class">
        <type name="TreeManagerClass" c:type="GdaTreeManagerClass"/>
      </field>
    </record>
    <record name="TreeMgrSchemasPriv" c:type="GdaTreeMgrSchemasPriv">
    </record>
    <class name="TreeMgrSelect"
           c:type="GdaTreeMgrSelect"
           parent="TreeManager"
           glib:type-name="GdaTreeMgrSelect"
           glib:get-type="gda_tree_mgr_select_get_type"
           glib:type-struct="TreeMgrSelectClass">
      <constructor name="new" c:identifier="gda_tree_mgr_select_new">
        <return-value transfer-ownership="full">
          <type name="TreeMgrSelect" c:type="GdaTreeManager*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="stmt" transfer-ownership="none">
            <type name="Statement" c:type="GdaStatement*"/>
          </parameter>
          <parameter name="params" transfer-ownership="none">
            <type name="Set" c:type="GdaSet*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="connection"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Connection" c:type="GdaConnection"/>
      </property>
      <property name="params"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Set" c:type="GdaSet"/>
      </property>
      <property name="statement"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Statement" c:type="GdaStatement"/>
      </property>
      <field name="object">
        <type name="TreeManager" c:type="GdaTreeManager"/>
      </field>
      <field name="priv">
        <type name="TreeMgrSelectPriv" c:type="GdaTreeMgrSelectPriv*"/>
      </field>
    </class>
    <record name="TreeMgrSelectClass"
            c:type="GdaTreeMgrSelectClass"
            glib:is-gtype-struct-for="TreeMgrSelect">
      <field name="object_class">
        <type name="TreeManagerClass" c:type="GdaTreeManagerClass"/>
      </field>
    </record>
    <record name="TreeMgrSelectPriv" c:type="GdaTreeMgrSelectPriv">
    </record>
    <class name="TreeMgrTables"
           c:type="GdaTreeMgrTables"
           parent="TreeManager"
           glib:type-name="GdaTreeMgrTables"
           glib:get-type="gda_tree_mgr_tables_get_type"
           glib:type-struct="TreeMgrTablesClass">
      <constructor name="new" c:identifier="gda_tree_mgr_tables_new">
        <return-value transfer-ownership="full">
          <type name="TreeMgrTables" c:type="GdaTreeManager*"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="schema" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="connection"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Connection" c:type="GdaConnection"/>
      </property>
      <property name="schema"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="object">
        <type name="TreeManager" c:type="GdaTreeManager"/>
      </field>
      <field name="priv">
        <type name="TreeMgrTablesPriv" c:type="GdaTreeMgrTablesPriv*"/>
      </field>
    </class>
    <record name="TreeMgrTablesClass"
            c:type="GdaTreeMgrTablesClass"
            glib:is-gtype-struct-for="TreeMgrTables">
      <field name="object_class">
        <type name="TreeManagerClass" c:type="GdaTreeManagerClass"/>
      </field>
    </record>
    <record name="TreeMgrTablesPriv" c:type="GdaTreeMgrTablesPriv">
    </record>
    <class name="TreeNode"
           c:type="GdaTreeNode"
           parent="GObject.Object"
           glib:type-name="GdaTreeNode"
           glib:get-type="gda_tree_node_get_type"
           glib:type-struct="TreeNodeClass">
      <constructor name="new" c:identifier="gda_tree_node_new">
        <return-value transfer-ownership="full">
          <type name="TreeNode" c:type="GdaTreeNode*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="dump_header">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="dump_children">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="prefix" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="in_string" transfer-ownership="none">
            <type name="GLib.String" c:type="GString*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_parent" c:identifier="gda_tree_node_get_parent">
        <return-value transfer-ownership="full">
          <type name="TreeNode" c:type="GdaTreeNode*"/>
        </return-value>
      </method>
      <method name="get_children" c:identifier="gda_tree_node_get_children">
        <return-value transfer-ownership="full">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <method name="get_child_index"
              c:identifier="gda_tree_node_get_child_index">
        <return-value transfer-ownership="full">
          <type name="TreeNode" c:type="GdaTreeNode*"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_child_name"
              c:identifier="gda_tree_node_get_child_name">
        <return-value transfer-ownership="full">
          <type name="TreeNode" c:type="GdaTreeNode*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_node_attribute"
              c:identifier="gda_tree_node_set_node_attribute">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="destroy" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_node_attribute"
              c:identifier="gda_tree_node_get_node_attribute">
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fetch_attribute"
              c:identifier="gda_tree_node_fetch_attribute">
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="name" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="TreeNodePrivate" c:type="GdaTreeNodePrivate*"/>
      </field>
      <glib:signal name="node-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="TreeNode" c:type="GdaTreeNode"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="node-deleted">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="node-has-child-toggled">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="TreeNode" c:type="GdaTreeNode"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="node-inserted">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="TreeNode" c:type="GdaTreeNode"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="TreeNodeClass"
            c:type="GdaTreeNodeClass"
            glib:is-gtype-struct-for="TreeNode">
      <field name="object_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="node_changed">
        <callback name="node_changed" c:type="node_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="reporting" transfer-ownership="none">
              <type name="TreeNode" c:type="GdaTreeNode*"/>
            </parameter>
            <parameter name="node" transfer-ownership="none">
              <type name="TreeNode" c:type="GdaTreeNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="node_inserted">
        <callback name="node_inserted" c:type="node_inserted">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="reporting" transfer-ownership="none">
              <type name="TreeNode" c:type="GdaTreeNode*"/>
            </parameter>
            <parameter name="node" transfer-ownership="none">
              <type name="TreeNode" c:type="GdaTreeNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="node_has_child_toggled">
        <callback name="node_has_child_toggled"
                  c:type="node_has_child_toggled">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="reporting" transfer-ownership="none">
              <type name="TreeNode" c:type="GdaTreeNode*"/>
            </parameter>
            <parameter name="node" transfer-ownership="none">
              <type name="TreeNode" c:type="GdaTreeNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="node_deleted">
        <callback name="node_deleted" c:type="node_deleted">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="reporting" transfer-ownership="none">
              <type name="TreeNode" c:type="GdaTreeNode*"/>
            </parameter>
            <parameter name="relative_path" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="dump_header">
        <callback name="dump_header" c:type="dump_header">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="node" transfer-ownership="none">
              <type name="TreeNode" c:type="GdaTreeNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="dump_children">
        <callback name="dump_children" c:type="dump_children">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="node" transfer-ownership="none">
              <type name="TreeNode" c:type="GdaTreeNode*"/>
            </parameter>
            <parameter name="prefix" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="in_string" transfer-ownership="none">
              <type name="GLib.String" c:type="GString*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="TreeNodeError"
                 c:type="GdaTreeNodeError"
                 glib:error-quark="gda_tree_node_error_quark">
      <member name="tree_node_unknown_error"
              value="0"
              c:identifier="GDA_TREE_NODE_UNKNOWN_ERROR"/>
    </enumeration>
    <record name="TreeNodePrivate" c:type="GdaTreeNodePrivate">
    </record>
    <record name="TreePrivate" c:type="GdaTreePrivate">
    </record>
    <bitfield name="ValueAttribute" c:type="GdaValueAttribute">
      <member name="none" value="0" c:identifier="GDA_VALUE_ATTR_NONE"/>
      <member name="is_null" value="1" c:identifier="GDA_VALUE_ATTR_IS_NULL"/>
      <member name="can_be_null"
              value="2"
              c:identifier="GDA_VALUE_ATTR_CAN_BE_NULL"/>
      <member name="is_default"
              value="4"
              c:identifier="GDA_VALUE_ATTR_IS_DEFAULT"/>
      <member name="can_be_default"
              value="8"
              c:identifier="GDA_VALUE_ATTR_CAN_BE_DEFAULT"/>
      <member name="is_unchanged"
              value="16"
              c:identifier="GDA_VALUE_ATTR_IS_UNCHANGED"/>
      <member name="actions_shown"
              value="32"
              c:identifier="GDA_VALUE_ATTR_ACTIONS_SHOWN"/>
      <member name="data_non_valid"
              value="64"
              c:identifier="GDA_VALUE_ATTR_DATA_NON_VALID"/>
      <member name="has_value_orig"
              value="128"
              c:identifier="GDA_VALUE_ATTR_HAS_VALUE_ORIG"/>
      <member name="no_modif"
              value="256"
              c:identifier="GDA_VALUE_ATTR_NO_MODIF"/>
      <member name="unused" value="512" c:identifier="GDA_VALUE_ATTR_UNUSED"/>
    </bitfield>
    <glib:boxed c:type="GdaValueList"
                glib:name="ValueList"
                glib:type-name="GdaValueList"
                glib:get-type="gda_value_list_get_type">
    </glib:boxed>
    <constant name="XID_SIZE" value="399">
      <type name="int"/>
    </constant>
    <class name="XaTransaction"
           c:type="GdaXaTransaction"
           parent="GObject.Object"
           glib:type-name="GdaXaTransaction"
           glib:get-type="gda_xa_transaction_get_type"
           glib:type-struct="XaTransactionClass">
      <constructor name="new" c:identifier="gda_xa_transaction_new">
        <return-value transfer-ownership="full">
          <type name="XaTransaction" c:type="GdaXaTransaction*"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
          <parameter name="global_transaction_id" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="string_to_id"
                c:identifier="gda_xa_transaction_string_to_id">
        <return-value transfer-ownership="full">
          <type name="XaTransactionId" c:type="GdaXaTransactionId*"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <method name="register_connection"
              c:identifier="gda_xa_transaction_register_connection"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
          <parameter name="branch" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unregister_connection"
              c:identifier="gda_xa_transaction_unregister_connection">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cnc" transfer-ownership="none">
            <type name="Connection" c:type="GdaConnection*"/>
          </parameter>
        </parameters>
      </method>
      <method name="begin" c:identifier="gda_xa_transaction_begin" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="commit"
              c:identifier="gda_xa_transaction_commit"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc_to_recover" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList**">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="rollback"
              c:identifier="gda_xa_transaction_rollback"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="commit_recovered"
              c:identifier="gda_xa_transaction_commit_recovered"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cnc_to_recover" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList**">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <property name="format-id"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </property>
      <property name="transaction-id"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="XaTransactionPrivate" c:type="GdaXaTransactionPrivate*"/>
      </field>
    </class>
    <record name="XaTransactionClass"
            c:type="GdaXaTransactionClass"
            glib:is-gtype-struct-for="XaTransaction">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="gda_reserved1">
        <callback name="gda_reserved1" c:type="_gda_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved2">
        <callback name="gda_reserved2" c:type="_gda_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved3">
        <callback name="gda_reserved3" c:type="_gda_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="gda_reserved4">
        <callback name="gda_reserved4" c:type="_gda_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="XaTransactionError"
                 c:type="GdaXaTransactionError"
                 glib:error-quark="gda_xa_transaction_error_quark">
      <member name="already_registered_error"
              value="0"
              c:identifier="GDA_XA_TRANSACTION_ALREADY_REGISTERED_ERROR"/>
      <member name="dtp_not_supported_error"
              value="1"
              c:identifier="GDA_XA_TRANSACTION_DTP_NOT_SUPPORTED_ERROR"/>
    </enumeration>
    <record name="XaTransactionId" c:type="GdaXaTransactionId">
      <field name="format" writable="1">
        <type name="uint32" c:type="guint32"/>
      </field>
      <field name="gtrid_length" writable="1">
        <type name="ushort" c:type="gushort"/>
      </field>
      <field name="bqual_length" writable="1">
        <type name="ushort" c:type="gushort"/>
      </field>
      <field name="data" writable="1">
        <array zero-terminated="0" c:type="char" fixed-size="128">
          <type name="int8"/>
        </array>
      </field>
      <method name="to_string" c:identifier="gda_xa_transaction_id_to_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
    </record>
    <record name="XaTransactionPrivate" c:type="GdaXaTransactionPrivate">
    </record>
    <function name="alphanum_to_text" c:identifier="gda_alphanum_to_text">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="text" transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="binary_copy" c:identifier="gda_binary_copy">
      <return-value transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="boxed" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="binary_free" c:identifier="gda_binary_free">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="boxed" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="blob_copy" c:identifier="gda_blob_copy">
      <return-value transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="boxed" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="blob_free" c:identifier="gda_blob_free">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="boxed" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="completion_list_get"
              c:identifier="gda_completion_list_get">
      <return-value transfer-ownership="full">
        <array c:type="gchar**">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="cnc" transfer-ownership="none">
          <type name="Connection" c:type="GdaConnection*"/>
        </parameter>
        <parameter name="sql" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="start" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="end" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="compute_dml_statements"
              c:identifier="gda_compute_dml_statements"
              throws="1">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cnc" transfer-ownership="none">
          <type name="Connection" c:type="GdaConnection*"/>
        </parameter>
        <parameter name="select_stmt" transfer-ownership="none">
          <type name="Statement" c:type="GdaStatement*"/>
        </parameter>
        <parameter name="require_pk" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="insert_stmt" transfer-ownership="none">
          <type name="Statement" c:type="GdaStatement**"/>
        </parameter>
        <parameter name="update_stmt" transfer-ownership="none">
          <type name="Statement" c:type="GdaStatement**"/>
        </parameter>
        <parameter name="delete_stmt" transfer-ownership="none">
          <type name="Statement" c:type="GdaStatement**"/>
        </parameter>
      </parameters>
    </function>
    <function name="compute_select_statement_from_update"
              c:identifier="gda_compute_select_statement_from_update"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="SqlStatement" c:type="GdaSqlStatement*"/>
      </return-value>
      <parameters>
        <parameter name="update_stmt" transfer-ownership="none">
          <type name="Statement" c:type="GdaStatement*"/>
        </parameter>
      </parameters>
    </function>
    <function name="compute_unique_table_row_condition"
              c:identifier="gda_compute_unique_table_row_condition"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="SqlExpr" c:type="GdaSqlExpr*"/>
      </return-value>
      <parameters>
        <parameter name="stsel" transfer-ownership="none">
          <type name="SqlStatementSelect" c:type="GdaSqlStatementSelect*"/>
        </parameter>
        <parameter name="mtable" transfer-ownership="none">
          <type name="MetaTable" c:type="GdaMetaTable*"/>
        </parameter>
        <parameter name="require_pk" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="compute_unique_table_row_condition_with_cnc"
              c:identifier="gda_compute_unique_table_row_condition_with_cnc"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="SqlExpr" c:type="GdaSqlExpr*"/>
      </return-value>
      <parameters>
        <parameter name="cnc" transfer-ownership="none">
          <type name="Connection" c:type="GdaConnection*"/>
        </parameter>
        <parameter name="stsel" transfer-ownership="none">
          <type name="SqlStatementSelect" c:type="GdaSqlStatementSelect*"/>
        </parameter>
        <parameter name="mtable" transfer-ownership="none">
          <type name="MetaTable" c:type="GdaMetaTable*"/>
        </parameter>
        <parameter name="require_pk" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="default_escape_string"
              c:identifier="gda_default_escape_string">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="default_unescape_string"
              c:identifier="gda_default_unescape_string">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="delete_row_from_table"
              c:identifier="gda_delete_row_from_table"
              throws="1">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cnc" transfer-ownership="none">
          <type name="Connection" c:type="GdaConnection*"/>
        </parameter>
        <parameter name="table" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="condition_column_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="condition_value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="dsn_split" c:identifier="gda_dsn_split">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="out_dsn" transfer-ownership="none">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </parameter>
        <parameter name="out_username" transfer-ownership="none">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </parameter>
        <parameter name="out_password" transfer-ownership="none">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="execute_non_select_command"
              c:identifier="gda_execute_non_select_command"
              throws="1">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="cnc" transfer-ownership="none">
          <type name="Connection" c:type="GdaConnection*"/>
        </parameter>
        <parameter name="sql" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="execute_select_command"
              c:identifier="gda_execute_select_command"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="DataModel" c:type="GdaDataModel*"/>
      </return-value>
      <parameters>
        <parameter name="cnc" transfer-ownership="none">
          <type name="Connection" c:type="GdaConnection*"/>
        </parameter>
        <parameter name="sql" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="g_type_from_string" c:identifier="gda_g_type_from_string">
      <return-value transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="g_type_to_string" c:identifier="gda_g_type_to_string">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
      </parameters>
    </function>
    <function name="geometricpoint_copy"
              c:identifier="gda_geometricpoint_copy">
      <return-value transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="boxed" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="geometricpoint_free"
              c:identifier="gda_geometricpoint_free">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="boxed" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_application_exec_path"
              c:identifier="gda_get_application_exec_path">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="app_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_default_handler"
              c:identifier="gda_get_default_handler">
      <return-value transfer-ownership="full">
        <type name="DataHandler" c:type="GdaDataHandler*"/>
      </return-value>
      <parameters>
        <parameter name="for_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
      </parameters>
    </function>
    <function name="identifier_equal" c:identifier="gda_identifier_equal">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="id1" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="id2" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="identifier_hash" c:identifier="gda_identifier_hash">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="id" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="init" c:identifier="gda_init">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="insert_row_into_table"
              c:identifier="gda_insert_row_into_table"
              introspectable="0">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cnc" transfer-ownership="none">
          <type name="Connection" c:type="GdaConnection*"/>
        </parameter>
        <parameter name="table" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="insert_row_into_table_v"
              c:identifier="gda_insert_row_into_table_v"
              throws="1">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cnc" transfer-ownership="none">
          <type name="Connection" c:type="GdaConnection*"/>
        </parameter>
        <parameter name="table" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="col_names" transfer-ownership="none">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </parameter>
        <parameter name="values" transfer-ownership="none">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </parameter>
      </parameters>
    </function>
    <function name="log_disable" c:identifier="gda_log_disable">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="log_enable" c:identifier="gda_log_enable">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="log_error" c:identifier="gda_log_error" introspectable="0">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="format" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="log_is_enabled" c:identifier="gda_log_is_enabled">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="log_message"
              c:identifier="gda_log_message"
              introspectable="0">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="format" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="numeric_copy" c:identifier="gda_numeric_copy">
      <return-value transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="boxed" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="numeric_free" c:identifier="gda_numeric_free">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="boxed" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="parse_iso8601_date" c:identifier="gda_parse_iso8601_date">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="gdate" transfer-ownership="none">
          <type name="GLib.Date" c:type="GDate*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="parse_iso8601_time" c:identifier="gda_parse_iso8601_time">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="timegda" transfer-ownership="none">
          <type name="GLib.Time" c:type="GdaTime*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="parse_iso8601_timestamp"
              c:identifier="gda_parse_iso8601_timestamp">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="timestamp" transfer-ownership="none">
          <type name="Timestamp" c:type="GdaTimestamp*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="perform_create_database"
              c:identifier="gda_perform_create_database"
              throws="1">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="provider" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="op" transfer-ownership="none">
          <type name="ServerOperation" c:type="GdaServerOperation*"/>
        </parameter>
      </parameters>
    </function>
    <function name="perform_create_table"
              c:identifier="gda_perform_create_table"
              throws="1">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="op" transfer-ownership="none">
          <type name="ServerOperation" c:type="GdaServerOperation*"/>
        </parameter>
      </parameters>
    </function>
    <function name="perform_drop_database"
              c:identifier="gda_perform_drop_database"
              throws="1">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="provider" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="op" transfer-ownership="none">
          <type name="ServerOperation" c:type="GdaServerOperation*"/>
        </parameter>
      </parameters>
    </function>
    <function name="perform_drop_table"
              c:identifier="gda_perform_drop_table"
              throws="1">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="op" transfer-ownership="none">
          <type name="ServerOperation" c:type="GdaServerOperation*"/>
        </parameter>
      </parameters>
    </function>
    <function name="prepare_create_database"
              c:identifier="gda_prepare_create_database"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="ServerOperation" c:type="GdaServerOperation*"/>
      </return-value>
      <parameters>
        <parameter name="provider" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="db_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="prepare_create_table"
              c:identifier="gda_prepare_create_table"
              introspectable="0">
      <return-value transfer-ownership="full">
        <type name="ServerOperation" c:type="GdaServerOperation*"/>
      </return-value>
      <parameters>
        <parameter name="cnc" transfer-ownership="none">
          <type name="Connection" c:type="GdaConnection*"/>
        </parameter>
        <parameter name="table_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="prepare_drop_database"
              c:identifier="gda_prepare_drop_database"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="ServerOperation" c:type="GdaServerOperation*"/>
      </return-value>
      <parameters>
        <parameter name="provider" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="db_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="prepare_drop_table"
              c:identifier="gda_prepare_drop_table"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="ServerOperation" c:type="GdaServerOperation*"/>
      </return-value>
      <parameters>
        <parameter name="cnc" transfer-ownership="none">
          <type name="Connection" c:type="GdaConnection*"/>
        </parameter>
        <parameter name="table_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="rfc1738_decode" c:identifier="gda_rfc1738_decode">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="rfc1738_encode" c:identifier="gda_rfc1738_encode">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="select_alter_select_for_empty"
              c:identifier="gda_select_alter_select_for_empty"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="Statement" c:type="GdaStatement*"/>
      </return-value>
      <parameters>
        <parameter name="stmt" transfer-ownership="none">
          <type name="Statement" c:type="GdaStatement*"/>
        </parameter>
      </parameters>
    </function>
    <function name="sql_identifier_add_quotes"
              c:identifier="gda_sql_identifier_add_quotes">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="sql_identifier_needs_quotes"
              c:identifier="gda_sql_identifier_needs_quotes">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="sql_identifier_quote"
              c:identifier="gda_sql_identifier_quote">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="id" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="cnc" transfer-ownership="none">
          <type name="Connection" c:type="GdaConnection*"/>
        </parameter>
        <parameter name="prov" transfer-ownership="none">
          <type name="ServerProvider" c:type="GdaServerProvider*"/>
        </parameter>
        <parameter name="meta_store_convention" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="force_quotes" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="sql_identifier_remove_quotes"
              c:identifier="gda_sql_identifier_remove_quotes">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="sql_identifier_split"
              c:identifier="gda_sql_identifier_split">
      <return-value transfer-ownership="full">
        <array c:type="gchar**">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="id" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="sql_operation_operator_from_string"
              c:identifier="gda_sql_operation_operator_from_string">
      <return-value transfer-ownership="full">
        <type name="SqlOperatorType" c:type="GdaSqlOperatorType"/>
      </return-value>
      <parameters>
        <parameter name="op" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="sql_operation_operator_to_string"
              c:identifier="gda_sql_operation_operator_to_string">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="op" transfer-ownership="none">
          <type name="SqlOperatorType" c:type="GdaSqlOperatorType"/>
        </parameter>
      </parameters>
    </function>
    <function name="sql_select_join_type_to_string"
              c:identifier="gda_sql_select_join_type_to_string">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="SqlSelectJoinType" c:type="GdaSqlSelectJoinType"/>
        </parameter>
      </parameters>
    </function>
    <function name="sql_statement_get_contents_infos"
              c:identifier="gda_sql_statement_get_contents_infos">
      <return-value transfer-ownership="full">
        <type name="SqlStatementContentsInfo"
              c:type="GdaSqlStatementContentsInfo*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="SqlStatementType" c:type="GdaSqlStatementType"/>
        </parameter>
      </parameters>
    </function>
    <function name="sql_statement_string_to_type"
              c:identifier="gda_sql_statement_string_to_type">
      <return-value transfer-ownership="full">
        <type name="SqlStatementType" c:type="GdaSqlStatementType"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="sql_statement_type_to_string"
              c:identifier="gda_sql_statement_type_to_string">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="SqlStatementType" c:type="GdaSqlStatementType"/>
        </parameter>
      </parameters>
    </function>
    <function name="sql_value_stringify"
              c:identifier="gda_sql_value_stringify">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="string_to_binary" c:identifier="gda_string_to_binary">
      <return-value transfer-ownership="full">
        <type name="Binary" c:type="GdaBinary*"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="string_to_blob" c:identifier="gda_string_to_blob">
      <return-value transfer-ownership="full">
        <type name="Blob" c:type="GdaBlob*"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="text_to_alphanum" c:identifier="gda_text_to_alphanum">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="text" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_copy" c:identifier="gda_time_copy">
      <return-value transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="boxed" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_free" c:identifier="gda_time_free">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="boxed" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="timestamp_copy" c:identifier="gda_timestamp_copy">
      <return-value transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="boxed" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="timestamp_free" c:identifier="gda_timestamp_free">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="boxed" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="update_row_in_table"
              c:identifier="gda_update_row_in_table"
              introspectable="0">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cnc" transfer-ownership="none">
          <type name="Connection" c:type="GdaConnection*"/>
        </parameter>
        <parameter name="table" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="condition_column_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="condition_value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="update_row_in_table_v"
              c:identifier="gda_update_row_in_table_v"
              throws="1">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cnc" transfer-ownership="none">
          <type name="Connection" c:type="GdaConnection*"/>
        </parameter>
        <parameter name="table" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="condition_column_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="condition_value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="col_names" transfer-ownership="none">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </parameter>
        <parameter name="values" transfer-ownership="none">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </parameter>
      </parameters>
    </function>
    <function name="utility_check_data_model"
              c:identifier="gda_utility_check_data_model"
              introspectable="0">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="model" transfer-ownership="none">
          <type name="DataModel" c:type="GdaDataModel*"/>
        </parameter>
        <parameter name="nbcols" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="utility_data_model_dump_data_to_xml"
              c:identifier="gda_utility_data_model_dump_data_to_xml">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="model" transfer-ownership="none">
          <type name="DataModel" c:type="GdaDataModel*"/>
        </parameter>
        <parameter name="parent" transfer-ownership="none">
          <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
        </parameter>
        <parameter name="cols"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="none">
          <type name="int" c:type="gint*"/>
        </parameter>
        <parameter name="nb_cols" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="rows"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="none">
          <type name="int" c:type="gint*"/>
        </parameter>
        <parameter name="nb_rows" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="use_col_ids" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="utility_data_model_find_column_description"
              c:identifier="gda_utility_data_model_find_column_description">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="model" transfer-ownership="none">
          <type name="DataSelect" c:type="GdaDataSelect*"/>
        </parameter>
        <parameter name="field_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utility_holder_load_attributes"
              c:identifier="gda_utility_holder_load_attributes"
              throws="1">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="holder" transfer-ownership="none">
          <type name="Holder" c:type="GdaHolder*"/>
        </parameter>
        <parameter name="node" transfer-ownership="none">
          <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
        </parameter>
        <parameter name="sources" transfer-ownership="none">
          <type name="GLib.SList" c:type="GSList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </parameter>
      </parameters>
    </function>
    <function name="value_compare" c:identifier="gda_value_compare">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="value1" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="value2" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_copy" c:identifier="gda_value_copy">
      <return-value transfer-ownership="full">
        <type name="GObject.Value" c:type="GValue*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_differ" c:identifier="gda_value_differ">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="value1" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="value2" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_free" c:identifier="gda_value_free">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_binary" c:identifier="gda_value_get_binary">
      <return-value transfer-ownership="none">
        <type name="Binary" c:type="GdaBinary*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_blob" c:identifier="gda_value_get_blob">
      <return-value transfer-ownership="none">
        <type name="Blob" c:type="GdaBlob*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_geometric_point"
              c:identifier="gda_value_get_geometric_point">
      <return-value transfer-ownership="none">
        <type name="GeometricPoint" c:type="GdaGeometricPoint*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_list" c:identifier="gda_value_get_list">
      <return-value transfer-ownership="none">
        <type name="ValueList" c:type="GdaValueList*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_numeric" c:identifier="gda_value_get_numeric">
      <return-value transfer-ownership="none">
        <type name="Numeric" c:type="GdaNumeric*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_short" c:identifier="gda_value_get_short">
      <return-value transfer-ownership="none">
        <type name="short" c:type="gshort"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_time" c:identifier="gda_value_get_time">
      <return-value transfer-ownership="none">
        <type name="GLib.Time" c:type="GdaTime*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_timestamp"
              c:identifier="gda_value_get_timestamp">
      <return-value transfer-ownership="none">
        <type name="Timestamp" c:type="GdaTimestamp*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_ushort" c:identifier="gda_value_get_ushort">
      <return-value transfer-ownership="none">
        <type name="ushort" c:type="gushort"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_is_null" c:identifier="gda_value_is_null">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_is_number" c:identifier="gda_value_is_number">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_new" c:identifier="gda_value_new">
      <return-value transfer-ownership="full">
        <type name="GObject.Value" c:type="GValue*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_new_binary" c:identifier="gda_value_new_binary">
      <return-value transfer-ownership="full">
        <type name="GObject.Value" c:type="GValue*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <array c:type="guchar*">
            <type name="uint8"/>
          </array>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="long" c:type="glong"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_new_blob" c:identifier="gda_value_new_blob">
      <return-value transfer-ownership="full">
        <type name="GObject.Value" c:type="GValue*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <array c:type="guchar*">
            <type name="uint8"/>
          </array>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="long" c:type="glong"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_new_blob_from_file"
              c:identifier="gda_value_new_blob_from_file">
      <return-value transfer-ownership="full">
        <type name="GObject.Value" c:type="GValue*"/>
      </return-value>
      <parameters>
        <parameter name="filename" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_new_from_string"
              c:identifier="gda_value_new_from_string">
      <return-value transfer-ownership="full">
        <type name="GObject.Value" c:type="GValue*"/>
      </return-value>
      <parameters>
        <parameter name="as_string" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_new_from_xml" c:identifier="gda_value_new_from_xml">
      <return-value transfer-ownership="full">
        <type name="GObject.Value" c:type="GValue*"/>
      </return-value>
      <parameters>
        <parameter name="node" transfer-ownership="none">
          <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_new_timestamp_from_timet"
              c:identifier="gda_value_new_timestamp_from_timet">
      <return-value transfer-ownership="full">
        <type name="GObject.Value" c:type="GValue*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <type name="long" c:type="time_t"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_reset_with_type"
              c:identifier="gda_value_reset_with_type">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_binary" c:identifier="gda_value_set_binary">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="binary" transfer-ownership="none">
          <type name="Binary" c:type="GdaBinary*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_blob" c:identifier="gda_value_set_blob">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="blob" transfer-ownership="none">
          <type name="Blob" c:type="GdaBlob*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_from_string"
              c:identifier="gda_value_set_from_string">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="as_string" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_from_value"
              c:identifier="gda_value_set_from_value">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="from" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_geometric_point"
              c:identifier="gda_value_set_geometric_point">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="val" transfer-ownership="none">
          <type name="GeometricPoint" c:type="GdaGeometricPoint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_list" c:identifier="gda_value_set_list">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="val" transfer-ownership="none">
          <type name="ValueList" c:type="GdaValueList*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_null" c:identifier="gda_value_set_null">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_numeric" c:identifier="gda_value_set_numeric">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="val" transfer-ownership="none">
          <type name="Numeric" c:type="GdaNumeric*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_short" c:identifier="gda_value_set_short">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="val" transfer-ownership="none">
          <type name="short" c:type="gshort"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_time" c:identifier="gda_value_set_time">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="val" transfer-ownership="none">
          <type name="GLib.Time" c:type="GdaTime*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_timestamp"
              c:identifier="gda_value_set_timestamp">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="val" transfer-ownership="none">
          <type name="Timestamp" c:type="GdaTimestamp*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_ushort" c:identifier="gda_value_set_ushort">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="val" transfer-ownership="none">
          <type name="ushort" c:type="gushort"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_stringify" c:identifier="gda_value_stringify">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_take_binary" c:identifier="gda_value_take_binary">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="binary" transfer-ownership="none">
          <type name="Binary" c:type="GdaBinary*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_take_blob" c:identifier="gda_value_take_blob">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="blob" transfer-ownership="none">
          <type name="Blob" c:type="GdaBlob*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_to_xml" c:identifier="gda_value_to_xml">
      <return-value transfer-ownership="full">
        <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
